!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ALT	kern/console.c	218;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
C	kern/console.c	285;"	d	file:
CAPSLOCK	kern/console.c	220;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD $/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CMDBUF_SIZE	kern/monitor.c	14;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
COM1	kern/console.c	26;"	d	file:
COM_DLL	kern/console.c	30;"	d	file:
COM_DLM	kern/console.c	31;"	d	file:
COM_FCR	kern/console.c	35;"	d	file:
COM_IER	kern/console.c	32;"	d	file:
COM_IER_RDI	kern/console.c	33;"	d	file:
COM_IIR	kern/console.c	34;"	d	file:
COM_LCR	kern/console.c	36;"	d	file:
COM_LCR_DLAB	kern/console.c	37;"	d	file:
COM_LCR_WLEN8	kern/console.c	38;"	d	file:
COM_LSR	kern/console.c	43;"	d	file:
COM_LSR_DATA	kern/console.c	44;"	d	file:
COM_LSR_TSRE	kern/console.c	46;"	d	file:
COM_LSR_TXRDY	kern/console.c	45;"	d	file:
COM_MCR	kern/console.c	39;"	d	file:
COM_MCR_DTR	kern/console.c	41;"	d	file:
COM_MCR_OUT2	kern/console.c	42;"	d	file:
COM_MCR_RTS	kern/console.c	40;"	d	file:
COM_RX	kern/console.c	28;"	d	file:
COM_TX	kern/console.c	29;"	d	file:
CONSBUFSIZE	kern/console.c	381;"	d	file:
CR0_AM	inc/mmu.h	88;"	d
CR0_CD	inc/mmu.h	90;"	d
CR0_EM	inc/mmu.h	83;"	d
CR0_ET	inc/mmu.h	85;"	d
CR0_MP	inc/mmu.h	82;"	d
CR0_NE	inc/mmu.h	86;"	d
CR0_NW	inc/mmu.h	89;"	d
CR0_PE	inc/mmu.h	81;"	d
CR0_PG	inc/mmu.h	91;"	d
CR0_TS	inc/mmu.h	84;"	d
CR0_WP	inc/mmu.h	87;"	d
CR4_DE	inc/mmu.h	96;"	d
CR4_MCE	inc/mmu.h	94;"	d
CR4_PCE	inc/mmu.h	93;"	d
CR4_PSE	inc/mmu.h	95;"	d
CR4_PVI	inc/mmu.h	98;"	d
CR4_TSD	inc/mmu.h	97;"	d
CR4_VME	inc/mmu.h	99;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	217;"	d	file:
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
Command::desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:	access:public
Command::func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:	access:public
Command::name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:	access:public
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
E0ESC	kern/console.c	224;"	d	file:
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
EXTPHYSMEM	inc/memlayout.h	88;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	= 2,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon1
E_FAULT	inc/error.h	/^	E_FAULT		= 6,	\/\/ Memory fault$/;"	e	enum:__anon1
E_INVAL	inc/error.h	/^	E_INVAL		= 3,	\/\/ Invalid parameter$/;"	e	enum:__anon1
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	= 5,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon1
E_NO_MEM	inc/error.h	/^	E_NO_MEM	= 4,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon1
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon1
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Eipdebuginfo::eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo	access:public
Elf	inc/elf.h	/^struct Elf {$/;"	s
Elf::e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf	access:public
Elf::e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf	access:public
Elf::e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf	access:public
Elf::e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf	access:public
Elf::e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf	access:public
Elf::e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf	access:public
Elf::e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf	access:public
Elf::e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf	access:public
Elf::e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf	access:public
Elf::e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf	access:public
Elf::e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf	access:public
Elf::e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf	access:public
Elf::e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf	access:public
Elf::e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf	access:public
Elf::e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf	access:public
FEC_PR	inc/mmu.h	125;"	d
FEC_U	inc/mmu.h	127;"	d
FEC_WR	inc/mmu.h	126;"	d
FL_AC	inc/mmu.h	119;"	d
FL_AF	inc/mmu.h	104;"	d
FL_CF	inc/mmu.h	102;"	d
FL_DF	inc/mmu.h	109;"	d
FL_ID	inc/mmu.h	122;"	d
FL_IF	inc/mmu.h	108;"	d
FL_IOPL_0	inc/mmu.h	112;"	d
FL_IOPL_1	inc/mmu.h	113;"	d
FL_IOPL_2	inc/mmu.h	114;"	d
FL_IOPL_3	inc/mmu.h	115;"	d
FL_IOPL_MASK	inc/mmu.h	111;"	d
FL_NT	inc/mmu.h	116;"	d
FL_OF	inc/mmu.h	110;"	d
FL_PF	inc/mmu.h	103;"	d
FL_RF	inc/mmu.h	117;"	d
FL_SF	inc/mmu.h	106;"	d
FL_TF	inc/mmu.h	107;"	d
FL_VIF	inc/mmu.h	120;"	d
FL_VIP	inc/mmu.h	121;"	d
FL_VM	inc/mmu.h	118;"	d
FL_ZF	inc/mmu.h	105;"	d
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	17;"	d
GD_KT	inc/memlayout.h	16;"	d
GD_TSS	inc/memlayout.h	20;"	d
GD_UD	inc/memlayout.h	19;"	d
GD_UT	inc/memlayout.h	18;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
Gatedesc::gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_ss	inc/mmu.h	/^	unsigned gd_ss : 16;         \/\/ segment selector$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc	access:public
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
IOPHYSMEM	inc/memlayout.h	87;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_MALLOC_H	inc/malloc.h	2;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_QUEUE_H	inc/queue.h	36;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	82;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	95;"	d
KSTKSIZE	inc/memlayout.h	96;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=1$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP := .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LIST_EMPTY	inc/queue.h	142;"	d
LIST_ENTRY	inc/queue.h	129;"	d
LIST_FIRST	inc/queue.h	147;"	d
LIST_FOREACH	inc/queue.h	160;"	d
LIST_HEAD	inc/queue.h	109;"	d
LIST_HEAD_INITIALIZER	inc/queue.h	118;"	d
LIST_INIT	inc/queue.h	168;"	d
LIST_INSERT_AFTER	inc/queue.h	177;"	d
LIST_INSERT_BEFORE	inc/queue.h	190;"	d
LIST_INSERT_HEAD	inc/queue.h	201;"	d
LIST_NEXT	inc/queue.h	153;"	d
LIST_REMOVE	inc/queue.h	212;"	d
MAX	inc/types.h	48;"	d
MAXARGS	kern/monitor.c	71;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon1
MIN	inc/types.h	42;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCOMMANDS	kern/monitor.c	28;"	d	file:
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	214;"	d	file:
NPDENTRIES	inc/mmu.h	47;"	d
NPTENTRIES	inc/mmu.h	48;"	d
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NUMLOCK	kern/console.c	221;"	d	file:
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Wed Sep 7 19:17:10 EDT 2011$/;"	m
PDX	inc/mmu.h	34;"	d
PDXSHIFT	inc/mmu.h	57;"	d
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	130;"	d
PGADDR	inc/mmu.h	44;"	d
PGOFF	inc/mmu.h	41;"	d
PGSHIFT	inc/mmu.h	51;"	d
PGSIZE	inc/mmu.h	50;"	d
PPN	inc/mmu.h	30;"	d
PTE_A	inc/mmu.h	65;"	d
PTE_ADDR	inc/mmu.h	78;"	d
PTE_ALLOWED	inc/mmu.h	75;"	d
PTE_AVAIL	inc/mmu.h	72;"	d
PTE_D	inc/mmu.h	66;"	d
PTE_G	inc/mmu.h	68;"	d
PTE_P	inc/mmu.h	60;"	d
PTE_PCD	inc/mmu.h	64;"	d
PTE_PS	inc/mmu.h	67;"	d
PTE_PWT	inc/mmu.h	63;"	d
PTE_U	inc/mmu.h	62;"	d
PTE_W	inc/mmu.h	61;"	d
PTSHIFT	inc/mmu.h	54;"	d
PTSIZE	inc/mmu.h	53;"	d
PTX	inc/mmu.h	38;"	d
PTXSHIFT	inc/mmu.h	56;"	d
Page	inc/memlayout.h	/^struct Page {$/;"	s
Page::pp_link	inc/memlayout.h	/^	Page_LIST_entry_t pp_link;	\/* free list link *\/$/;"	m	struct:Page	access:public
Page::pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:Page	access:public
Page_LIST_entry_t	inc/memlayout.h	/^typedef LIST_ENTRY(Page) Page_LIST_entry_t;$/;"	t
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Proghdr::p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr	access:public
Proghdr::p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr	access:public
Proghdr::p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr	access:public
Proghdr::p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr	access:public
Proghdr::p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr	access:public
Proghdr::p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr	access:public
Proghdr::p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr	access:public
Proghdr::p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr	access:public
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
Pseudodesc::pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	access:public
Pseudodesc::pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	access:public
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu > \/dev\/null; \\$/;"	m
QEMUGDB	GNUmakefile	/^QEMUGDB = $(shell if $(QEMU) -nographic -help | grep -q '^-gdb'; \\$/;"	m
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -hda $(OBJDIR)\/kern\/kernel.img -serial mon:stdio $(QEMUEXTRA)$/;"	m
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
ROUNDDOWN	inc/types.h	57;"	d
ROUNDUP	inc/types.h	63;"	d
SCROLLLOCK	kern/console.c	222;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SEG	inc/mmu.h	144;"	d
SEG	inc/mmu.h	174;"	d
SEG16	inc/mmu.h	178;"	d
SEG_FAULT	inc/mmu.h	172;"	d
SEG_NULL	inc/mmu.h	141;"	d
SEG_NULL	inc/mmu.h	170;"	d
SETCALLGATE	inc/mmu.h	298;"	d
SETGATE	inc/mmu.h	284;"	d
SHIFT	kern/console.c	216;"	d	file:
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STA_A	inc/mmu.h	191;"	d
STA_C	inc/mmu.h	188;"	d
STA_E	inc/mmu.h	187;"	d
STA_R	inc/mmu.h	190;"	d
STA_W	inc/mmu.h	189;"	d
STA_X	inc/mmu.h	186;"	d
STS_CG16	inc/mmu.h	197;"	d
STS_CG32	inc/mmu.h	203;"	d
STS_IG16	inc/mmu.h	199;"	d
STS_IG32	inc/mmu.h	204;"	d
STS_LDT	inc/mmu.h	195;"	d
STS_T16A	inc/mmu.h	194;"	d
STS_T16B	inc/mmu.h	196;"	d
STS_T32A	inc/mmu.h	201;"	d
STS_T32B	inc/mmu.h	202;"	d
STS_TG	inc/mmu.h	198;"	d
STS_TG16	inc/mmu.h	200;"	d
STS_TG32	inc/mmu.h	205;"	d
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Secthdr::sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr	access:public
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Segdesc::sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc	access:public
Segdesc::sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc	access:public
Segdesc::sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc	access:public
Segdesc::sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc	access:public
Segdesc::sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc	access:public
Segdesc::sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc	access:public
Segdesc::sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc	access:public
Segdesc::sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc	access:public
Segdesc::sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc	access:public
Stab	inc/stab.h	/^struct Stab {$/;"	s
Stab::n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab	access:public
Stab::n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab	access:public
Stab::n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab	access:public
Stab::n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab	access:public
Stab::n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab	access:public
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TOP	GNUmakefile	/^TOP = .$/;"	m
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
Taskstate::ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate	access:public
Taskstate::ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate	access:public
Taskstate::ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate	access:public
UENVS	inc/memlayout.h	109;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	97;"	d
UPAGES	inc/memlayout.h	107;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	132;"	d
USTACKTOP	inc/memlayout.h	121;"	d
UTEMP	inc/memlayout.h	127;"	d
UTEXT	inc/memlayout.h	124;"	d
UTOP	inc/memlayout.h	116;"	d
UVPT	inc/memlayout.h	105;"	d
UXSTACKTOP	inc/memlayout.h	118;"	d
V	conf/env.mk	/^V = @$/;"	m
VPD	inc/mmu.h	35;"	d
VPN	inc/mmu.h	31;"	d
VPT	inc/memlayout.h	94;"	d
WHITESPACE	kern/monitor.c	70;"	d	file:
_CONSOLE_H_	kern/console.h	4;"	d
__anon2::buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon2	file:	access:public
__anon2::rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon2	file:	access:public
__anon2::wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon2	file:	access:public
_panic	inc/assert.h	/^void _panic(const char*, int, const char*, ...) __attribute__((noreturn));$/;"	p	signature:(const char*, int, const char*, ...)
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f	signature:(const char *file, int line, const char *fmt,...)
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_warn	inc/assert.h	/^void _warn(const char*, int, const char*, ...);$/;"	p	signature:(const char*, int, const char*, ...)
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f	signature:(const char *file, int line, const char *fmt,...)
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
assert	inc/assert.h	14;"	d
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
bool	inc/types.h	/^typedef int bool;$/;"	t
bootmain	boot/main.c	/^bootmain(void)$/;"	f	signature:(void)
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f	signature:(void)
breakpoint	inc/x86.h	/^static __inline void breakpoint(void) __attribute__((always_inline));$/;"	p	signature:(void)
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon2	file:	access:public
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:	access:public
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:	signature:(void)
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:	signature:(int c)
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
char	obj/kern/kernel.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check	grade-lab1.sh	/^check () {$/;"	f
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:	access:public
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon2	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f	signature:(void)
cons_getc	kern/console.h	/^int cons_getc(void);$/;"	p	signature:(void)
cons_init	kern/console.c	/^cons_init(void)$/;"	f	signature:(void)
cons_init	kern/console.h	/^void cons_init(void);$/;"	p	signature:(void)
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:	signature:(int (*proc)(void))
cons_intr	kern/console.c	/^static void cons_intr(int (*proc)(void));$/;"	p	file:	signature:(int (*proc)(void))
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:	signature:(int c)
cons_putc	kern/console.c	/^static void cons_putc(int c);$/;"	p	file:	signature:(int c)
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	inc/stdio.h	/^int	cprintf(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f	signature:(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)
cpuid	inc/x86.h	/^static __inline void cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp);$/;"	p	signature:(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)
cputchar	inc/stdio.h	/^void	cputchar(int c);$/;"	p	signature:(int c)
cputchar	kern/console.c	/^cputchar(int c)$/;"	f	signature:(int c)
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] = $/;"	v	file:
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f	signature:(uintptr_t addr, struct Eipdebuginfo *info)
debuginfo_eip	kern/kdebug.h	/^int debuginfo_eip(uintptr_t eip, struct Eipdebuginfo *info);$/;"	p	signature:(uintptr_t eip, struct Eipdebuginfo *info)
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
delay	kern/console.c	/^delay(void)$/;"	f	file:	signature:(void)
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:	access:public
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf	access:public
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf	access:public
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf	access:public
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf	access:public
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf	access:public
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf	access:public
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf	access:public
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf	access:public
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf	access:public
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf	access:public
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf	access:public
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf	access:public
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf	access:public
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf	access:public
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf	access:public
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:	access:public
echo_n	grade-functions.sh	/^echo_n () {$/;"	f
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo	access:public
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo	access:public
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
entry	kern/entry.S	/^entry:$/;"	l
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4 66                	in     $0x66,%al$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 00 11 00       	mov    $0x110000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 00 11 f0       	mov    $0xf0110000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 03 01 00 00       	call   f0100141 <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <_warn>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	53                   	push   %ebx$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100047	obj/kern/kernel.asm	/^f0100047:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010004a	obj/kern/kernel.asm	/^f010004a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010004d	obj/kern/kernel.asm	/^f010004d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100051	obj/kern/kernel.asm	/^f0100051:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100054	obj/kern/kernel.asm	/^f0100054:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100058	obj/kern/kernel.asm	/^f0100058:	c7 04 24 00 1a 10 f0 	movl   $0xf0101a00,(%esp)$/;"	l
f010005f	obj/kern/kernel.asm	/^f010005f:	e8 c7 08 00 00       	call   f010092b <cprintf>$/;"	l
f0100064	obj/kern/kernel.asm	/^f0100064:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100068	obj/kern/kernel.asm	/^f0100068:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010006b	obj/kern/kernel.asm	/^f010006b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010006e	obj/kern/kernel.asm	/^f010006e:	e8 85 08 00 00       	call   f01008f8 <vcprintf>$/;"	l
f0100073	obj/kern/kernel.asm	/^f0100073:	c7 04 24 ab 1a 10 f0 	movl   $0xf0101aab,(%esp)$/;"	l
f010007a	obj/kern/kernel.asm	/^f010007a:	e8 ac 08 00 00       	call   f010092b <cprintf>$/;"	l
f010007f	obj/kern/kernel.asm	/^f010007f:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100082	obj/kern/kernel.asm	/^f0100082:	5b                   	pop    %ebx$/;"	l
f0100083	obj/kern/kernel.asm	/^f0100083:	5d                   	pop    %ebp$/;"	l
f0100084	obj/kern/kernel.asm	/^f0100084:	c3                   	ret    $/;"	l
f0100085	obj/kern/kernel.asm	/^f0100085 <_panic>:$/;"	l
f0100085	obj/kern/kernel.asm	/^f0100085:	55                   	push   %ebp$/;"	l
f0100086	obj/kern/kernel.asm	/^f0100086:	89 e5                	mov    %esp,%ebp$/;"	l
f0100088	obj/kern/kernel.asm	/^f0100088:	56                   	push   %esi$/;"	l
f0100089	obj/kern/kernel.asm	/^f0100089:	53                   	push   %ebx$/;"	l
f010008a	obj/kern/kernel.asm	/^f010008a:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010008d	obj/kern/kernel.asm	/^f010008d:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0100090	obj/kern/kernel.asm	/^f0100090:	83 3d 00 23 11 f0 00 	cmpl   $0x0,0xf0112300$/;"	l
f0100097	obj/kern/kernel.asm	/^f0100097:	75 3d                	jne    f01000d6 <_panic+0x51>$/;"	l
f0100099	obj/kern/kernel.asm	/^f0100099:	89 35 00 23 11 f0    	mov    %esi,0xf0112300$/;"	l
f010009f	obj/kern/kernel.asm	/^f010009f:	fa                   	cli    $/;"	l
f01000a0	obj/kern/kernel.asm	/^f01000a0:	fc                   	cld    $/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f01000a4	obj/kern/kernel.asm	/^f01000a4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01000a7	obj/kern/kernel.asm	/^f01000a7:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01000ab	obj/kern/kernel.asm	/^f01000ab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01000ae	obj/kern/kernel.asm	/^f01000ae:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01000b2	obj/kern/kernel.asm	/^f01000b2:	c7 04 24 1a 1a 10 f0 	movl   $0xf0101a1a,(%esp)$/;"	l
f01000b9	obj/kern/kernel.asm	/^f01000b9:	e8 6d 08 00 00       	call   f010092b <cprintf>$/;"	l
f01000be	obj/kern/kernel.asm	/^f01000be:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01000c2	obj/kern/kernel.asm	/^f01000c2:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01000c5	obj/kern/kernel.asm	/^f01000c5:	e8 2e 08 00 00       	call   f01008f8 <vcprintf>$/;"	l
f01000ca	obj/kern/kernel.asm	/^f01000ca:	c7 04 24 ab 1a 10 f0 	movl   $0xf0101aab,(%esp)$/;"	l
f01000d1	obj/kern/kernel.asm	/^f01000d1:	e8 55 08 00 00       	call   f010092b <cprintf>$/;"	l
f01000d6	obj/kern/kernel.asm	/^f01000d6:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01000dd	obj/kern/kernel.asm	/^f01000dd:	e8 ca 06 00 00       	call   f01007ac <monitor>$/;"	l
f01000e2	obj/kern/kernel.asm	/^f01000e2:	eb f2                	jmp    f01000d6 <_panic+0x51>$/;"	l
f01000e4	obj/kern/kernel.asm	/^f01000e4 <test_backtrace>:$/;"	l
f01000e4	obj/kern/kernel.asm	/^f01000e4:	55                   	push   %ebp$/;"	l
f01000e5	obj/kern/kernel.asm	/^f01000e5:	89 e5                	mov    %esp,%ebp$/;"	l
f01000e7	obj/kern/kernel.asm	/^f01000e7:	53                   	push   %ebx$/;"	l
f01000e8	obj/kern/kernel.asm	/^f01000e8:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01000eb	obj/kern/kernel.asm	/^f01000eb:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01000ee	obj/kern/kernel.asm	/^f01000ee:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01000f2	obj/kern/kernel.asm	/^f01000f2:	c7 04 24 32 1a 10 f0 	movl   $0xf0101a32,(%esp)$/;"	l
f01000f9	obj/kern/kernel.asm	/^f01000f9:	e8 2d 08 00 00       	call   f010092b <cprintf>$/;"	l
f01000fe	obj/kern/kernel.asm	/^f01000fe:	85 db                	test   %ebx,%ebx$/;"	l
f0100100	obj/kern/kernel.asm	/^f0100100:	7e 0d                	jle    f010010f <test_backtrace+0x2b>$/;"	l
f0100102	obj/kern/kernel.asm	/^f0100102:	8d 43 ff             	lea    -0x1(%ebx),%eax$/;"	l
f0100105	obj/kern/kernel.asm	/^f0100105:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100108	obj/kern/kernel.asm	/^f0100108:	e8 d7 ff ff ff       	call   f01000e4 <test_backtrace>$/;"	l
f010010d	obj/kern/kernel.asm	/^f010010d:	eb 1c                	jmp    f010012b <test_backtrace+0x47>$/;"	l
f010010f	obj/kern/kernel.asm	/^f010010f:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0100116	obj/kern/kernel.asm	/^f0100116:	00 $/;"	l
f0100117	obj/kern/kernel.asm	/^f0100117:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010011e	obj/kern/kernel.asm	/^f010011e:	00 $/;"	l
f010011f	obj/kern/kernel.asm	/^f010011f:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0100126	obj/kern/kernel.asm	/^f0100126:	e8 75 05 00 00       	call   f01006a0 <mon_backtrace>$/;"	l
f010012b	obj/kern/kernel.asm	/^f010012b:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010012f	obj/kern/kernel.asm	/^f010012f:	c7 04 24 4e 1a 10 f0 	movl   $0xf0101a4e,(%esp)$/;"	l
f0100136	obj/kern/kernel.asm	/^f0100136:	e8 f0 07 00 00       	call   f010092b <cprintf>$/;"	l
f010013b	obj/kern/kernel.asm	/^f010013b:	83 c4 14             	add    $0x14,%esp$/;"	l
f010013e	obj/kern/kernel.asm	/^f010013e:	5b                   	pop    %ebx$/;"	l
f010013f	obj/kern/kernel.asm	/^f010013f:	5d                   	pop    %ebp$/;"	l
f0100140	obj/kern/kernel.asm	/^f0100140:	c3                   	ret    $/;"	l
f0100141	obj/kern/kernel.asm	/^f0100141 <i386_init>:$/;"	l
f0100141	obj/kern/kernel.asm	/^f0100141:	55                   	push   %ebp$/;"	l
f0100142	obj/kern/kernel.asm	/^f0100142:	89 e5                	mov    %esp,%ebp$/;"	l
f0100144	obj/kern/kernel.asm	/^f0100144:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100147	obj/kern/kernel.asm	/^f0100147:	b8 60 29 11 f0       	mov    $0xf0112960,%eax$/;"	l
f010014c	obj/kern/kernel.asm	/^f010014c:	2d 00 23 11 f0       	sub    $0xf0112300,%eax$/;"	l
f0100151	obj/kern/kernel.asm	/^f0100151:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100155	obj/kern/kernel.asm	/^f0100155:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010015c	obj/kern/kernel.asm	/^f010015c:	00 $/;"	l
f010015d	obj/kern/kernel.asm	/^f010015d:	c7 04 24 00 23 11 f0 	movl   $0xf0112300,(%esp)$/;"	l
f0100164	obj/kern/kernel.asm	/^f0100164:	e8 ad 13 00 00       	call   f0101516 <memset>$/;"	l
f0100169	obj/kern/kernel.asm	/^f0100169:	e8 3c 03 00 00       	call   f01004aa <cons_init>$/;"	l
f010016e	obj/kern/kernel.asm	/^f010016e:	c7 44 24 04 ac 1a 00 	movl   $0x1aac,0x4(%esp)$/;"	l
f0100175	obj/kern/kernel.asm	/^f0100175:	00 $/;"	l
f0100176	obj/kern/kernel.asm	/^f0100176:	c7 04 24 69 1a 10 f0 	movl   $0xf0101a69,(%esp)$/;"	l
f010017d	obj/kern/kernel.asm	/^f010017d:	e8 a9 07 00 00       	call   f010092b <cprintf>$/;"	l
f0100182	obj/kern/kernel.asm	/^f0100182:	c7 04 24 05 00 00 00 	movl   $0x5,(%esp)$/;"	l
f0100189	obj/kern/kernel.asm	/^f0100189:	e8 56 ff ff ff       	call   f01000e4 <test_backtrace>$/;"	l
f010018e	obj/kern/kernel.asm	/^f010018e:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0100195	obj/kern/kernel.asm	/^f0100195:	e8 12 06 00 00       	call   f01007ac <monitor>$/;"	l
f010019a	obj/kern/kernel.asm	/^f010019a:	eb f2                	jmp    f010018e <i386_init+0x4d>$/;"	l
f010019c	obj/kern/kernel.asm	/^f010019c:	00 00                	add    %al,(%eax)$/;"	l
f01001a0	obj/kern/kernel.asm	/^f01001a0 <delay>:$/;"	l
f01001a0	obj/kern/kernel.asm	/^f01001a0:	55                   	push   %ebp$/;"	l
f01001a1	obj/kern/kernel.asm	/^f01001a1:	89 e5                	mov    %esp,%ebp$/;"	l
f01001a3	obj/kern/kernel.asm	/^f01001a3:	ba 84 00 00 00       	mov    $0x84,%edx$/;"	l
f01001a8	obj/kern/kernel.asm	/^f01001a8:	ec                   	in     (%dx),%al$/;"	l
f01001a9	obj/kern/kernel.asm	/^f01001a9:	ec                   	in     (%dx),%al$/;"	l
f01001aa	obj/kern/kernel.asm	/^f01001aa:	ec                   	in     (%dx),%al$/;"	l
f01001ab	obj/kern/kernel.asm	/^f01001ab:	ec                   	in     (%dx),%al$/;"	l
f01001ac	obj/kern/kernel.asm	/^f01001ac:	5d                   	pop    %ebp$/;"	l
f01001ad	obj/kern/kernel.asm	/^f01001ad:	c3                   	ret    $/;"	l
f01001ae	obj/kern/kernel.asm	/^f01001ae <serial_proc_data>:$/;"	l
f01001ae	obj/kern/kernel.asm	/^f01001ae:	55                   	push   %ebp$/;"	l
f01001af	obj/kern/kernel.asm	/^f01001af:	89 e5                	mov    %esp,%ebp$/;"	l
f01001b1	obj/kern/kernel.asm	/^f01001b1:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f01001b6	obj/kern/kernel.asm	/^f01001b6:	ec                   	in     (%dx),%al$/;"	l
f01001b7	obj/kern/kernel.asm	/^f01001b7:	89 c2                	mov    %eax,%edx$/;"	l
f01001b9	obj/kern/kernel.asm	/^f01001b9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01001be	obj/kern/kernel.asm	/^f01001be:	f6 c2 01             	test   $0x1,%dl$/;"	l
f01001c1	obj/kern/kernel.asm	/^f01001c1:	74 09                	je     f01001cc <serial_proc_data+0x1e>$/;"	l
f01001c3	obj/kern/kernel.asm	/^f01001c3:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f01001c8	obj/kern/kernel.asm	/^f01001c8:	ec                   	in     (%dx),%al$/;"	l
f01001c9	obj/kern/kernel.asm	/^f01001c9:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01001cc	obj/kern/kernel.asm	/^f01001cc:	5d                   	pop    %ebp$/;"	l
f01001cd	obj/kern/kernel.asm	/^f01001cd:	c3                   	ret    $/;"	l
f01001ce	obj/kern/kernel.asm	/^f01001ce <cons_intr>:$/;"	l
f01001ce	obj/kern/kernel.asm	/^f01001ce:	55                   	push   %ebp$/;"	l
f01001cf	obj/kern/kernel.asm	/^f01001cf:	89 e5                	mov    %esp,%ebp$/;"	l
f01001d1	obj/kern/kernel.asm	/^f01001d1:	57                   	push   %edi$/;"	l
f01001d2	obj/kern/kernel.asm	/^f01001d2:	56                   	push   %esi$/;"	l
f01001d3	obj/kern/kernel.asm	/^f01001d3:	53                   	push   %ebx$/;"	l
f01001d4	obj/kern/kernel.asm	/^f01001d4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01001d7	obj/kern/kernel.asm	/^f01001d7:	89 c6                	mov    %eax,%esi$/;"	l
f01001d9	obj/kern/kernel.asm	/^f01001d9:	bb 44 25 11 f0       	mov    $0xf0112544,%ebx$/;"	l
f01001de	obj/kern/kernel.asm	/^f01001de:	bf 40 23 11 f0       	mov    $0xf0112340,%edi$/;"	l
f01001e3	obj/kern/kernel.asm	/^f01001e3:	eb 1e                	jmp    f0100203 <cons_intr+0x35>$/;"	l
f01001e5	obj/kern/kernel.asm	/^f01001e5:	85 c0                	test   %eax,%eax$/;"	l
f01001e7	obj/kern/kernel.asm	/^f01001e7:	74 1a                	je     f0100203 <cons_intr+0x35>$/;"	l
f01001e9	obj/kern/kernel.asm	/^f01001e9:	8b 13                	mov    (%ebx),%edx$/;"	l
f01001eb	obj/kern/kernel.asm	/^f01001eb:	88 04 17             	mov    %al,(%edi,%edx,1)$/;"	l
f01001ee	obj/kern/kernel.asm	/^f01001ee:	8d 42 01             	lea    0x1(%edx),%eax$/;"	l
f01001f1	obj/kern/kernel.asm	/^f01001f1:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
f01001f6	obj/kern/kernel.asm	/^f01001f6:	0f 94 c2             	sete   %dl$/;"	l
f01001f9	obj/kern/kernel.asm	/^f01001f9:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01001fc	obj/kern/kernel.asm	/^f01001fc:	83 ea 01             	sub    $0x1,%edx$/;"	l
f01001ff	obj/kern/kernel.asm	/^f01001ff:	21 d0                	and    %edx,%eax$/;"	l
f0100201	obj/kern/kernel.asm	/^f0100201:	89 03                	mov    %eax,(%ebx)$/;"	l
f0100203	obj/kern/kernel.asm	/^f0100203:	ff d6                	call   *%esi$/;"	l
f0100205	obj/kern/kernel.asm	/^f0100205:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0100208	obj/kern/kernel.asm	/^f0100208:	75 db                	jne    f01001e5 <cons_intr+0x17>$/;"	l
f010020a	obj/kern/kernel.asm	/^f010020a:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010020d	obj/kern/kernel.asm	/^f010020d:	5b                   	pop    %ebx$/;"	l
f010020e	obj/kern/kernel.asm	/^f010020e:	5e                   	pop    %esi$/;"	l
f010020f	obj/kern/kernel.asm	/^f010020f:	5f                   	pop    %edi$/;"	l
f0100210	obj/kern/kernel.asm	/^f0100210:	5d                   	pop    %ebp$/;"	l
f0100211	obj/kern/kernel.asm	/^f0100211:	c3                   	ret    $/;"	l
f0100212	obj/kern/kernel.asm	/^f0100212 <kbd_intr>:$/;"	l
f0100212	obj/kern/kernel.asm	/^f0100212:	55                   	push   %ebp$/;"	l
f0100213	obj/kern/kernel.asm	/^f0100213:	89 e5                	mov    %esp,%ebp$/;"	l
f0100215	obj/kern/kernel.asm	/^f0100215:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100218	obj/kern/kernel.asm	/^f0100218:	b8 9a 05 10 f0       	mov    $0xf010059a,%eax$/;"	l
f010021d	obj/kern/kernel.asm	/^f010021d:	e8 ac ff ff ff       	call   f01001ce <cons_intr>$/;"	l
f0100222	obj/kern/kernel.asm	/^f0100222:	c9                   	leave  $/;"	l
f0100223	obj/kern/kernel.asm	/^f0100223:	c3                   	ret    $/;"	l
f0100224	obj/kern/kernel.asm	/^f0100224 <serial_intr>:$/;"	l
f0100224	obj/kern/kernel.asm	/^f0100224:	55                   	push   %ebp$/;"	l
f0100225	obj/kern/kernel.asm	/^f0100225:	89 e5                	mov    %esp,%ebp$/;"	l
f0100227	obj/kern/kernel.asm	/^f0100227:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010022a	obj/kern/kernel.asm	/^f010022a:	83 3d 24 23 11 f0 00 	cmpl   $0x0,0xf0112324$/;"	l
f0100231	obj/kern/kernel.asm	/^f0100231:	74 0a                	je     f010023d <serial_intr+0x19>$/;"	l
f0100233	obj/kern/kernel.asm	/^f0100233:	b8 ae 01 10 f0       	mov    $0xf01001ae,%eax$/;"	l
f0100238	obj/kern/kernel.asm	/^f0100238:	e8 91 ff ff ff       	call   f01001ce <cons_intr>$/;"	l
f010023d	obj/kern/kernel.asm	/^f010023d:	c9                   	leave  $/;"	l
f010023e	obj/kern/kernel.asm	/^f010023e:	c3                   	ret    $/;"	l
f010023f	obj/kern/kernel.asm	/^f010023f <cons_getc>:$/;"	l
f010023f	obj/kern/kernel.asm	/^f010023f:	55                   	push   %ebp$/;"	l
f0100240	obj/kern/kernel.asm	/^f0100240:	89 e5                	mov    %esp,%ebp$/;"	l
f0100242	obj/kern/kernel.asm	/^f0100242:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100245	obj/kern/kernel.asm	/^f0100245:	e8 da ff ff ff       	call   f0100224 <serial_intr>$/;"	l
f010024a	obj/kern/kernel.asm	/^f010024a:	e8 c3 ff ff ff       	call   f0100212 <kbd_intr>$/;"	l
f010024f	obj/kern/kernel.asm	/^f010024f:	8b 15 40 25 11 f0    	mov    0xf0112540,%edx$/;"	l
f0100255	obj/kern/kernel.asm	/^f0100255:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010025a	obj/kern/kernel.asm	/^f010025a:	3b 15 44 25 11 f0    	cmp    0xf0112544,%edx$/;"	l
f0100260	obj/kern/kernel.asm	/^f0100260:	74 21                	je     f0100283 <cons_getc+0x44>$/;"	l
f0100262	obj/kern/kernel.asm	/^f0100262:	0f b6 82 40 23 11 f0 	movzbl -0xfeedcc0(%edx),%eax$/;"	l
f0100269	obj/kern/kernel.asm	/^f0100269:	83 c2 01             	add    $0x1,%edx$/;"	l
f010026c	obj/kern/kernel.asm	/^f010026c:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f0100272	obj/kern/kernel.asm	/^f0100272:	0f 94 c1             	sete   %cl$/;"	l
f0100275	obj/kern/kernel.asm	/^f0100275:	0f b6 c9             	movzbl %cl,%ecx$/;"	l
f0100278	obj/kern/kernel.asm	/^f0100278:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f010027b	obj/kern/kernel.asm	/^f010027b:	21 ca                	and    %ecx,%edx$/;"	l
f010027d	obj/kern/kernel.asm	/^f010027d:	89 15 40 25 11 f0    	mov    %edx,0xf0112540$/;"	l
f0100283	obj/kern/kernel.asm	/^f0100283:	c9                   	leave  $/;"	l
f0100284	obj/kern/kernel.asm	/^f0100284:	c3                   	ret    $/;"	l
f0100285	obj/kern/kernel.asm	/^f0100285 <getchar>:$/;"	l
f0100285	obj/kern/kernel.asm	/^f0100285:	55                   	push   %ebp$/;"	l
f0100286	obj/kern/kernel.asm	/^f0100286:	89 e5                	mov    %esp,%ebp$/;"	l
f0100288	obj/kern/kernel.asm	/^f0100288:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010028b	obj/kern/kernel.asm	/^f010028b:	e8 af ff ff ff       	call   f010023f <cons_getc>$/;"	l
f0100290	obj/kern/kernel.asm	/^f0100290:	85 c0                	test   %eax,%eax$/;"	l
f0100292	obj/kern/kernel.asm	/^f0100292:	74 f7                	je     f010028b <getchar+0x6>$/;"	l
f0100294	obj/kern/kernel.asm	/^f0100294:	c9                   	leave  $/;"	l
f0100295	obj/kern/kernel.asm	/^f0100295:	c3                   	ret    $/;"	l
f0100296	obj/kern/kernel.asm	/^f0100296 <iscons>:$/;"	l
f0100296	obj/kern/kernel.asm	/^f0100296:	55                   	push   %ebp$/;"	l
f0100297	obj/kern/kernel.asm	/^f0100297:	89 e5                	mov    %esp,%ebp$/;"	l
f0100299	obj/kern/kernel.asm	/^f0100299:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010029e	obj/kern/kernel.asm	/^f010029e:	5d                   	pop    %ebp$/;"	l
f010029f	obj/kern/kernel.asm	/^f010029f:	c3                   	ret    $/;"	l
f01002a0	obj/kern/kernel.asm	/^f01002a0 <cons_putc>:$/;"	l
f01002a0	obj/kern/kernel.asm	/^f01002a0:	55                   	push   %ebp$/;"	l
f01002a1	obj/kern/kernel.asm	/^f01002a1:	89 e5                	mov    %esp,%ebp$/;"	l
f01002a3	obj/kern/kernel.asm	/^f01002a3:	57                   	push   %edi$/;"	l
f01002a4	obj/kern/kernel.asm	/^f01002a4:	56                   	push   %esi$/;"	l
f01002a5	obj/kern/kernel.asm	/^f01002a5:	53                   	push   %ebx$/;"	l
f01002a6	obj/kern/kernel.asm	/^f01002a6:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01002a9	obj/kern/kernel.asm	/^f01002a9:	89 c7                	mov    %eax,%edi$/;"	l
f01002ab	obj/kern/kernel.asm	/^f01002ab:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f01002b0	obj/kern/kernel.asm	/^f01002b0:	ec                   	in     (%dx),%al$/;"	l
f01002b1	obj/kern/kernel.asm	/^f01002b1:	a8 20                	test   $0x20,%al$/;"	l
f01002b3	obj/kern/kernel.asm	/^f01002b3:	75 21                	jne    f01002d6 <cons_putc+0x36>$/;"	l
f01002b5	obj/kern/kernel.asm	/^f01002b5:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01002ba	obj/kern/kernel.asm	/^f01002ba:	be fd 03 00 00       	mov    $0x3fd,%esi$/;"	l
f01002bf	obj/kern/kernel.asm	/^f01002bf:	e8 dc fe ff ff       	call   f01001a0 <delay>$/;"	l
f01002c4	obj/kern/kernel.asm	/^f01002c4:	89 f2                	mov    %esi,%edx$/;"	l
f01002c6	obj/kern/kernel.asm	/^f01002c6:	ec                   	in     (%dx),%al$/;"	l
f01002c7	obj/kern/kernel.asm	/^f01002c7:	a8 20                	test   $0x20,%al$/;"	l
f01002c9	obj/kern/kernel.asm	/^f01002c9:	75 0b                	jne    f01002d6 <cons_putc+0x36>$/;"	l
f01002cb	obj/kern/kernel.asm	/^f01002cb:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01002ce	obj/kern/kernel.asm	/^f01002ce:	81 fb 00 32 00 00    	cmp    $0x3200,%ebx$/;"	l
f01002d4	obj/kern/kernel.asm	/^f01002d4:	75 e9                	jne    f01002bf <cons_putc+0x1f>$/;"	l
f01002d6	obj/kern/kernel.asm	/^f01002d6:	89 fa                	mov    %edi,%edx$/;"	l
f01002d8	obj/kern/kernel.asm	/^f01002d8:	89 f8                	mov    %edi,%eax$/;"	l
f01002da	obj/kern/kernel.asm	/^f01002da:	88 55 e7             	mov    %dl,-0x19(%ebp)$/;"	l
f01002dd	obj/kern/kernel.asm	/^f01002dd:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f01002e2	obj/kern/kernel.asm	/^f01002e2:	ee                   	out    %al,(%dx)$/;"	l
f01002e3	obj/kern/kernel.asm	/^f01002e3:	b2 79                	mov    $0x79,%dl$/;"	l
f01002e5	obj/kern/kernel.asm	/^f01002e5:	ec                   	in     (%dx),%al$/;"	l
f01002e6	obj/kern/kernel.asm	/^f01002e6:	84 c0                	test   %al,%al$/;"	l
f01002e8	obj/kern/kernel.asm	/^f01002e8:	78 21                	js     f010030b <cons_putc+0x6b>$/;"	l
f01002ea	obj/kern/kernel.asm	/^f01002ea:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01002ef	obj/kern/kernel.asm	/^f01002ef:	be 79 03 00 00       	mov    $0x379,%esi$/;"	l
f01002f4	obj/kern/kernel.asm	/^f01002f4:	e8 a7 fe ff ff       	call   f01001a0 <delay>$/;"	l
f01002f9	obj/kern/kernel.asm	/^f01002f9:	89 f2                	mov    %esi,%edx$/;"	l
f01002fb	obj/kern/kernel.asm	/^f01002fb:	ec                   	in     (%dx),%al$/;"	l
f01002fc	obj/kern/kernel.asm	/^f01002fc:	84 c0                	test   %al,%al$/;"	l
f01002fe	obj/kern/kernel.asm	/^f01002fe:	78 0b                	js     f010030b <cons_putc+0x6b>$/;"	l
f0100300	obj/kern/kernel.asm	/^f0100300:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100303	obj/kern/kernel.asm	/^f0100303:	81 fb 00 32 00 00    	cmp    $0x3200,%ebx$/;"	l
f0100309	obj/kern/kernel.asm	/^f0100309:	75 e9                	jne    f01002f4 <cons_putc+0x54>$/;"	l
f010030b	obj/kern/kernel.asm	/^f010030b:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f0100310	obj/kern/kernel.asm	/^f0100310:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax$/;"	l
f0100314	obj/kern/kernel.asm	/^f0100314:	ee                   	out    %al,(%dx)$/;"	l
f0100315	obj/kern/kernel.asm	/^f0100315:	b2 7a                	mov    $0x7a,%dl$/;"	l
f0100317	obj/kern/kernel.asm	/^f0100317:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f010031c	obj/kern/kernel.asm	/^f010031c:	ee                   	out    %al,(%dx)$/;"	l
f010031d	obj/kern/kernel.asm	/^f010031d:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0100322	obj/kern/kernel.asm	/^f0100322:	ee                   	out    %al,(%dx)$/;"	l
f0100323	obj/kern/kernel.asm	/^f0100323:	f7 c7 00 ff ff ff    	test   $0xffffff00,%edi$/;"	l
f0100329	obj/kern/kernel.asm	/^f0100329:	75 06                	jne    f0100331 <cons_putc+0x91>$/;"	l
f010032b	obj/kern/kernel.asm	/^f010032b:	81 cf 00 07 00 00    	or     $0x700,%edi$/;"	l
f0100331	obj/kern/kernel.asm	/^f0100331:	89 f8                	mov    %edi,%eax$/;"	l
f0100333	obj/kern/kernel.asm	/^f0100333:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
f0100338	obj/kern/kernel.asm	/^f0100338:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f010033b	obj/kern/kernel.asm	/^f010033b:	0f 84 83 00 00 00    	je     f01003c4 <cons_putc+0x124>$/;"	l
f0100341	obj/kern/kernel.asm	/^f0100341:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0100344	obj/kern/kernel.asm	/^f0100344:	7f 0c                	jg     f0100352 <cons_putc+0xb2>$/;"	l
f0100346	obj/kern/kernel.asm	/^f0100346:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0100349	obj/kern/kernel.asm	/^f0100349:	0f 85 a9 00 00 00    	jne    f01003f8 <cons_putc+0x158>$/;"	l
f010034f	obj/kern/kernel.asm	/^f010034f:	90                   	nop$/;"	l
f0100350	obj/kern/kernel.asm	/^f0100350:	eb 18                	jmp    f010036a <cons_putc+0xca>$/;"	l
f0100352	obj/kern/kernel.asm	/^f0100352:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f0100355	obj/kern/kernel.asm	/^f0100355:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0100358	obj/kern/kernel.asm	/^f0100358:	74 40                	je     f010039a <cons_putc+0xfa>$/;"	l
f010035a	obj/kern/kernel.asm	/^f010035a:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f010035d	obj/kern/kernel.asm	/^f010035d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0100360	obj/kern/kernel.asm	/^f0100360:	0f 85 92 00 00 00    	jne    f01003f8 <cons_putc+0x158>$/;"	l
f0100366	obj/kern/kernel.asm	/^f0100366:	66 90                	xchg   %ax,%ax$/;"	l
f0100368	obj/kern/kernel.asm	/^f0100368:	eb 38                	jmp    f01003a2 <cons_putc+0x102>$/;"	l
f010036a	obj/kern/kernel.asm	/^f010036a:	0f b7 05 30 23 11 f0 	movzwl 0xf0112330,%eax$/;"	l
f0100371	obj/kern/kernel.asm	/^f0100371:	66 85 c0             	test   %ax,%ax$/;"	l
f0100374	obj/kern/kernel.asm	/^f0100374:	0f 84 e8 00 00 00    	je     f0100462 <cons_putc+0x1c2>$/;"	l
f010037a	obj/kern/kernel.asm	/^f010037a:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010037d	obj/kern/kernel.asm	/^f010037d:	66 a3 30 23 11 f0    	mov    %ax,0xf0112330$/;"	l
f0100383	obj/kern/kernel.asm	/^f0100383:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0100386	obj/kern/kernel.asm	/^f0100386:	66 81 e7 00 ff       	and    $0xff00,%di$/;"	l
f010038b	obj/kern/kernel.asm	/^f010038b:	83 cf 20             	or     $0x20,%edi$/;"	l
f010038e	obj/kern/kernel.asm	/^f010038e:	8b 15 2c 23 11 f0    	mov    0xf011232c,%edx$/;"	l
f0100394	obj/kern/kernel.asm	/^f0100394:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f0100398	obj/kern/kernel.asm	/^f0100398:	eb 7b                	jmp    f0100415 <cons_putc+0x175>$/;"	l
f010039a	obj/kern/kernel.asm	/^f010039a:	66 83 05 30 23 11 f0 	addw   $0x50,0xf0112330$/;"	l
f01003a1	obj/kern/kernel.asm	/^f01003a1:	50 $/;"	l
f01003a2	obj/kern/kernel.asm	/^f01003a2:	0f b7 05 30 23 11 f0 	movzwl 0xf0112330,%eax$/;"	l
f01003a9	obj/kern/kernel.asm	/^f01003a9:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f01003af	obj/kern/kernel.asm	/^f01003af:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01003b2	obj/kern/kernel.asm	/^f01003b2:	66 c1 e8 06          	shr    $0x6,%ax$/;"	l
f01003b6	obj/kern/kernel.asm	/^f01003b6:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f01003b9	obj/kern/kernel.asm	/^f01003b9:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f01003bc	obj/kern/kernel.asm	/^f01003bc:	66 a3 30 23 11 f0    	mov    %ax,0xf0112330$/;"	l
f01003c2	obj/kern/kernel.asm	/^f01003c2:	eb 51                	jmp    f0100415 <cons_putc+0x175>$/;"	l
f01003c4	obj/kern/kernel.asm	/^f01003c4:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01003c9	obj/kern/kernel.asm	/^f01003c9:	e8 d2 fe ff ff       	call   f01002a0 <cons_putc>$/;"	l
f01003ce	obj/kern/kernel.asm	/^f01003ce:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01003d3	obj/kern/kernel.asm	/^f01003d3:	e8 c8 fe ff ff       	call   f01002a0 <cons_putc>$/;"	l
f01003d8	obj/kern/kernel.asm	/^f01003d8:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01003dd	obj/kern/kernel.asm	/^f01003dd:	e8 be fe ff ff       	call   f01002a0 <cons_putc>$/;"	l
f01003e2	obj/kern/kernel.asm	/^f01003e2:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01003e7	obj/kern/kernel.asm	/^f01003e7:	e8 b4 fe ff ff       	call   f01002a0 <cons_putc>$/;"	l
f01003ec	obj/kern/kernel.asm	/^f01003ec:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01003f1	obj/kern/kernel.asm	/^f01003f1:	e8 aa fe ff ff       	call   f01002a0 <cons_putc>$/;"	l
f01003f6	obj/kern/kernel.asm	/^f01003f6:	eb 1d                	jmp    f0100415 <cons_putc+0x175>$/;"	l
f01003f8	obj/kern/kernel.asm	/^f01003f8:	0f b7 05 30 23 11 f0 	movzwl 0xf0112330,%eax$/;"	l
f01003ff	obj/kern/kernel.asm	/^f01003ff:	0f b7 c8             	movzwl %ax,%ecx$/;"	l
f0100402	obj/kern/kernel.asm	/^f0100402:	8b 15 2c 23 11 f0    	mov    0xf011232c,%edx$/;"	l
f0100408	obj/kern/kernel.asm	/^f0100408:	66 89 3c 4a          	mov    %di,(%edx,%ecx,2)$/;"	l
f010040c	obj/kern/kernel.asm	/^f010040c:	83 c0 01             	add    $0x1,%eax$/;"	l
f010040f	obj/kern/kernel.asm	/^f010040f:	66 a3 30 23 11 f0    	mov    %ax,0xf0112330$/;"	l
f0100415	obj/kern/kernel.asm	/^f0100415:	66 81 3d 30 23 11 f0 	cmpw   $0x7cf,0xf0112330$/;"	l
f010041c	obj/kern/kernel.asm	/^f010041c:	cf 07 $/;"	l
f010041e	obj/kern/kernel.asm	/^f010041e:	76 42                	jbe    f0100462 <cons_putc+0x1c2>$/;"	l
f0100420	obj/kern/kernel.asm	/^f0100420:	a1 2c 23 11 f0       	mov    0xf011232c,%eax$/;"	l
f0100425	obj/kern/kernel.asm	/^f0100425:	c7 44 24 08 00 0f 00 	movl   $0xf00,0x8(%esp)$/;"	l
f010042c	obj/kern/kernel.asm	/^f010042c:	00 $/;"	l
f010042d	obj/kern/kernel.asm	/^f010042d:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f0100433	obj/kern/kernel.asm	/^f0100433:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0100437	obj/kern/kernel.asm	/^f0100437:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010043a	obj/kern/kernel.asm	/^f010043a:	e8 36 11 00 00       	call   f0101575 <memmove>$/;"	l
f010043f	obj/kern/kernel.asm	/^f010043f:	8b 15 2c 23 11 f0    	mov    0xf011232c,%edx$/;"	l
f0100445	obj/kern/kernel.asm	/^f0100445:	b8 80 07 00 00       	mov    $0x780,%eax$/;"	l
f010044a	obj/kern/kernel.asm	/^f010044a:	66 c7 04 42 20 07    	movw   $0x720,(%edx,%eax,2)$/;"	l
f0100450	obj/kern/kernel.asm	/^f0100450:	83 c0 01             	add    $0x1,%eax$/;"	l
f0100453	obj/kern/kernel.asm	/^f0100453:	3d d0 07 00 00       	cmp    $0x7d0,%eax$/;"	l
f0100458	obj/kern/kernel.asm	/^f0100458:	75 f0                	jne    f010044a <cons_putc+0x1aa>$/;"	l
f010045a	obj/kern/kernel.asm	/^f010045a:	66 83 2d 30 23 11 f0 	subw   $0x50,0xf0112330$/;"	l
f0100461	obj/kern/kernel.asm	/^f0100461:	50 $/;"	l
f0100462	obj/kern/kernel.asm	/^f0100462:	8b 0d 28 23 11 f0    	mov    0xf0112328,%ecx$/;"	l
f0100468	obj/kern/kernel.asm	/^f0100468:	89 cb                	mov    %ecx,%ebx$/;"	l
f010046a	obj/kern/kernel.asm	/^f010046a:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f010046f	obj/kern/kernel.asm	/^f010046f:	89 ca                	mov    %ecx,%edx$/;"	l
f0100471	obj/kern/kernel.asm	/^f0100471:	ee                   	out    %al,(%dx)$/;"	l
f0100472	obj/kern/kernel.asm	/^f0100472:	0f b7 35 30 23 11 f0 	movzwl 0xf0112330,%esi$/;"	l
f0100479	obj/kern/kernel.asm	/^f0100479:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010047c	obj/kern/kernel.asm	/^f010047c:	89 f0                	mov    %esi,%eax$/;"	l
f010047e	obj/kern/kernel.asm	/^f010047e:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0100482	obj/kern/kernel.asm	/^f0100482:	89 ca                	mov    %ecx,%edx$/;"	l
f0100484	obj/kern/kernel.asm	/^f0100484:	ee                   	out    %al,(%dx)$/;"	l
f0100485	obj/kern/kernel.asm	/^f0100485:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f010048a	obj/kern/kernel.asm	/^f010048a:	89 da                	mov    %ebx,%edx$/;"	l
f010048c	obj/kern/kernel.asm	/^f010048c:	ee                   	out    %al,(%dx)$/;"	l
f010048d	obj/kern/kernel.asm	/^f010048d:	89 f0                	mov    %esi,%eax$/;"	l
f010048f	obj/kern/kernel.asm	/^f010048f:	89 ca                	mov    %ecx,%edx$/;"	l
f0100491	obj/kern/kernel.asm	/^f0100491:	ee                   	out    %al,(%dx)$/;"	l
f0100492	obj/kern/kernel.asm	/^f0100492:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0100495	obj/kern/kernel.asm	/^f0100495:	5b                   	pop    %ebx$/;"	l
f0100496	obj/kern/kernel.asm	/^f0100496:	5e                   	pop    %esi$/;"	l
f0100497	obj/kern/kernel.asm	/^f0100497:	5f                   	pop    %edi$/;"	l
f0100498	obj/kern/kernel.asm	/^f0100498:	5d                   	pop    %ebp$/;"	l
f0100499	obj/kern/kernel.asm	/^f0100499:	c3                   	ret    $/;"	l
f010049a	obj/kern/kernel.asm	/^f010049a <cputchar>:$/;"	l
f010049a	obj/kern/kernel.asm	/^f010049a:	55                   	push   %ebp$/;"	l
f010049b	obj/kern/kernel.asm	/^f010049b:	89 e5                	mov    %esp,%ebp$/;"	l
f010049d	obj/kern/kernel.asm	/^f010049d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01004a0	obj/kern/kernel.asm	/^f01004a0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01004a3	obj/kern/kernel.asm	/^f01004a3:	e8 f8 fd ff ff       	call   f01002a0 <cons_putc>$/;"	l
f01004a8	obj/kern/kernel.asm	/^f01004a8:	c9                   	leave  $/;"	l
f01004a9	obj/kern/kernel.asm	/^f01004a9:	c3                   	ret    $/;"	l
f01004aa	obj/kern/kernel.asm	/^f01004aa <cons_init>:$/;"	l
f01004aa	obj/kern/kernel.asm	/^f01004aa:	55                   	push   %ebp$/;"	l
f01004ab	obj/kern/kernel.asm	/^f01004ab:	89 e5                	mov    %esp,%ebp$/;"	l
f01004ad	obj/kern/kernel.asm	/^f01004ad:	57                   	push   %edi$/;"	l
f01004ae	obj/kern/kernel.asm	/^f01004ae:	56                   	push   %esi$/;"	l
f01004af	obj/kern/kernel.asm	/^f01004af:	53                   	push   %ebx$/;"	l
f01004b0	obj/kern/kernel.asm	/^f01004b0:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01004b3	obj/kern/kernel.asm	/^f01004b3:	b8 00 80 0b f0       	mov    $0xf00b8000,%eax$/;"	l
f01004b8	obj/kern/kernel.asm	/^f01004b8:	0f b7 10             	movzwl (%eax),%edx$/;"	l
f01004bb	obj/kern/kernel.asm	/^f01004bb:	66 c7 00 5a a5       	movw   $0xa55a,(%eax)$/;"	l
f01004c0	obj/kern/kernel.asm	/^f01004c0:	0f b7 00             	movzwl (%eax),%eax$/;"	l
f01004c3	obj/kern/kernel.asm	/^f01004c3:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f01004c7	obj/kern/kernel.asm	/^f01004c7:	74 11                	je     f01004da <cons_init+0x30>$/;"	l
f01004c9	obj/kern/kernel.asm	/^f01004c9:	c7 05 28 23 11 f0 b4 	movl   $0x3b4,0xf0112328$/;"	l
f01004d0	obj/kern/kernel.asm	/^f01004d0:	03 00 00 $/;"	l
f01004d3	obj/kern/kernel.asm	/^f01004d3:	be 00 00 0b f0       	mov    $0xf00b0000,%esi$/;"	l
f01004d8	obj/kern/kernel.asm	/^f01004d8:	eb 16                	jmp    f01004f0 <cons_init+0x46>$/;"	l
f01004da	obj/kern/kernel.asm	/^f01004da:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f01004e1	obj/kern/kernel.asm	/^f01004e1:	c7 05 28 23 11 f0 d4 	movl   $0x3d4,0xf0112328$/;"	l
f01004e8	obj/kern/kernel.asm	/^f01004e8:	03 00 00 $/;"	l
f01004eb	obj/kern/kernel.asm	/^f01004eb:	be 00 80 0b f0       	mov    $0xf00b8000,%esi$/;"	l
f01004f0	obj/kern/kernel.asm	/^f01004f0:	8b 0d 28 23 11 f0    	mov    0xf0112328,%ecx$/;"	l
f01004f6	obj/kern/kernel.asm	/^f01004f6:	89 cb                	mov    %ecx,%ebx$/;"	l
f01004f8	obj/kern/kernel.asm	/^f01004f8:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f01004fd	obj/kern/kernel.asm	/^f01004fd:	89 ca                	mov    %ecx,%edx$/;"	l
f01004ff	obj/kern/kernel.asm	/^f01004ff:	ee                   	out    %al,(%dx)$/;"	l
f0100500	obj/kern/kernel.asm	/^f0100500:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0100503	obj/kern/kernel.asm	/^f0100503:	89 ca                	mov    %ecx,%edx$/;"	l
f0100505	obj/kern/kernel.asm	/^f0100505:	ec                   	in     (%dx),%al$/;"	l
f0100506	obj/kern/kernel.asm	/^f0100506:	0f b6 f8             	movzbl %al,%edi$/;"	l
f0100509	obj/kern/kernel.asm	/^f0100509:	c1 e7 08             	shl    $0x8,%edi$/;"	l
f010050c	obj/kern/kernel.asm	/^f010050c:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100511	obj/kern/kernel.asm	/^f0100511:	89 da                	mov    %ebx,%edx$/;"	l
f0100513	obj/kern/kernel.asm	/^f0100513:	ee                   	out    %al,(%dx)$/;"	l
f0100514	obj/kern/kernel.asm	/^f0100514:	89 ca                	mov    %ecx,%edx$/;"	l
f0100516	obj/kern/kernel.asm	/^f0100516:	ec                   	in     (%dx),%al$/;"	l
f0100517	obj/kern/kernel.asm	/^f0100517:	89 35 2c 23 11 f0    	mov    %esi,0xf011232c$/;"	l
f010051d	obj/kern/kernel.asm	/^f010051d:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f0100520	obj/kern/kernel.asm	/^f0100520:	09 cf                	or     %ecx,%edi$/;"	l
f0100522	obj/kern/kernel.asm	/^f0100522:	66 89 3d 30 23 11 f0 	mov    %di,0xf0112330$/;"	l
f0100529	obj/kern/kernel.asm	/^f0100529:	bb fa 03 00 00       	mov    $0x3fa,%ebx$/;"	l
f010052e	obj/kern/kernel.asm	/^f010052e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100533	obj/kern/kernel.asm	/^f0100533:	89 da                	mov    %ebx,%edx$/;"	l
f0100535	obj/kern/kernel.asm	/^f0100535:	ee                   	out    %al,(%dx)$/;"	l
f0100536	obj/kern/kernel.asm	/^f0100536:	b2 fb                	mov    $0xfb,%dl$/;"	l
f0100538	obj/kern/kernel.asm	/^f0100538:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f010053d	obj/kern/kernel.asm	/^f010053d:	ee                   	out    %al,(%dx)$/;"	l
f010053e	obj/kern/kernel.asm	/^f010053e:	b9 f8 03 00 00       	mov    $0x3f8,%ecx$/;"	l
f0100543	obj/kern/kernel.asm	/^f0100543:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f0100548	obj/kern/kernel.asm	/^f0100548:	89 ca                	mov    %ecx,%edx$/;"	l
f010054a	obj/kern/kernel.asm	/^f010054a:	ee                   	out    %al,(%dx)$/;"	l
f010054b	obj/kern/kernel.asm	/^f010054b:	b2 f9                	mov    $0xf9,%dl$/;"	l
f010054d	obj/kern/kernel.asm	/^f010054d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100552	obj/kern/kernel.asm	/^f0100552:	ee                   	out    %al,(%dx)$/;"	l
f0100553	obj/kern/kernel.asm	/^f0100553:	b2 fb                	mov    $0xfb,%dl$/;"	l
f0100555	obj/kern/kernel.asm	/^f0100555:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f010055a	obj/kern/kernel.asm	/^f010055a:	ee                   	out    %al,(%dx)$/;"	l
f010055b	obj/kern/kernel.asm	/^f010055b:	b2 fc                	mov    $0xfc,%dl$/;"	l
f010055d	obj/kern/kernel.asm	/^f010055d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100562	obj/kern/kernel.asm	/^f0100562:	ee                   	out    %al,(%dx)$/;"	l
f0100563	obj/kern/kernel.asm	/^f0100563:	b2 f9                	mov    $0xf9,%dl$/;"	l
f0100565	obj/kern/kernel.asm	/^f0100565:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010056a	obj/kern/kernel.asm	/^f010056a:	ee                   	out    %al,(%dx)$/;"	l
f010056b	obj/kern/kernel.asm	/^f010056b:	b2 fd                	mov    $0xfd,%dl$/;"	l
f010056d	obj/kern/kernel.asm	/^f010056d:	ec                   	in     (%dx),%al$/;"	l
f010056e	obj/kern/kernel.asm	/^f010056e:	3c ff                	cmp    $0xff,%al$/;"	l
f0100570	obj/kern/kernel.asm	/^f0100570:	0f 95 c0             	setne  %al$/;"	l
f0100573	obj/kern/kernel.asm	/^f0100573:	0f b6 f0             	movzbl %al,%esi$/;"	l
f0100576	obj/kern/kernel.asm	/^f0100576:	89 35 24 23 11 f0    	mov    %esi,0xf0112324$/;"	l
f010057c	obj/kern/kernel.asm	/^f010057c:	89 da                	mov    %ebx,%edx$/;"	l
f010057e	obj/kern/kernel.asm	/^f010057e:	ec                   	in     (%dx),%al$/;"	l
f010057f	obj/kern/kernel.asm	/^f010057f:	89 ca                	mov    %ecx,%edx$/;"	l
f0100581	obj/kern/kernel.asm	/^f0100581:	ec                   	in     (%dx),%al$/;"	l
f0100582	obj/kern/kernel.asm	/^f0100582:	85 f6                	test   %esi,%esi$/;"	l
f0100584	obj/kern/kernel.asm	/^f0100584:	75 0c                	jne    f0100592 <cons_init+0xe8>$/;"	l
f0100586	obj/kern/kernel.asm	/^f0100586:	c7 04 24 84 1a 10 f0 	movl   $0xf0101a84,(%esp)$/;"	l
f010058d	obj/kern/kernel.asm	/^f010058d:	e8 99 03 00 00       	call   f010092b <cprintf>$/;"	l
f0100592	obj/kern/kernel.asm	/^f0100592:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0100595	obj/kern/kernel.asm	/^f0100595:	5b                   	pop    %ebx$/;"	l
f0100596	obj/kern/kernel.asm	/^f0100596:	5e                   	pop    %esi$/;"	l
f0100597	obj/kern/kernel.asm	/^f0100597:	5f                   	pop    %edi$/;"	l
f0100598	obj/kern/kernel.asm	/^f0100598:	5d                   	pop    %ebp$/;"	l
f0100599	obj/kern/kernel.asm	/^f0100599:	c3                   	ret    $/;"	l
f010059a	obj/kern/kernel.asm	/^f010059a <kbd_proc_data>:$/;"	l
f010059a	obj/kern/kernel.asm	/^f010059a:	55                   	push   %ebp$/;"	l
f010059b	obj/kern/kernel.asm	/^f010059b:	89 e5                	mov    %esp,%ebp$/;"	l
f010059d	obj/kern/kernel.asm	/^f010059d:	53                   	push   %ebx$/;"	l
f010059e	obj/kern/kernel.asm	/^f010059e:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01005a1	obj/kern/kernel.asm	/^f01005a1:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f01005a6	obj/kern/kernel.asm	/^f01005a6:	ec                   	in     (%dx),%al$/;"	l
f01005a7	obj/kern/kernel.asm	/^f01005a7:	bb ff ff ff ff       	mov    $0xffffffff,%ebx$/;"	l
f01005ac	obj/kern/kernel.asm	/^f01005ac:	a8 01                	test   $0x1,%al$/;"	l
f01005ae	obj/kern/kernel.asm	/^f01005ae:	0f 84 d9 00 00 00    	je     f010068d <kbd_proc_data+0xf3>$/;"	l
f01005b4	obj/kern/kernel.asm	/^f01005b4:	b2 60                	mov    $0x60,%dl$/;"	l
f01005b6	obj/kern/kernel.asm	/^f01005b6:	ec                   	in     (%dx),%al$/;"	l
f01005b7	obj/kern/kernel.asm	/^f01005b7:	3c e0                	cmp    $0xe0,%al$/;"	l
f01005b9	obj/kern/kernel.asm	/^f01005b9:	75 11                	jne    f01005cc <kbd_proc_data+0x32>$/;"	l
f01005bb	obj/kern/kernel.asm	/^f01005bb:	83 0d 20 23 11 f0 40 	orl    $0x40,0xf0112320$/;"	l
f01005c2	obj/kern/kernel.asm	/^f01005c2:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01005c7	obj/kern/kernel.asm	/^f01005c7:	e9 c1 00 00 00       	jmp    f010068d <kbd_proc_data+0xf3>$/;"	l
f01005cc	obj/kern/kernel.asm	/^f01005cc:	84 c0                	test   %al,%al$/;"	l
f01005ce	obj/kern/kernel.asm	/^f01005ce:	79 32                	jns    f0100602 <kbd_proc_data+0x68>$/;"	l
f01005d0	obj/kern/kernel.asm	/^f01005d0:	8b 15 20 23 11 f0    	mov    0xf0112320,%edx$/;"	l
f01005d6	obj/kern/kernel.asm	/^f01005d6:	f6 c2 40             	test   $0x40,%dl$/;"	l
f01005d9	obj/kern/kernel.asm	/^f01005d9:	75 03                	jne    f01005de <kbd_proc_data+0x44>$/;"	l
f01005db	obj/kern/kernel.asm	/^f01005db:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f01005de	obj/kern/kernel.asm	/^f01005de:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01005e1	obj/kern/kernel.asm	/^f01005e1:	0f b6 80 c0 1a 10 f0 	movzbl -0xfefe540(%eax),%eax$/;"	l
f01005e8	obj/kern/kernel.asm	/^f01005e8:	83 c8 40             	or     $0x40,%eax$/;"	l
f01005eb	obj/kern/kernel.asm	/^f01005eb:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01005ee	obj/kern/kernel.asm	/^f01005ee:	f7 d0                	not    %eax$/;"	l
f01005f0	obj/kern/kernel.asm	/^f01005f0:	21 c2                	and    %eax,%edx$/;"	l
f01005f2	obj/kern/kernel.asm	/^f01005f2:	89 15 20 23 11 f0    	mov    %edx,0xf0112320$/;"	l
f01005f8	obj/kern/kernel.asm	/^f01005f8:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01005fd	obj/kern/kernel.asm	/^f01005fd:	e9 8b 00 00 00       	jmp    f010068d <kbd_proc_data+0xf3>$/;"	l
f0100602	obj/kern/kernel.asm	/^f0100602:	8b 15 20 23 11 f0    	mov    0xf0112320,%edx$/;"	l
f0100608	obj/kern/kernel.asm	/^f0100608:	f6 c2 40             	test   $0x40,%dl$/;"	l
f010060b	obj/kern/kernel.asm	/^f010060b:	74 0c                	je     f0100619 <kbd_proc_data+0x7f>$/;"	l
f010060d	obj/kern/kernel.asm	/^f010060d:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0100610	obj/kern/kernel.asm	/^f0100610:	83 e2 bf             	and    $0xffffffbf,%edx$/;"	l
f0100613	obj/kern/kernel.asm	/^f0100613:	89 15 20 23 11 f0    	mov    %edx,0xf0112320$/;"	l
f0100619	obj/kern/kernel.asm	/^f0100619:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010061c	obj/kern/kernel.asm	/^f010061c:	0f b6 90 c0 1a 10 f0 	movzbl -0xfefe540(%eax),%edx$/;"	l
f0100623	obj/kern/kernel.asm	/^f0100623:	0b 15 20 23 11 f0    	or     0xf0112320,%edx$/;"	l
f0100629	obj/kern/kernel.asm	/^f0100629:	0f b6 88 c0 1b 10 f0 	movzbl -0xfefe440(%eax),%ecx$/;"	l
f0100630	obj/kern/kernel.asm	/^f0100630:	31 ca                	xor    %ecx,%edx$/;"	l
f0100632	obj/kern/kernel.asm	/^f0100632:	89 15 20 23 11 f0    	mov    %edx,0xf0112320$/;"	l
f0100638	obj/kern/kernel.asm	/^f0100638:	89 d1                	mov    %edx,%ecx$/;"	l
f010063a	obj/kern/kernel.asm	/^f010063a:	83 e1 03             	and    $0x3,%ecx$/;"	l
f010063d	obj/kern/kernel.asm	/^f010063d:	8b 0c 8d c0 1c 10 f0 	mov    -0xfefe340(,%ecx,4),%ecx$/;"	l
f0100644	obj/kern/kernel.asm	/^f0100644:	0f b6 1c 01          	movzbl (%ecx,%eax,1),%ebx$/;"	l
f0100648	obj/kern/kernel.asm	/^f0100648:	f6 c2 08             	test   $0x8,%dl$/;"	l
f010064b	obj/kern/kernel.asm	/^f010064b:	74 1a                	je     f0100667 <kbd_proc_data+0xcd>$/;"	l
f010064d	obj/kern/kernel.asm	/^f010064d:	89 d9                	mov    %ebx,%ecx$/;"	l
f010064f	obj/kern/kernel.asm	/^f010064f:	8d 43 9f             	lea    -0x61(%ebx),%eax$/;"	l
f0100652	obj/kern/kernel.asm	/^f0100652:	83 f8 19             	cmp    $0x19,%eax$/;"	l
f0100655	obj/kern/kernel.asm	/^f0100655:	77 05                	ja     f010065c <kbd_proc_data+0xc2>$/;"	l
f0100657	obj/kern/kernel.asm	/^f0100657:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f010065a	obj/kern/kernel.asm	/^f010065a:	eb 0b                	jmp    f0100667 <kbd_proc_data+0xcd>$/;"	l
f010065c	obj/kern/kernel.asm	/^f010065c:	83 e9 41             	sub    $0x41,%ecx$/;"	l
f010065f	obj/kern/kernel.asm	/^f010065f:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f0100662	obj/kern/kernel.asm	/^f0100662:	77 03                	ja     f0100667 <kbd_proc_data+0xcd>$/;"	l
f0100664	obj/kern/kernel.asm	/^f0100664:	83 c3 20             	add    $0x20,%ebx$/;"	l
f0100667	obj/kern/kernel.asm	/^f0100667:	f7 d2                	not    %edx$/;"	l
f0100669	obj/kern/kernel.asm	/^f0100669:	f6 c2 06             	test   $0x6,%dl$/;"	l
f010066c	obj/kern/kernel.asm	/^f010066c:	75 1f                	jne    f010068d <kbd_proc_data+0xf3>$/;"	l
f010066e	obj/kern/kernel.asm	/^f010066e:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f0100674	obj/kern/kernel.asm	/^f0100674:	75 17                	jne    f010068d <kbd_proc_data+0xf3>$/;"	l
f0100676	obj/kern/kernel.asm	/^f0100676:	c7 04 24 a1 1a 10 f0 	movl   $0xf0101aa1,(%esp)$/;"	l
f010067d	obj/kern/kernel.asm	/^f010067d:	e8 a9 02 00 00       	call   f010092b <cprintf>$/;"	l
f0100682	obj/kern/kernel.asm	/^f0100682:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f0100687	obj/kern/kernel.asm	/^f0100687:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f010068c	obj/kern/kernel.asm	/^f010068c:	ee                   	out    %al,(%dx)$/;"	l
f010068d	obj/kern/kernel.asm	/^f010068d:	89 d8                	mov    %ebx,%eax$/;"	l
f010068f	obj/kern/kernel.asm	/^f010068f:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100692	obj/kern/kernel.asm	/^f0100692:	5b                   	pop    %ebx$/;"	l
f0100693	obj/kern/kernel.asm	/^f0100693:	5d                   	pop    %ebp$/;"	l
f0100694	obj/kern/kernel.asm	/^f0100694:	c3                   	ret    $/;"	l
f01006a0	obj/kern/kernel.asm	/^f01006a0 <mon_backtrace>:$/;"	l
f01006a0	obj/kern/kernel.asm	/^f01006a0:	55                   	push   %ebp$/;"	l
f01006a1	obj/kern/kernel.asm	/^f01006a1:	89 e5                	mov    %esp,%ebp$/;"	l
f01006a3	obj/kern/kernel.asm	/^f01006a3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01006a8	obj/kern/kernel.asm	/^f01006a8:	5d                   	pop    %ebp$/;"	l
f01006a9	obj/kern/kernel.asm	/^f01006a9:	c3                   	ret    $/;"	l
f01006aa	obj/kern/kernel.asm	/^f01006aa <read_eip>:$/;"	l
f01006aa	obj/kern/kernel.asm	/^f01006aa:	55                   	push   %ebp$/;"	l
f01006ab	obj/kern/kernel.asm	/^f01006ab:	89 e5                	mov    %esp,%ebp$/;"	l
f01006ad	obj/kern/kernel.asm	/^f01006ad:	8b 45 04             	mov    0x4(%ebp),%eax$/;"	l
f01006b0	obj/kern/kernel.asm	/^f01006b0:	5d                   	pop    %ebp$/;"	l
f01006b1	obj/kern/kernel.asm	/^f01006b1:	c3                   	ret    $/;"	l
f01006b2	obj/kern/kernel.asm	/^f01006b2 <mon_kerninfo>:$/;"	l
f01006b2	obj/kern/kernel.asm	/^f01006b2:	55                   	push   %ebp$/;"	l
f01006b3	obj/kern/kernel.asm	/^f01006b3:	89 e5                	mov    %esp,%ebp$/;"	l
f01006b5	obj/kern/kernel.asm	/^f01006b5:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01006b8	obj/kern/kernel.asm	/^f01006b8:	c7 04 24 d0 1c 10 f0 	movl   $0xf0101cd0,(%esp)$/;"	l
f01006bf	obj/kern/kernel.asm	/^f01006bf:	e8 67 02 00 00       	call   f010092b <cprintf>$/;"	l
f01006c4	obj/kern/kernel.asm	/^f01006c4:	c7 44 24 08 0c 00 10 	movl   $0x10000c,0x8(%esp)$/;"	l
f01006cb	obj/kern/kernel.asm	/^f01006cb:	00 $/;"	l
f01006cc	obj/kern/kernel.asm	/^f01006cc:	c7 44 24 04 0c 00 10 	movl   $0xf010000c,0x4(%esp)$/;"	l
f01006d3	obj/kern/kernel.asm	/^f01006d3:	f0 $/;"	l
f01006d4	obj/kern/kernel.asm	/^f01006d4:	c7 04 24 5c 1d 10 f0 	movl   $0xf0101d5c,(%esp)$/;"	l
f01006db	obj/kern/kernel.asm	/^f01006db:	e8 4b 02 00 00       	call   f010092b <cprintf>$/;"	l
f01006e0	obj/kern/kernel.asm	/^f01006e0:	c7 44 24 08 e5 19 10 	movl   $0x1019e5,0x8(%esp)$/;"	l
f01006e7	obj/kern/kernel.asm	/^f01006e7:	00 $/;"	l
f01006e8	obj/kern/kernel.asm	/^f01006e8:	c7 44 24 04 e5 19 10 	movl   $0xf01019e5,0x4(%esp)$/;"	l
f01006ef	obj/kern/kernel.asm	/^f01006ef:	f0 $/;"	l
f01006f0	obj/kern/kernel.asm	/^f01006f0:	c7 04 24 80 1d 10 f0 	movl   $0xf0101d80,(%esp)$/;"	l
f01006f7	obj/kern/kernel.asm	/^f01006f7:	e8 2f 02 00 00       	call   f010092b <cprintf>$/;"	l
f01006fc	obj/kern/kernel.asm	/^f01006fc:	c7 44 24 08 00 23 11 	movl   $0x112300,0x8(%esp)$/;"	l
f0100703	obj/kern/kernel.asm	/^f0100703:	00 $/;"	l
f0100704	obj/kern/kernel.asm	/^f0100704:	c7 44 24 04 00 23 11 	movl   $0xf0112300,0x4(%esp)$/;"	l
f010070b	obj/kern/kernel.asm	/^f010070b:	f0 $/;"	l
f010070c	obj/kern/kernel.asm	/^f010070c:	c7 04 24 a4 1d 10 f0 	movl   $0xf0101da4,(%esp)$/;"	l
f0100713	obj/kern/kernel.asm	/^f0100713:	e8 13 02 00 00       	call   f010092b <cprintf>$/;"	l
f0100718	obj/kern/kernel.asm	/^f0100718:	c7 44 24 08 60 29 11 	movl   $0x112960,0x8(%esp)$/;"	l
f010071f	obj/kern/kernel.asm	/^f010071f:	00 $/;"	l
f0100720	obj/kern/kernel.asm	/^f0100720:	c7 44 24 04 60 29 11 	movl   $0xf0112960,0x4(%esp)$/;"	l
f0100727	obj/kern/kernel.asm	/^f0100727:	f0 $/;"	l
f0100728	obj/kern/kernel.asm	/^f0100728:	c7 04 24 c8 1d 10 f0 	movl   $0xf0101dc8,(%esp)$/;"	l
f010072f	obj/kern/kernel.asm	/^f010072f:	e8 f7 01 00 00       	call   f010092b <cprintf>$/;"	l
f0100734	obj/kern/kernel.asm	/^f0100734:	b8 5f 2d 11 f0       	mov    $0xf0112d5f,%eax$/;"	l
f0100739	obj/kern/kernel.asm	/^f0100739:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f010073e	obj/kern/kernel.asm	/^f010073e:	89 c2                	mov    %eax,%edx$/;"	l
f0100740	obj/kern/kernel.asm	/^f0100740:	c1 fa 1f             	sar    $0x1f,%edx$/;"	l
f0100743	obj/kern/kernel.asm	/^f0100743:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0100746	obj/kern/kernel.asm	/^f0100746:	8d 04 02             	lea    (%edx,%eax,1),%eax$/;"	l
f0100749	obj/kern/kernel.asm	/^f0100749:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
f010074c	obj/kern/kernel.asm	/^f010074c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100750	obj/kern/kernel.asm	/^f0100750:	c7 04 24 ec 1d 10 f0 	movl   $0xf0101dec,(%esp)$/;"	l
f0100757	obj/kern/kernel.asm	/^f0100757:	e8 cf 01 00 00       	call   f010092b <cprintf>$/;"	l
f010075c	obj/kern/kernel.asm	/^f010075c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100761	obj/kern/kernel.asm	/^f0100761:	c9                   	leave  $/;"	l
f0100762	obj/kern/kernel.asm	/^f0100762:	c3                   	ret    $/;"	l
f0100763	obj/kern/kernel.asm	/^f0100763 <mon_help>:$/;"	l
f0100763	obj/kern/kernel.asm	/^f0100763:	55                   	push   %ebp$/;"	l
f0100764	obj/kern/kernel.asm	/^f0100764:	89 e5                	mov    %esp,%ebp$/;"	l
f0100766	obj/kern/kernel.asm	/^f0100766:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100769	obj/kern/kernel.asm	/^f0100769:	a1 90 1e 10 f0       	mov    0xf0101e90,%eax$/;"	l
f010076e	obj/kern/kernel.asm	/^f010076e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100772	obj/kern/kernel.asm	/^f0100772:	a1 8c 1e 10 f0       	mov    0xf0101e8c,%eax$/;"	l
f0100777	obj/kern/kernel.asm	/^f0100777:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010077b	obj/kern/kernel.asm	/^f010077b:	c7 04 24 e9 1c 10 f0 	movl   $0xf0101ce9,(%esp)$/;"	l
f0100782	obj/kern/kernel.asm	/^f0100782:	e8 a4 01 00 00       	call   f010092b <cprintf>$/;"	l
f0100787	obj/kern/kernel.asm	/^f0100787:	a1 9c 1e 10 f0       	mov    0xf0101e9c,%eax$/;"	l
f010078c	obj/kern/kernel.asm	/^f010078c:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100790	obj/kern/kernel.asm	/^f0100790:	a1 98 1e 10 f0       	mov    0xf0101e98,%eax$/;"	l
f0100795	obj/kern/kernel.asm	/^f0100795:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100799	obj/kern/kernel.asm	/^f0100799:	c7 04 24 e9 1c 10 f0 	movl   $0xf0101ce9,(%esp)$/;"	l
f01007a0	obj/kern/kernel.asm	/^f01007a0:	e8 86 01 00 00       	call   f010092b <cprintf>$/;"	l
f01007a5	obj/kern/kernel.asm	/^f01007a5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01007aa	obj/kern/kernel.asm	/^f01007aa:	c9                   	leave  $/;"	l
f01007ab	obj/kern/kernel.asm	/^f01007ab:	c3                   	ret    $/;"	l
f01007ac	obj/kern/kernel.asm	/^f01007ac <monitor>:$/;"	l
f01007ac	obj/kern/kernel.asm	/^f01007ac:	55                   	push   %ebp$/;"	l
f01007ad	obj/kern/kernel.asm	/^f01007ad:	89 e5                	mov    %esp,%ebp$/;"	l
f01007af	obj/kern/kernel.asm	/^f01007af:	57                   	push   %edi$/;"	l
f01007b0	obj/kern/kernel.asm	/^f01007b0:	56                   	push   %esi$/;"	l
f01007b1	obj/kern/kernel.asm	/^f01007b1:	53                   	push   %ebx$/;"	l
f01007b2	obj/kern/kernel.asm	/^f01007b2:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f01007b5	obj/kern/kernel.asm	/^f01007b5:	c7 04 24 18 1e 10 f0 	movl   $0xf0101e18,(%esp)$/;"	l
f01007bc	obj/kern/kernel.asm	/^f01007bc:	e8 6a 01 00 00       	call   f010092b <cprintf>$/;"	l
f01007c1	obj/kern/kernel.asm	/^f01007c1:	c7 04 24 3c 1e 10 f0 	movl   $0xf0101e3c,(%esp)$/;"	l
f01007c8	obj/kern/kernel.asm	/^f01007c8:	e8 5e 01 00 00       	call   f010092b <cprintf>$/;"	l
f01007cd	obj/kern/kernel.asm	/^f01007cd:	bf 8c 1e 10 f0       	mov    $0xf0101e8c,%edi$/;"	l
f01007d2	obj/kern/kernel.asm	/^f01007d2:	c7 04 24 f2 1c 10 f0 	movl   $0xf0101cf2,(%esp)$/;"	l
f01007d9	obj/kern/kernel.asm	/^f01007d9:	e8 b2 0a 00 00       	call   f0101290 <readline>$/;"	l
f01007de	obj/kern/kernel.asm	/^f01007de:	89 c3                	mov    %eax,%ebx$/;"	l
f01007e0	obj/kern/kernel.asm	/^f01007e0:	85 c0                	test   %eax,%eax$/;"	l
f01007e2	obj/kern/kernel.asm	/^f01007e2:	74 ee                	je     f01007d2 <monitor+0x26>$/;"	l
f01007e4	obj/kern/kernel.asm	/^f01007e4:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f01007eb	obj/kern/kernel.asm	/^f01007eb:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01007f0	obj/kern/kernel.asm	/^f01007f0:	eb 06                	jmp    f01007f8 <monitor+0x4c>$/;"	l
f01007f2	obj/kern/kernel.asm	/^f01007f2:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f01007f5	obj/kern/kernel.asm	/^f01007f5:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01007f8	obj/kern/kernel.asm	/^f01007f8:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f01007fb	obj/kern/kernel.asm	/^f01007fb:	84 c0                	test   %al,%al$/;"	l
f01007fd	obj/kern/kernel.asm	/^f01007fd:	74 6c                	je     f010086b <monitor+0xbf>$/;"	l
f01007ff	obj/kern/kernel.asm	/^f01007ff:	0f be c0             	movsbl %al,%eax$/;"	l
f0100802	obj/kern/kernel.asm	/^f0100802:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100806	obj/kern/kernel.asm	/^f0100806:	c7 04 24 f6 1c 10 f0 	movl   $0xf0101cf6,(%esp)$/;"	l
f010080d	obj/kern/kernel.asm	/^f010080d:	e8 ac 0c 00 00       	call   f01014be <strchr>$/;"	l
f0100812	obj/kern/kernel.asm	/^f0100812:	85 c0                	test   %eax,%eax$/;"	l
f0100814	obj/kern/kernel.asm	/^f0100814:	75 dc                	jne    f01007f2 <monitor+0x46>$/;"	l
f0100816	obj/kern/kernel.asm	/^f0100816:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0100819	obj/kern/kernel.asm	/^f0100819:	74 50                	je     f010086b <monitor+0xbf>$/;"	l
f010081b	obj/kern/kernel.asm	/^f010081b:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f010081e	obj/kern/kernel.asm	/^f010081e:	66 90                	xchg   %ax,%ax$/;"	l
f0100820	obj/kern/kernel.asm	/^f0100820:	75 16                	jne    f0100838 <monitor+0x8c>$/;"	l
f0100822	obj/kern/kernel.asm	/^f0100822:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
f0100829	obj/kern/kernel.asm	/^f0100829:	00 $/;"	l
f010082a	obj/kern/kernel.asm	/^f010082a:	c7 04 24 fb 1c 10 f0 	movl   $0xf0101cfb,(%esp)$/;"	l
f0100831	obj/kern/kernel.asm	/^f0100831:	e8 f5 00 00 00       	call   f010092b <cprintf>$/;"	l
f0100836	obj/kern/kernel.asm	/^f0100836:	eb 9a                	jmp    f01007d2 <monitor+0x26>$/;"	l
f0100838	obj/kern/kernel.asm	/^f0100838:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f010083c	obj/kern/kernel.asm	/^f010083c:	83 c6 01             	add    $0x1,%esi$/;"	l
f010083f	obj/kern/kernel.asm	/^f010083f:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100842	obj/kern/kernel.asm	/^f0100842:	84 c0                	test   %al,%al$/;"	l
f0100844	obj/kern/kernel.asm	/^f0100844:	75 0c                	jne    f0100852 <monitor+0xa6>$/;"	l
f0100846	obj/kern/kernel.asm	/^f0100846:	eb b0                	jmp    f01007f8 <monitor+0x4c>$/;"	l
f0100848	obj/kern/kernel.asm	/^f0100848:	83 c3 01             	add    $0x1,%ebx$/;"	l
f010084b	obj/kern/kernel.asm	/^f010084b:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f010084e	obj/kern/kernel.asm	/^f010084e:	84 c0                	test   %al,%al$/;"	l
f0100850	obj/kern/kernel.asm	/^f0100850:	74 a6                	je     f01007f8 <monitor+0x4c>$/;"	l
f0100852	obj/kern/kernel.asm	/^f0100852:	0f be c0             	movsbl %al,%eax$/;"	l
f0100855	obj/kern/kernel.asm	/^f0100855:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100859	obj/kern/kernel.asm	/^f0100859:	c7 04 24 f6 1c 10 f0 	movl   $0xf0101cf6,(%esp)$/;"	l
f0100860	obj/kern/kernel.asm	/^f0100860:	e8 59 0c 00 00       	call   f01014be <strchr>$/;"	l
f0100865	obj/kern/kernel.asm	/^f0100865:	85 c0                	test   %eax,%eax$/;"	l
f0100867	obj/kern/kernel.asm	/^f0100867:	74 df                	je     f0100848 <monitor+0x9c>$/;"	l
f0100869	obj/kern/kernel.asm	/^f0100869:	eb 8d                	jmp    f01007f8 <monitor+0x4c>$/;"	l
f010086b	obj/kern/kernel.asm	/^f010086b:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f0100872	obj/kern/kernel.asm	/^f0100872:	00 $/;"	l
f0100873	obj/kern/kernel.asm	/^f0100873:	85 f6                	test   %esi,%esi$/;"	l
f0100875	obj/kern/kernel.asm	/^f0100875:	0f 84 57 ff ff ff    	je     f01007d2 <monitor+0x26>$/;"	l
f010087b	obj/kern/kernel.asm	/^f010087b:	8b 07                	mov    (%edi),%eax$/;"	l
f010087d	obj/kern/kernel.asm	/^f010087d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100881	obj/kern/kernel.asm	/^f0100881:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0100884	obj/kern/kernel.asm	/^f0100884:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100887	obj/kern/kernel.asm	/^f0100887:	e8 bd 0b 00 00       	call   f0101449 <strcmp>$/;"	l
f010088c	obj/kern/kernel.asm	/^f010088c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100891	obj/kern/kernel.asm	/^f0100891:	85 c0                	test   %eax,%eax$/;"	l
f0100893	obj/kern/kernel.asm	/^f0100893:	74 1d                	je     f01008b2 <monitor+0x106>$/;"	l
f0100895	obj/kern/kernel.asm	/^f0100895:	a1 98 1e 10 f0       	mov    0xf0101e98,%eax$/;"	l
f010089a	obj/kern/kernel.asm	/^f010089a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010089e	obj/kern/kernel.asm	/^f010089e:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f01008a1	obj/kern/kernel.asm	/^f01008a1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01008a4	obj/kern/kernel.asm	/^f01008a4:	e8 a0 0b 00 00       	call   f0101449 <strcmp>$/;"	l
f01008a9	obj/kern/kernel.asm	/^f01008a9:	85 c0                	test   %eax,%eax$/;"	l
f01008ab	obj/kern/kernel.asm	/^f01008ab:	75 28                	jne    f01008d5 <monitor+0x129>$/;"	l
f01008ad	obj/kern/kernel.asm	/^f01008ad:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f01008b2	obj/kern/kernel.asm	/^f01008b2:	6b d2 0c             	imul   $0xc,%edx,%edx$/;"	l
f01008b5	obj/kern/kernel.asm	/^f01008b5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01008b8	obj/kern/kernel.asm	/^f01008b8:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01008bc	obj/kern/kernel.asm	/^f01008bc:	8d 45 a8             	lea    -0x58(%ebp),%eax$/;"	l
f01008bf	obj/kern/kernel.asm	/^f01008bf:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01008c3	obj/kern/kernel.asm	/^f01008c3:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01008c6	obj/kern/kernel.asm	/^f01008c6:	ff 92 94 1e 10 f0    	call   *-0xfefe16c(%edx)$/;"	l
f01008cc	obj/kern/kernel.asm	/^f01008cc:	85 c0                	test   %eax,%eax$/;"	l
f01008ce	obj/kern/kernel.asm	/^f01008ce:	78 1d                	js     f01008ed <monitor+0x141>$/;"	l
f01008d0	obj/kern/kernel.asm	/^f01008d0:	e9 fd fe ff ff       	jmp    f01007d2 <monitor+0x26>$/;"	l
f01008d5	obj/kern/kernel.asm	/^f01008d5:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f01008d8	obj/kern/kernel.asm	/^f01008d8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01008dc	obj/kern/kernel.asm	/^f01008dc:	c7 04 24 18 1d 10 f0 	movl   $0xf0101d18,(%esp)$/;"	l
f01008e3	obj/kern/kernel.asm	/^f01008e3:	e8 43 00 00 00       	call   f010092b <cprintf>$/;"	l
f01008e8	obj/kern/kernel.asm	/^f01008e8:	e9 e5 fe ff ff       	jmp    f01007d2 <monitor+0x26>$/;"	l
f01008ed	obj/kern/kernel.asm	/^f01008ed:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f01008f0	obj/kern/kernel.asm	/^f01008f0:	5b                   	pop    %ebx$/;"	l
f01008f1	obj/kern/kernel.asm	/^f01008f1:	5e                   	pop    %esi$/;"	l
f01008f2	obj/kern/kernel.asm	/^f01008f2:	5f                   	pop    %edi$/;"	l
f01008f3	obj/kern/kernel.asm	/^f01008f3:	5d                   	pop    %ebp$/;"	l
f01008f4	obj/kern/kernel.asm	/^f01008f4:	c3                   	ret    $/;"	l
f01008f5	obj/kern/kernel.asm	/^f01008f5:	00 00                	add    %al,(%eax)$/;"	l
f01008f8	obj/kern/kernel.asm	/^f01008f8 <vcprintf>:$/;"	l
f01008f8	obj/kern/kernel.asm	/^f01008f8:	55                   	push   %ebp$/;"	l
f01008f9	obj/kern/kernel.asm	/^f01008f9:	89 e5                	mov    %esp,%ebp$/;"	l
f01008fb	obj/kern/kernel.asm	/^f01008fb:	83 ec 28             	sub    $0x28,%esp$/;"	l
f01008fe	obj/kern/kernel.asm	/^f01008fe:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0100905	obj/kern/kernel.asm	/^f0100905:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100908	obj/kern/kernel.asm	/^f0100908:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010090c	obj/kern/kernel.asm	/^f010090c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010090f	obj/kern/kernel.asm	/^f010090f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100913	obj/kern/kernel.asm	/^f0100913:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0100916	obj/kern/kernel.asm	/^f0100916:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010091a	obj/kern/kernel.asm	/^f010091a:	c7 04 24 45 09 10 f0 	movl   $0xf0100945,(%esp)$/;"	l
f0100921	obj/kern/kernel.asm	/^f0100921:	e8 87 04 00 00       	call   f0100dad <vprintfmt>$/;"	l
f0100926	obj/kern/kernel.asm	/^f0100926:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100929	obj/kern/kernel.asm	/^f0100929:	c9                   	leave  $/;"	l
f010092a	obj/kern/kernel.asm	/^f010092a:	c3                   	ret    $/;"	l
f010092b	obj/kern/kernel.asm	/^f010092b <cprintf>:$/;"	l
f010092b	obj/kern/kernel.asm	/^f010092b:	55                   	push   %ebp$/;"	l
f010092c	obj/kern/kernel.asm	/^f010092c:	89 e5                	mov    %esp,%ebp$/;"	l
f010092e	obj/kern/kernel.asm	/^f010092e:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100931	obj/kern/kernel.asm	/^f0100931:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f0100934	obj/kern/kernel.asm	/^f0100934:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100938	obj/kern/kernel.asm	/^f0100938:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010093b	obj/kern/kernel.asm	/^f010093b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010093e	obj/kern/kernel.asm	/^f010093e:	e8 b5 ff ff ff       	call   f01008f8 <vcprintf>$/;"	l
f0100943	obj/kern/kernel.asm	/^f0100943:	c9                   	leave  $/;"	l
f0100944	obj/kern/kernel.asm	/^f0100944:	c3                   	ret    $/;"	l
f0100945	obj/kern/kernel.asm	/^f0100945 <putch>:$/;"	l
f0100945	obj/kern/kernel.asm	/^f0100945:	55                   	push   %ebp$/;"	l
f0100946	obj/kern/kernel.asm	/^f0100946:	89 e5                	mov    %esp,%ebp$/;"	l
f0100948	obj/kern/kernel.asm	/^f0100948:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010094b	obj/kern/kernel.asm	/^f010094b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010094e	obj/kern/kernel.asm	/^f010094e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100951	obj/kern/kernel.asm	/^f0100951:	e8 44 fb ff ff       	call   f010049a <cputchar>$/;"	l
f0100956	obj/kern/kernel.asm	/^f0100956:	c9                   	leave  $/;"	l
f0100957	obj/kern/kernel.asm	/^f0100957:	c3                   	ret    $/;"	l
f0100960	obj/kern/kernel.asm	/^f0100960 <stab_binsearch>:$/;"	l
f0100960	obj/kern/kernel.asm	/^f0100960:	55                   	push   %ebp$/;"	l
f0100961	obj/kern/kernel.asm	/^f0100961:	89 e5                	mov    %esp,%ebp$/;"	l
f0100963	obj/kern/kernel.asm	/^f0100963:	57                   	push   %edi$/;"	l
f0100964	obj/kern/kernel.asm	/^f0100964:	56                   	push   %esi$/;"	l
f0100965	obj/kern/kernel.asm	/^f0100965:	53                   	push   %ebx$/;"	l
f0100966	obj/kern/kernel.asm	/^f0100966:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100969	obj/kern/kernel.asm	/^f0100969:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f010096c	obj/kern/kernel.asm	/^f010096c:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
f010096f	obj/kern/kernel.asm	/^f010096f:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0100972	obj/kern/kernel.asm	/^f0100972:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0100975	obj/kern/kernel.asm	/^f0100975:	8b 1a                	mov    (%edx),%ebx$/;"	l
f0100977	obj/kern/kernel.asm	/^f0100977:	8b 01                	mov    (%ecx),%eax$/;"	l
f0100979	obj/kern/kernel.asm	/^f0100979:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f010097c	obj/kern/kernel.asm	/^f010097c:	39 c3                	cmp    %eax,%ebx$/;"	l
f010097e	obj/kern/kernel.asm	/^f010097e:	0f 8f 9c 00 00 00    	jg     f0100a20 <stab_binsearch+0xc0>$/;"	l
f0100984	obj/kern/kernel.asm	/^f0100984:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f010098b	obj/kern/kernel.asm	/^f010098b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f010098e	obj/kern/kernel.asm	/^f010098e:	01 d8                	add    %ebx,%eax$/;"	l
f0100990	obj/kern/kernel.asm	/^f0100990:	89 c7                	mov    %eax,%edi$/;"	l
f0100992	obj/kern/kernel.asm	/^f0100992:	c1 ef 1f             	shr    $0x1f,%edi$/;"	l
f0100995	obj/kern/kernel.asm	/^f0100995:	01 c7                	add    %eax,%edi$/;"	l
f0100997	obj/kern/kernel.asm	/^f0100997:	d1 ff                	sar    %edi$/;"	d
f0100999	obj/kern/kernel.asm	/^f0100999:	39 df                	cmp    %ebx,%edi$/;"	l
f010099b	obj/kern/kernel.asm	/^f010099b:	7c 33                	jl     f01009d0 <stab_binsearch+0x70>$/;"	l
f010099d	obj/kern/kernel.asm	/^f010099d:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f01009a0	obj/kern/kernel.asm	/^f01009a0:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f01009a3	obj/kern/kernel.asm	/^f01009a3:	0f b6 44 82 04       	movzbl 0x4(%edx,%eax,4),%eax$/;"	l
f01009a8	obj/kern/kernel.asm	/^f01009a8:	39 f0                	cmp    %esi,%eax$/;"	l
f01009aa	obj/kern/kernel.asm	/^f01009aa:	0f 84 bc 00 00 00    	je     f0100a6c <stab_binsearch+0x10c>$/;"	l
f01009b0	obj/kern/kernel.asm	/^f01009b0:	8d 44 7f fd          	lea    -0x3(%edi,%edi,2),%eax$/;"	l
f01009b4	obj/kern/kernel.asm	/^f01009b4:	8d 54 82 04          	lea    0x4(%edx,%eax,4),%edx$/;"	l
f01009b8	obj/kern/kernel.asm	/^f01009b8:	89 f8                	mov    %edi,%eax$/;"	l
f01009ba	obj/kern/kernel.asm	/^f01009ba:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01009bd	obj/kern/kernel.asm	/^f01009bd:	39 d8                	cmp    %ebx,%eax$/;"	l
f01009bf	obj/kern/kernel.asm	/^f01009bf:	7c 0f                	jl     f01009d0 <stab_binsearch+0x70>$/;"	l
f01009c1	obj/kern/kernel.asm	/^f01009c1:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f01009c4	obj/kern/kernel.asm	/^f01009c4:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f01009c7	obj/kern/kernel.asm	/^f01009c7:	39 f1                	cmp    %esi,%ecx$/;"	l
f01009c9	obj/kern/kernel.asm	/^f01009c9:	75 ef                	jne    f01009ba <stab_binsearch+0x5a>$/;"	l
f01009cb	obj/kern/kernel.asm	/^f01009cb:	e9 9e 00 00 00       	jmp    f0100a6e <stab_binsearch+0x10e>$/;"	l
f01009d0	obj/kern/kernel.asm	/^f01009d0:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f01009d3	obj/kern/kernel.asm	/^f01009d3:	eb 3c                	jmp    f0100a11 <stab_binsearch+0xb1>$/;"	l
f01009d5	obj/kern/kernel.asm	/^f01009d5:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
f01009d8	obj/kern/kernel.asm	/^f01009d8:	89 01                	mov    %eax,(%ecx)$/;"	l
f01009da	obj/kern/kernel.asm	/^f01009da:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f01009dd	obj/kern/kernel.asm	/^f01009dd:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f01009e4	obj/kern/kernel.asm	/^f01009e4:	eb 2b                	jmp    f0100a11 <stab_binsearch+0xb1>$/;"	l
f01009e6	obj/kern/kernel.asm	/^f01009e6:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f01009e9	obj/kern/kernel.asm	/^f01009e9:	76 14                	jbe    f01009ff <stab_binsearch+0x9f>$/;"	l
f01009eb	obj/kern/kernel.asm	/^f01009eb:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01009ee	obj/kern/kernel.asm	/^f01009ee:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f01009f1	obj/kern/kernel.asm	/^f01009f1:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f01009f4	obj/kern/kernel.asm	/^f01009f4:	89 02                	mov    %eax,(%edx)$/;"	l
f01009f6	obj/kern/kernel.asm	/^f01009f6:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f01009fd	obj/kern/kernel.asm	/^f01009fd:	eb 12                	jmp    f0100a11 <stab_binsearch+0xb1>$/;"	l
f01009ff	obj/kern/kernel.asm	/^f01009ff:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
f0100a02	obj/kern/kernel.asm	/^f0100a02:	89 01                	mov    %eax,(%ecx)$/;"	l
f0100a04	obj/kern/kernel.asm	/^f0100a04:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f0100a08	obj/kern/kernel.asm	/^f0100a08:	89 c3                	mov    %eax,%ebx$/;"	l
f0100a0a	obj/kern/kernel.asm	/^f0100a0a:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f0100a11	obj/kern/kernel.asm	/^f0100a11:	39 5d ec             	cmp    %ebx,-0x14(%ebp)$/;"	l
f0100a14	obj/kern/kernel.asm	/^f0100a14:	0f 8d 71 ff ff ff    	jge    f010098b <stab_binsearch+0x2b>$/;"	l
f0100a1a	obj/kern/kernel.asm	/^f0100a1a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0100a1e	obj/kern/kernel.asm	/^f0100a1e:	75 0f                	jne    f0100a2f <stab_binsearch+0xcf>$/;"	l
f0100a20	obj/kern/kernel.asm	/^f0100a20:	8b 5d e8             	mov    -0x18(%ebp),%ebx$/;"	l
f0100a23	obj/kern/kernel.asm	/^f0100a23:	8b 03                	mov    (%ebx),%eax$/;"	l
f0100a25	obj/kern/kernel.asm	/^f0100a25:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100a28	obj/kern/kernel.asm	/^f0100a28:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0100a2b	obj/kern/kernel.asm	/^f0100a2b:	89 02                	mov    %eax,(%edx)$/;"	l
f0100a2d	obj/kern/kernel.asm	/^f0100a2d:	eb 57                	jmp    f0100a86 <stab_binsearch+0x126>$/;"	l
f0100a2f	obj/kern/kernel.asm	/^f0100a2f:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0100a32	obj/kern/kernel.asm	/^f0100a32:	8b 01                	mov    (%ecx),%eax$/;"	l
f0100a34	obj/kern/kernel.asm	/^f0100a34:	8b 5d e8             	mov    -0x18(%ebp),%ebx$/;"	l
f0100a37	obj/kern/kernel.asm	/^f0100a37:	8b 0b                	mov    (%ebx),%ecx$/;"	l
f0100a39	obj/kern/kernel.asm	/^f0100a39:	39 c1                	cmp    %eax,%ecx$/;"	l
f0100a3b	obj/kern/kernel.asm	/^f0100a3b:	7d 28                	jge    f0100a65 <stab_binsearch+0x105>$/;"	l
f0100a3d	obj/kern/kernel.asm	/^f0100a3d:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0100a40	obj/kern/kernel.asm	/^f0100a40:	8b 5d f0             	mov    -0x10(%ebp),%ebx$/;"	l
f0100a43	obj/kern/kernel.asm	/^f0100a43:	0f b6 54 93 04       	movzbl 0x4(%ebx,%edx,4),%edx$/;"	l
f0100a48	obj/kern/kernel.asm	/^f0100a48:	39 f2                	cmp    %esi,%edx$/;"	l
f0100a4a	obj/kern/kernel.asm	/^f0100a4a:	74 19                	je     f0100a65 <stab_binsearch+0x105>$/;"	l
f0100a4c	obj/kern/kernel.asm	/^f0100a4c:	8d 54 40 fd          	lea    -0x3(%eax,%eax,2),%edx$/;"	l
f0100a50	obj/kern/kernel.asm	/^f0100a50:	8d 54 93 04          	lea    0x4(%ebx,%edx,4),%edx$/;"	l
f0100a54	obj/kern/kernel.asm	/^f0100a54:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100a57	obj/kern/kernel.asm	/^f0100a57:	39 c1                	cmp    %eax,%ecx$/;"	l
f0100a59	obj/kern/kernel.asm	/^f0100a59:	7d 0a                	jge    f0100a65 <stab_binsearch+0x105>$/;"	l
f0100a5b	obj/kern/kernel.asm	/^f0100a5b:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0100a5e	obj/kern/kernel.asm	/^f0100a5e:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0100a61	obj/kern/kernel.asm	/^f0100a61:	39 f3                	cmp    %esi,%ebx$/;"	l
f0100a63	obj/kern/kernel.asm	/^f0100a63:	75 ef                	jne    f0100a54 <stab_binsearch+0xf4>$/;"	l
f0100a65	obj/kern/kernel.asm	/^f0100a65:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0100a68	obj/kern/kernel.asm	/^f0100a68:	89 02                	mov    %eax,(%edx)$/;"	l
f0100a6a	obj/kern/kernel.asm	/^f0100a6a:	eb 1a                	jmp    f0100a86 <stab_binsearch+0x126>$/;"	l
f0100a6c	obj/kern/kernel.asm	/^f0100a6c:	89 f8                	mov    %edi,%eax$/;"	l
f0100a6e	obj/kern/kernel.asm	/^f0100a6e:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0100a71	obj/kern/kernel.asm	/^f0100a71:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
f0100a74	obj/kern/kernel.asm	/^f0100a74:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f0100a78	obj/kern/kernel.asm	/^f0100a78:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f0100a7b	obj/kern/kernel.asm	/^f0100a7b:	0f 82 54 ff ff ff    	jb     f01009d5 <stab_binsearch+0x75>$/;"	l
f0100a81	obj/kern/kernel.asm	/^f0100a81:	e9 60 ff ff ff       	jmp    f01009e6 <stab_binsearch+0x86>$/;"	l
f0100a86	obj/kern/kernel.asm	/^f0100a86:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100a89	obj/kern/kernel.asm	/^f0100a89:	5b                   	pop    %ebx$/;"	l
f0100a8a	obj/kern/kernel.asm	/^f0100a8a:	5e                   	pop    %esi$/;"	l
f0100a8b	obj/kern/kernel.asm	/^f0100a8b:	5f                   	pop    %edi$/;"	l
f0100a8c	obj/kern/kernel.asm	/^f0100a8c:	5d                   	pop    %ebp$/;"	l
f0100a8d	obj/kern/kernel.asm	/^f0100a8d:	c3                   	ret    $/;"	l
f0100a8e	obj/kern/kernel.asm	/^f0100a8e <debuginfo_eip>:$/;"	l
f0100a8e	obj/kern/kernel.asm	/^f0100a8e:	55                   	push   %ebp$/;"	l
f0100a8f	obj/kern/kernel.asm	/^f0100a8f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a91	obj/kern/kernel.asm	/^f0100a91:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0100a94	obj/kern/kernel.asm	/^f0100a94:	89 5d f8             	mov    %ebx,-0x8(%ebp)$/;"	l
f0100a97	obj/kern/kernel.asm	/^f0100a97:	89 75 fc             	mov    %esi,-0x4(%ebp)$/;"	l
f0100a9a	obj/kern/kernel.asm	/^f0100a9a:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0100a9d	obj/kern/kernel.asm	/^f0100a9d:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0100aa0	obj/kern/kernel.asm	/^f0100aa0:	c7 03 a4 1e 10 f0    	movl   $0xf0101ea4,(%ebx)$/;"	l
f0100aa6	obj/kern/kernel.asm	/^f0100aa6:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)$/;"	l
f0100aad	obj/kern/kernel.asm	/^f0100aad:	c7 43 08 a4 1e 10 f0 	movl   $0xf0101ea4,0x8(%ebx)$/;"	l
f0100ab4	obj/kern/kernel.asm	/^f0100ab4:	c7 43 0c 09 00 00 00 	movl   $0x9,0xc(%ebx)$/;"	l
f0100abb	obj/kern/kernel.asm	/^f0100abb:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f0100abe	obj/kern/kernel.asm	/^f0100abe:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)$/;"	l
f0100ac5	obj/kern/kernel.asm	/^f0100ac5:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f0100acb	obj/kern/kernel.asm	/^f0100acb:	76 12                	jbe    f0100adf <debuginfo_eip+0x51>$/;"	l
f0100acd	obj/kern/kernel.asm	/^f0100acd:	b8 b8 75 10 f0       	mov    $0xf01075b8,%eax$/;"	l
f0100ad2	obj/kern/kernel.asm	/^f0100ad2:	3d b1 5b 10 f0       	cmp    $0xf0105bb1,%eax$/;"	l
f0100ad7	obj/kern/kernel.asm	/^f0100ad7:	0f 86 53 01 00 00    	jbe    f0100c30 <debuginfo_eip+0x1a2>$/;"	l
f0100add	obj/kern/kernel.asm	/^f0100add:	eb 1c                	jmp    f0100afb <debuginfo_eip+0x6d>$/;"	l
f0100adf	obj/kern/kernel.asm	/^f0100adf:	c7 44 24 08 ae 1e 10 	movl   $0xf0101eae,0x8(%esp)$/;"	l
f0100ae6	obj/kern/kernel.asm	/^f0100ae6:	f0 $/;"	l
f0100ae7	obj/kern/kernel.asm	/^f0100ae7:	c7 44 24 04 7f 00 00 	movl   $0x7f,0x4(%esp)$/;"	l
f0100aee	obj/kern/kernel.asm	/^f0100aee:	00 $/;"	l
f0100aef	obj/kern/kernel.asm	/^f0100aef:	c7 04 24 bb 1e 10 f0 	movl   $0xf0101ebb,(%esp)$/;"	l
f0100af6	obj/kern/kernel.asm	/^f0100af6:	e8 8a f5 ff ff       	call   f0100085 <_panic>$/;"	l
f0100afb	obj/kern/kernel.asm	/^f0100afb:	80 3d b7 75 10 f0 00 	cmpb   $0x0,0xf01075b7$/;"	l
f0100b02	obj/kern/kernel.asm	/^f0100b02:	0f 85 28 01 00 00    	jne    f0100c30 <debuginfo_eip+0x1a2>$/;"	l
f0100b08	obj/kern/kernel.asm	/^f0100b08:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0100b0f	obj/kern/kernel.asm	/^f0100b0f:	b8 b0 5b 10 f0       	mov    $0xf0105bb0,%eax$/;"	l
f0100b14	obj/kern/kernel.asm	/^f0100b14:	2d dc 20 10 f0       	sub    $0xf01020dc,%eax$/;"	l
f0100b19	obj/kern/kernel.asm	/^f0100b19:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0100b1c	obj/kern/kernel.asm	/^f0100b1c:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f0100b22	obj/kern/kernel.asm	/^f0100b22:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100b25	obj/kern/kernel.asm	/^f0100b25:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0100b28	obj/kern/kernel.asm	/^f0100b28:	8d 4d f0             	lea    -0x10(%ebp),%ecx$/;"	l
f0100b2b	obj/kern/kernel.asm	/^f0100b2b:	8d 55 f4             	lea    -0xc(%ebp),%edx$/;"	l
f0100b2e	obj/kern/kernel.asm	/^f0100b2e:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0100b32	obj/kern/kernel.asm	/^f0100b32:	c7 04 24 64 00 00 00 	movl   $0x64,(%esp)$/;"	l
f0100b39	obj/kern/kernel.asm	/^f0100b39:	b8 dc 20 10 f0       	mov    $0xf01020dc,%eax$/;"	l
f0100b3e	obj/kern/kernel.asm	/^f0100b3e:	e8 1d fe ff ff       	call   f0100960 <stab_binsearch>$/;"	l
f0100b43	obj/kern/kernel.asm	/^f0100b43:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100b46	obj/kern/kernel.asm	/^f0100b46:	85 c0                	test   %eax,%eax$/;"	l
f0100b48	obj/kern/kernel.asm	/^f0100b48:	0f 84 e2 00 00 00    	je     f0100c30 <debuginfo_eip+0x1a2>$/;"	l
f0100b4e	obj/kern/kernel.asm	/^f0100b4e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0100b51	obj/kern/kernel.asm	/^f0100b51:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0100b54	obj/kern/kernel.asm	/^f0100b54:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f0100b57	obj/kern/kernel.asm	/^f0100b57:	8d 4d e8             	lea    -0x18(%ebp),%ecx$/;"	l
f0100b5a	obj/kern/kernel.asm	/^f0100b5a:	8d 55 ec             	lea    -0x14(%ebp),%edx$/;"	l
f0100b5d	obj/kern/kernel.asm	/^f0100b5d:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0100b61	obj/kern/kernel.asm	/^f0100b61:	c7 04 24 24 00 00 00 	movl   $0x24,(%esp)$/;"	l
f0100b68	obj/kern/kernel.asm	/^f0100b68:	b8 dc 20 10 f0       	mov    $0xf01020dc,%eax$/;"	l
f0100b6d	obj/kern/kernel.asm	/^f0100b6d:	e8 ee fd ff ff       	call   f0100960 <stab_binsearch>$/;"	l
f0100b72	obj/kern/kernel.asm	/^f0100b72:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0100b75	obj/kern/kernel.asm	/^f0100b75:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
f0100b78	obj/kern/kernel.asm	/^f0100b78:	7f 31                	jg     f0100bab <debuginfo_eip+0x11d>$/;"	l
f0100b7a	obj/kern/kernel.asm	/^f0100b7a:	6b c0 0c             	imul   $0xc,%eax,%eax$/;"	l
f0100b7d	obj/kern/kernel.asm	/^f0100b7d:	8b 80 dc 20 10 f0    	mov    -0xfefdf24(%eax),%eax$/;"	l
f0100b83	obj/kern/kernel.asm	/^f0100b83:	ba b8 75 10 f0       	mov    $0xf01075b8,%edx$/;"	l
f0100b88	obj/kern/kernel.asm	/^f0100b88:	81 ea b1 5b 10 f0    	sub    $0xf0105bb1,%edx$/;"	l
f0100b8e	obj/kern/kernel.asm	/^f0100b8e:	39 d0                	cmp    %edx,%eax$/;"	l
f0100b90	obj/kern/kernel.asm	/^f0100b90:	73 08                	jae    f0100b9a <debuginfo_eip+0x10c>$/;"	l
f0100b92	obj/kern/kernel.asm	/^f0100b92:	05 b1 5b 10 f0       	add    $0xf0105bb1,%eax$/;"	l
f0100b97	obj/kern/kernel.asm	/^f0100b97:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
f0100b9a	obj/kern/kernel.asm	/^f0100b9a:	8b 75 ec             	mov    -0x14(%ebp),%esi$/;"	l
f0100b9d	obj/kern/kernel.asm	/^f0100b9d:	6b c6 0c             	imul   $0xc,%esi,%eax$/;"	l
f0100ba0	obj/kern/kernel.asm	/^f0100ba0:	8b 80 e4 20 10 f0    	mov    -0xfefdf1c(%eax),%eax$/;"	l
f0100ba6	obj/kern/kernel.asm	/^f0100ba6:	89 43 10             	mov    %eax,0x10(%ebx)$/;"	l
f0100ba9	obj/kern/kernel.asm	/^f0100ba9:	eb 06                	jmp    f0100bb1 <debuginfo_eip+0x123>$/;"	l
f0100bab	obj/kern/kernel.asm	/^f0100bab:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f0100bae	obj/kern/kernel.asm	/^f0100bae:	8b 75 f4             	mov    -0xc(%ebp),%esi$/;"	l
f0100bb1	obj/kern/kernel.asm	/^f0100bb1:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
f0100bb8	obj/kern/kernel.asm	/^f0100bb8:	00 $/;"	l
f0100bb9	obj/kern/kernel.asm	/^f0100bb9:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0100bbc	obj/kern/kernel.asm	/^f0100bbc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100bbf	obj/kern/kernel.asm	/^f0100bbf:	e8 27 09 00 00       	call   f01014eb <strfind>$/;"	l
f0100bc4	obj/kern/kernel.asm	/^f0100bc4:	2b 43 08             	sub    0x8(%ebx),%eax$/;"	l
f0100bc7	obj/kern/kernel.asm	/^f0100bc7:	89 43 0c             	mov    %eax,0xc(%ebx)$/;"	l
f0100bca	obj/kern/kernel.asm	/^f0100bca:	8b 4d f4             	mov    -0xc(%ebp),%ecx$/;"	l
f0100bcd	obj/kern/kernel.asm	/^f0100bcd:	6b c6 0c             	imul   $0xc,%esi,%eax$/;"	l
f0100bd0	obj/kern/kernel.asm	/^f0100bd0:	05 e4 20 10 f0       	add    $0xf01020e4,%eax$/;"	l
f0100bd5	obj/kern/kernel.asm	/^f0100bd5:	eb 06                	jmp    f0100bdd <debuginfo_eip+0x14f>$/;"	l
f0100bd7	obj/kern/kernel.asm	/^f0100bd7:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0100bda	obj/kern/kernel.asm	/^f0100bda:	83 e8 0c             	sub    $0xc,%eax$/;"	l
f0100bdd	obj/kern/kernel.asm	/^f0100bdd:	39 ce                	cmp    %ecx,%esi$/;"	l
f0100bdf	obj/kern/kernel.asm	/^f0100bdf:	7c 20                	jl     f0100c01 <debuginfo_eip+0x173>$/;"	l
f0100be1	obj/kern/kernel.asm	/^f0100be1:	0f b6 50 fc          	movzbl -0x4(%eax),%edx$/;"	l
f0100be5	obj/kern/kernel.asm	/^f0100be5:	80 fa 84             	cmp    $0x84,%dl$/;"	l
f0100be8	obj/kern/kernel.asm	/^f0100be8:	74 5c                	je     f0100c46 <debuginfo_eip+0x1b8>$/;"	l
f0100bea	obj/kern/kernel.asm	/^f0100bea:	80 fa 64             	cmp    $0x64,%dl$/;"	l
f0100bed	obj/kern/kernel.asm	/^f0100bed:	75 e8                	jne    f0100bd7 <debuginfo_eip+0x149>$/;"	l
f0100bef	obj/kern/kernel.asm	/^f0100bef:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f0100bf2	obj/kern/kernel.asm	/^f0100bf2:	74 e3                	je     f0100bd7 <debuginfo_eip+0x149>$/;"	l
f0100bf4	obj/kern/kernel.asm	/^f0100bf4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0100bf8	obj/kern/kernel.asm	/^f0100bf8:	eb 4c                	jmp    f0100c46 <debuginfo_eip+0x1b8>$/;"	l
f0100bfa	obj/kern/kernel.asm	/^f0100bfa:	05 b1 5b 10 f0       	add    $0xf0105bb1,%eax$/;"	l
f0100bff	obj/kern/kernel.asm	/^f0100bff:	89 03                	mov    %eax,(%ebx)$/;"	l
f0100c01	obj/kern/kernel.asm	/^f0100c01:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0100c04	obj/kern/kernel.asm	/^f0100c04:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
f0100c07	obj/kern/kernel.asm	/^f0100c07:	7d 2e                	jge    f0100c37 <debuginfo_eip+0x1a9>$/;"	l
f0100c09	obj/kern/kernel.asm	/^f0100c09:	83 c0 01             	add    $0x1,%eax$/;"	l
f0100c0c	obj/kern/kernel.asm	/^f0100c0c:	6b d0 0c             	imul   $0xc,%eax,%edx$/;"	l
f0100c0f	obj/kern/kernel.asm	/^f0100c0f:	81 c2 e0 20 10 f0    	add    $0xf01020e0,%edx$/;"	l
f0100c15	obj/kern/kernel.asm	/^f0100c15:	eb 07                	jmp    f0100c1e <debuginfo_eip+0x190>$/;"	l
f0100c17	obj/kern/kernel.asm	/^f0100c17:	83 43 14 01          	addl   $0x1,0x14(%ebx)$/;"	l
f0100c1b	obj/kern/kernel.asm	/^f0100c1b:	83 c0 01             	add    $0x1,%eax$/;"	l
f0100c1e	obj/kern/kernel.asm	/^f0100c1e:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
f0100c21	obj/kern/kernel.asm	/^f0100c21:	7d 14                	jge    f0100c37 <debuginfo_eip+0x1a9>$/;"	l
f0100c23	obj/kern/kernel.asm	/^f0100c23:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0100c26	obj/kern/kernel.asm	/^f0100c26:	83 c2 0c             	add    $0xc,%edx$/;"	l
f0100c29	obj/kern/kernel.asm	/^f0100c29:	80 f9 a0             	cmp    $0xa0,%cl$/;"	l
f0100c2c	obj/kern/kernel.asm	/^f0100c2c:	74 e9                	je     f0100c17 <debuginfo_eip+0x189>$/;"	l
f0100c2e	obj/kern/kernel.asm	/^f0100c2e:	eb 07                	jmp    f0100c37 <debuginfo_eip+0x1a9>$/;"	l
f0100c30	obj/kern/kernel.asm	/^f0100c30:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100c35	obj/kern/kernel.asm	/^f0100c35:	eb 05                	jmp    f0100c3c <debuginfo_eip+0x1ae>$/;"	l
f0100c37	obj/kern/kernel.asm	/^f0100c37:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100c3c	obj/kern/kernel.asm	/^f0100c3c:	8b 5d f8             	mov    -0x8(%ebp),%ebx$/;"	l
f0100c3f	obj/kern/kernel.asm	/^f0100c3f:	8b 75 fc             	mov    -0x4(%ebp),%esi$/;"	l
f0100c42	obj/kern/kernel.asm	/^f0100c42:	89 ec                	mov    %ebp,%esp$/;"	l
f0100c44	obj/kern/kernel.asm	/^f0100c44:	5d                   	pop    %ebp$/;"	l
f0100c45	obj/kern/kernel.asm	/^f0100c45:	c3                   	ret    $/;"	l
f0100c46	obj/kern/kernel.asm	/^f0100c46:	6b f6 0c             	imul   $0xc,%esi,%esi$/;"	l
f0100c49	obj/kern/kernel.asm	/^f0100c49:	8b 86 dc 20 10 f0    	mov    -0xfefdf24(%esi),%eax$/;"	l
f0100c4f	obj/kern/kernel.asm	/^f0100c4f:	ba b8 75 10 f0       	mov    $0xf01075b8,%edx$/;"	l
f0100c54	obj/kern/kernel.asm	/^f0100c54:	81 ea b1 5b 10 f0    	sub    $0xf0105bb1,%edx$/;"	l
f0100c5a	obj/kern/kernel.asm	/^f0100c5a:	39 d0                	cmp    %edx,%eax$/;"	l
f0100c5c	obj/kern/kernel.asm	/^f0100c5c:	72 9c                	jb     f0100bfa <debuginfo_eip+0x16c>$/;"	l
f0100c5e	obj/kern/kernel.asm	/^f0100c5e:	eb a1                	jmp    f0100c01 <debuginfo_eip+0x173>$/;"	l
f0100c60	obj/kern/kernel.asm	/^f0100c60 <printnum>:$/;"	l
f0100c60	obj/kern/kernel.asm	/^f0100c60:	55                   	push   %ebp$/;"	l
f0100c61	obj/kern/kernel.asm	/^f0100c61:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c63	obj/kern/kernel.asm	/^f0100c63:	57                   	push   %edi$/;"	l
f0100c64	obj/kern/kernel.asm	/^f0100c64:	56                   	push   %esi$/;"	l
f0100c65	obj/kern/kernel.asm	/^f0100c65:	53                   	push   %ebx$/;"	l
f0100c66	obj/kern/kernel.asm	/^f0100c66:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0100c69	obj/kern/kernel.asm	/^f0100c69:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0100c6c	obj/kern/kernel.asm	/^f0100c6c:	89 d6                	mov    %edx,%esi$/;"	l
f0100c6e	obj/kern/kernel.asm	/^f0100c6e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100c71	obj/kern/kernel.asm	/^f0100c71:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0100c74	obj/kern/kernel.asm	/^f0100c74:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0100c77	obj/kern/kernel.asm	/^f0100c77:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0100c7a	obj/kern/kernel.asm	/^f0100c7a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0100c7d	obj/kern/kernel.asm	/^f0100c7d:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f0100c80	obj/kern/kernel.asm	/^f0100c80:	8b 7d 18             	mov    0x18(%ebp),%edi$/;"	l
f0100c83	obj/kern/kernel.asm	/^f0100c83:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0100c86	obj/kern/kernel.asm	/^f0100c86:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0100c8b	obj/kern/kernel.asm	/^f0100c8b:	39 d1                	cmp    %edx,%ecx$/;"	l
f0100c8d	obj/kern/kernel.asm	/^f0100c8d:	72 15                	jb     f0100ca4 <printnum+0x44>$/;"	l
f0100c8f	obj/kern/kernel.asm	/^f0100c8f:	77 07                	ja     f0100c98 <printnum+0x38>$/;"	l
f0100c91	obj/kern/kernel.asm	/^f0100c91:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0100c94	obj/kern/kernel.asm	/^f0100c94:	39 d0                	cmp    %edx,%eax$/;"	l
f0100c96	obj/kern/kernel.asm	/^f0100c96:	76 0c                	jbe    f0100ca4 <printnum+0x44>$/;"	l
f0100c98	obj/kern/kernel.asm	/^f0100c98:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0100c9b	obj/kern/kernel.asm	/^f0100c9b:	85 db                	test   %ebx,%ebx$/;"	l
f0100c9d	obj/kern/kernel.asm	/^f0100c9d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0100ca0	obj/kern/kernel.asm	/^f0100ca0:	7f 61                	jg     f0100d03 <printnum+0xa3>$/;"	l
f0100ca2	obj/kern/kernel.asm	/^f0100ca2:	eb 70                	jmp    f0100d14 <printnum+0xb4>$/;"	l
f0100ca4	obj/kern/kernel.asm	/^f0100ca4:	89 7c 24 10          	mov    %edi,0x10(%esp)$/;"	l
f0100ca8	obj/kern/kernel.asm	/^f0100ca8:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0100cab	obj/kern/kernel.asm	/^f0100cab:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0100caf	obj/kern/kernel.asm	/^f0100caf:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100cb3	obj/kern/kernel.asm	/^f0100cb3:	8b 4c 24 08          	mov    0x8(%esp),%ecx$/;"	l
f0100cb7	obj/kern/kernel.asm	/^f0100cb7:	8b 5c 24 0c          	mov    0xc(%esp),%ebx$/;"	l
f0100cbb	obj/kern/kernel.asm	/^f0100cbb:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f0100cbe	obj/kern/kernel.asm	/^f0100cbe:	89 5d d4             	mov    %ebx,-0x2c(%ebp)$/;"	l
f0100cc1	obj/kern/kernel.asm	/^f0100cc1:	8b 5d dc             	mov    -0x24(%ebp),%ebx$/;"	l
f0100cc4	obj/kern/kernel.asm	/^f0100cc4:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0100cc8	obj/kern/kernel.asm	/^f0100cc8:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0100ccf	obj/kern/kernel.asm	/^f0100ccf:	00 $/;"	l
f0100cd0	obj/kern/kernel.asm	/^f0100cd0:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0100cd3	obj/kern/kernel.asm	/^f0100cd3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100cd6	obj/kern/kernel.asm	/^f0100cd6:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0100cd9	obj/kern/kernel.asm	/^f0100cd9:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0100cdd	obj/kern/kernel.asm	/^f0100cdd:	e8 9e 0a 00 00       	call   f0101780 <__udivdi3>$/;"	l
f0100ce2	obj/kern/kernel.asm	/^f0100ce2:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0100ce5	obj/kern/kernel.asm	/^f0100ce5:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0100ce8	obj/kern/kernel.asm	/^f0100ce8:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0100cec	obj/kern/kernel.asm	/^f0100cec:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0100cf0	obj/kern/kernel.asm	/^f0100cf0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100cf3	obj/kern/kernel.asm	/^f0100cf3:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0100cf7	obj/kern/kernel.asm	/^f0100cf7:	89 f2                	mov    %esi,%edx$/;"	l
f0100cf9	obj/kern/kernel.asm	/^f0100cf9:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100cfc	obj/kern/kernel.asm	/^f0100cfc:	e8 5f ff ff ff       	call   f0100c60 <printnum>$/;"	l
f0100d01	obj/kern/kernel.asm	/^f0100d01:	eb 11                	jmp    f0100d14 <printnum+0xb4>$/;"	l
f0100d03	obj/kern/kernel.asm	/^f0100d03:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0100d07	obj/kern/kernel.asm	/^f0100d07:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0100d0a	obj/kern/kernel.asm	/^f0100d0a:	ff 55 e4             	call   *-0x1c(%ebp)$/;"	l
f0100d0d	obj/kern/kernel.asm	/^f0100d0d:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0100d10	obj/kern/kernel.asm	/^f0100d10:	85 db                	test   %ebx,%ebx$/;"	l
f0100d12	obj/kern/kernel.asm	/^f0100d12:	7f ef                	jg     f0100d03 <printnum+0xa3>$/;"	l
f0100d14	obj/kern/kernel.asm	/^f0100d14:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0100d18	obj/kern/kernel.asm	/^f0100d18:	8b 74 24 04          	mov    0x4(%esp),%esi$/;"	l
f0100d1c	obj/kern/kernel.asm	/^f0100d1c:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0100d1f	obj/kern/kernel.asm	/^f0100d1f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100d23	obj/kern/kernel.asm	/^f0100d23:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0100d2a	obj/kern/kernel.asm	/^f0100d2a:	00 $/;"	l
f0100d2b	obj/kern/kernel.asm	/^f0100d2b:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0100d2e	obj/kern/kernel.asm	/^f0100d2e:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0100d31	obj/kern/kernel.asm	/^f0100d31:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0100d34	obj/kern/kernel.asm	/^f0100d34:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0100d38	obj/kern/kernel.asm	/^f0100d38:	e8 73 0b 00 00       	call   f01018b0 <__umoddi3>$/;"	l
f0100d3d	obj/kern/kernel.asm	/^f0100d3d:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0100d41	obj/kern/kernel.asm	/^f0100d41:	0f be 80 c9 1e 10 f0 	movsbl -0xfefe137(%eax),%eax$/;"	l
f0100d48	obj/kern/kernel.asm	/^f0100d48:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100d4b	obj/kern/kernel.asm	/^f0100d4b:	ff 55 e4             	call   *-0x1c(%ebp)$/;"	l
f0100d4e	obj/kern/kernel.asm	/^f0100d4e:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0100d51	obj/kern/kernel.asm	/^f0100d51:	5b                   	pop    %ebx$/;"	l
f0100d52	obj/kern/kernel.asm	/^f0100d52:	5e                   	pop    %esi$/;"	l
f0100d53	obj/kern/kernel.asm	/^f0100d53:	5f                   	pop    %edi$/;"	l
f0100d54	obj/kern/kernel.asm	/^f0100d54:	5d                   	pop    %ebp$/;"	l
f0100d55	obj/kern/kernel.asm	/^f0100d55:	c3                   	ret    $/;"	l
f0100d56	obj/kern/kernel.asm	/^f0100d56 <getuint>:$/;"	l
f0100d56	obj/kern/kernel.asm	/^f0100d56:	55                   	push   %ebp$/;"	l
f0100d57	obj/kern/kernel.asm	/^f0100d57:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d59	obj/kern/kernel.asm	/^f0100d59:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0100d5c	obj/kern/kernel.asm	/^f0100d5c:	7e 0e                	jle    f0100d6c <getuint+0x16>$/;"	l
f0100d5e	obj/kern/kernel.asm	/^f0100d5e:	8b 10                	mov    (%eax),%edx$/;"	l
f0100d60	obj/kern/kernel.asm	/^f0100d60:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
f0100d63	obj/kern/kernel.asm	/^f0100d63:	89 08                	mov    %ecx,(%eax)$/;"	l
f0100d65	obj/kern/kernel.asm	/^f0100d65:	8b 02                	mov    (%edx),%eax$/;"	l
f0100d67	obj/kern/kernel.asm	/^f0100d67:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
f0100d6a	obj/kern/kernel.asm	/^f0100d6a:	eb 22                	jmp    f0100d8e <getuint+0x38>$/;"	l
f0100d6c	obj/kern/kernel.asm	/^f0100d6c:	85 d2                	test   %edx,%edx$/;"	l
f0100d6e	obj/kern/kernel.asm	/^f0100d6e:	74 10                	je     f0100d80 <getuint+0x2a>$/;"	l
f0100d70	obj/kern/kernel.asm	/^f0100d70:	8b 10                	mov    (%eax),%edx$/;"	l
f0100d72	obj/kern/kernel.asm	/^f0100d72:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0100d75	obj/kern/kernel.asm	/^f0100d75:	89 08                	mov    %ecx,(%eax)$/;"	l
f0100d77	obj/kern/kernel.asm	/^f0100d77:	8b 02                	mov    (%edx),%eax$/;"	l
f0100d79	obj/kern/kernel.asm	/^f0100d79:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100d7e	obj/kern/kernel.asm	/^f0100d7e:	eb 0e                	jmp    f0100d8e <getuint+0x38>$/;"	l
f0100d80	obj/kern/kernel.asm	/^f0100d80:	8b 10                	mov    (%eax),%edx$/;"	l
f0100d82	obj/kern/kernel.asm	/^f0100d82:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0100d85	obj/kern/kernel.asm	/^f0100d85:	89 08                	mov    %ecx,(%eax)$/;"	l
f0100d87	obj/kern/kernel.asm	/^f0100d87:	8b 02                	mov    (%edx),%eax$/;"	l
f0100d89	obj/kern/kernel.asm	/^f0100d89:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100d8e	obj/kern/kernel.asm	/^f0100d8e:	5d                   	pop    %ebp$/;"	l
f0100d8f	obj/kern/kernel.asm	/^f0100d8f:	c3                   	ret    $/;"	l
f0100d90	obj/kern/kernel.asm	/^f0100d90 <sprintputch>:$/;"	l
f0100d90	obj/kern/kernel.asm	/^f0100d90:	55                   	push   %ebp$/;"	l
f0100d91	obj/kern/kernel.asm	/^f0100d91:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d93	obj/kern/kernel.asm	/^f0100d93:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100d96	obj/kern/kernel.asm	/^f0100d96:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f0100d9a	obj/kern/kernel.asm	/^f0100d9a:	8b 10                	mov    (%eax),%edx$/;"	l
f0100d9c	obj/kern/kernel.asm	/^f0100d9c:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0100d9f	obj/kern/kernel.asm	/^f0100d9f:	73 0a                	jae    f0100dab <sprintputch+0x1b>$/;"	l
f0100da1	obj/kern/kernel.asm	/^f0100da1:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0100da4	obj/kern/kernel.asm	/^f0100da4:	88 0a                	mov    %cl,(%edx)$/;"	l
f0100da6	obj/kern/kernel.asm	/^f0100da6:	83 c2 01             	add    $0x1,%edx$/;"	l
f0100da9	obj/kern/kernel.asm	/^f0100da9:	89 10                	mov    %edx,(%eax)$/;"	l
f0100dab	obj/kern/kernel.asm	/^f0100dab:	5d                   	pop    %ebp$/;"	l
f0100dac	obj/kern/kernel.asm	/^f0100dac:	c3                   	ret    $/;"	l
f0100dad	obj/kern/kernel.asm	/^f0100dad <vprintfmt>:$/;"	l
f0100dad	obj/kern/kernel.asm	/^f0100dad:	55                   	push   %ebp$/;"	l
f0100dae	obj/kern/kernel.asm	/^f0100dae:	89 e5                	mov    %esp,%ebp$/;"	l
f0100db0	obj/kern/kernel.asm	/^f0100db0:	57                   	push   %edi$/;"	l
f0100db1	obj/kern/kernel.asm	/^f0100db1:	56                   	push   %esi$/;"	l
f0100db2	obj/kern/kernel.asm	/^f0100db2:	53                   	push   %ebx$/;"	l
f0100db3	obj/kern/kernel.asm	/^f0100db3:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f0100db6	obj/kern/kernel.asm	/^f0100db6:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0100db9	obj/kern/kernel.asm	/^f0100db9:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0100dbc	obj/kern/kernel.asm	/^f0100dbc:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0100dbf	obj/kern/kernel.asm	/^f0100dbf:	c7 45 c8 ff ff ff ff 	movl   $0xffffffff,-0x38(%ebp)$/;"	l
f0100dc6	obj/kern/kernel.asm	/^f0100dc6:	eb 11                	jmp    f0100dd9 <vprintfmt+0x2c>$/;"	l
f0100dc8	obj/kern/kernel.asm	/^f0100dc8:	85 c0                	test   %eax,%eax$/;"	l
f0100dca	obj/kern/kernel.asm	/^f0100dca:	0f 84 09 04 00 00    	je     f01011d9 <vprintfmt+0x42c>$/;"	l
f0100dd0	obj/kern/kernel.asm	/^f0100dd0:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0100dd4	obj/kern/kernel.asm	/^f0100dd4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100dd7	obj/kern/kernel.asm	/^f0100dd7:	ff d7                	call   *%edi$/;"	l
f0100dd9	obj/kern/kernel.asm	/^f0100dd9:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100ddc	obj/kern/kernel.asm	/^f0100ddc:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100ddf	obj/kern/kernel.asm	/^f0100ddf:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f0100de2	obj/kern/kernel.asm	/^f0100de2:	75 e4                	jne    f0100dc8 <vprintfmt+0x1b>$/;"	l
f0100de4	obj/kern/kernel.asm	/^f0100de4:	c6 45 dc 20          	movb   $0x20,-0x24(%ebp)$/;"	l
f0100de8	obj/kern/kernel.asm	/^f0100de8:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)$/;"	l
f0100def	obj/kern/kernel.asm	/^f0100def:	c7 45 cc ff ff ff ff 	movl   $0xffffffff,-0x34(%ebp)$/;"	l
f0100df6	obj/kern/kernel.asm	/^f0100df6:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
f0100dfd	obj/kern/kernel.asm	/^f0100dfd:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0100e02	obj/kern/kernel.asm	/^f0100e02:	eb 06                	jmp    f0100e0a <vprintfmt+0x5d>$/;"	l
f0100e04	obj/kern/kernel.asm	/^f0100e04:	c6 45 dc 2d          	movb   $0x2d,-0x24(%ebp)$/;"	l
f0100e08	obj/kern/kernel.asm	/^f0100e08:	89 c3                	mov    %eax,%ebx$/;"	l
f0100e0a	obj/kern/kernel.asm	/^f0100e0a:	0f b6 13             	movzbl (%ebx),%edx$/;"	l
f0100e0d	obj/kern/kernel.asm	/^f0100e0d:	0f b6 c2             	movzbl %dl,%eax$/;"	l
f0100e10	obj/kern/kernel.asm	/^f0100e10:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0100e13	obj/kern/kernel.asm	/^f0100e13:	8d 43 01             	lea    0x1(%ebx),%eax$/;"	l
f0100e16	obj/kern/kernel.asm	/^f0100e16:	83 ea 23             	sub    $0x23,%edx$/;"	l
f0100e19	obj/kern/kernel.asm	/^f0100e19:	80 fa 55             	cmp    $0x55,%dl$/;"	l
f0100e1c	obj/kern/kernel.asm	/^f0100e1c:	0f 87 9a 03 00 00    	ja     f01011bc <vprintfmt+0x40f>$/;"	l
f0100e22	obj/kern/kernel.asm	/^f0100e22:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100e25	obj/kern/kernel.asm	/^f0100e25:	ff 24 95 58 1f 10 f0 	jmp    *-0xfefe0a8(,%edx,4)$/;"	l
f0100e2c	obj/kern/kernel.asm	/^f0100e2c:	c6 45 dc 30          	movb   $0x30,-0x24(%ebp)$/;"	l
f0100e30	obj/kern/kernel.asm	/^f0100e30:	eb d6                	jmp    f0100e08 <vprintfmt+0x5b>$/;"	l
f0100e32	obj/kern/kernel.asm	/^f0100e32:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0100e35	obj/kern/kernel.asm	/^f0100e35:	83 ea 30             	sub    $0x30,%edx$/;"	l
f0100e38	obj/kern/kernel.asm	/^f0100e38:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
f0100e3b	obj/kern/kernel.asm	/^f0100e3b:	0f be 10             	movsbl (%eax),%edx$/;"	l
f0100e3e	obj/kern/kernel.asm	/^f0100e3e:	8d 5a d0             	lea    -0x30(%edx),%ebx$/;"	l
f0100e41	obj/kern/kernel.asm	/^f0100e41:	83 fb 09             	cmp    $0x9,%ebx$/;"	l
f0100e44	obj/kern/kernel.asm	/^f0100e44:	77 4c                	ja     f0100e92 <vprintfmt+0xe5>$/;"	l
f0100e46	obj/kern/kernel.asm	/^f0100e46:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0100e49	obj/kern/kernel.asm	/^f0100e49:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
f0100e4c	obj/kern/kernel.asm	/^f0100e4c:	83 c0 01             	add    $0x1,%eax$/;"	l
f0100e4f	obj/kern/kernel.asm	/^f0100e4f:	8d 0c 89             	lea    (%ecx,%ecx,4),%ecx$/;"	l
f0100e52	obj/kern/kernel.asm	/^f0100e52:	8d 4c 4a d0          	lea    -0x30(%edx,%ecx,2),%ecx$/;"	l
f0100e56	obj/kern/kernel.asm	/^f0100e56:	0f be 10             	movsbl (%eax),%edx$/;"	l
f0100e59	obj/kern/kernel.asm	/^f0100e59:	8d 5a d0             	lea    -0x30(%edx),%ebx$/;"	l
f0100e5c	obj/kern/kernel.asm	/^f0100e5c:	83 fb 09             	cmp    $0x9,%ebx$/;"	l
f0100e5f	obj/kern/kernel.asm	/^f0100e5f:	76 eb                	jbe    f0100e4c <vprintfmt+0x9f>$/;"	l
f0100e61	obj/kern/kernel.asm	/^f0100e61:	89 4d cc             	mov    %ecx,-0x34(%ebp)$/;"	l
f0100e64	obj/kern/kernel.asm	/^f0100e64:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0100e67	obj/kern/kernel.asm	/^f0100e67:	eb 29                	jmp    f0100e92 <vprintfmt+0xe5>$/;"	l
f0100e69	obj/kern/kernel.asm	/^f0100e69:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f0100e6c	obj/kern/kernel.asm	/^f0100e6c:	8d 5a 04             	lea    0x4(%edx),%ebx$/;"	l
f0100e6f	obj/kern/kernel.asm	/^f0100e6f:	89 5d 14             	mov    %ebx,0x14(%ebp)$/;"	l
f0100e72	obj/kern/kernel.asm	/^f0100e72:	8b 12                	mov    (%edx),%edx$/;"	l
f0100e74	obj/kern/kernel.asm	/^f0100e74:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
f0100e77	obj/kern/kernel.asm	/^f0100e77:	eb 19                	jmp    f0100e92 <vprintfmt+0xe5>$/;"	l
f0100e79	obj/kern/kernel.asm	/^f0100e79:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0100e7c	obj/kern/kernel.asm	/^f0100e7c:	c1 fa 1f             	sar    $0x1f,%edx$/;"	l
f0100e7f	obj/kern/kernel.asm	/^f0100e7f:	f7 d2                	not    %edx$/;"	l
f0100e81	obj/kern/kernel.asm	/^f0100e81:	21 55 e4             	and    %edx,-0x1c(%ebp)$/;"	l
f0100e84	obj/kern/kernel.asm	/^f0100e84:	eb 82                	jmp    f0100e08 <vprintfmt+0x5b>$/;"	l
f0100e86	obj/kern/kernel.asm	/^f0100e86:	c7 45 d0 01 00 00 00 	movl   $0x1,-0x30(%ebp)$/;"	l
f0100e8d	obj/kern/kernel.asm	/^f0100e8d:	e9 76 ff ff ff       	jmp    f0100e08 <vprintfmt+0x5b>$/;"	l
f0100e92	obj/kern/kernel.asm	/^f0100e92:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0100e96	obj/kern/kernel.asm	/^f0100e96:	0f 89 6c ff ff ff    	jns    f0100e08 <vprintfmt+0x5b>$/;"	l
f0100e9c	obj/kern/kernel.asm	/^f0100e9c:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
f0100e9f	obj/kern/kernel.asm	/^f0100e9f:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0100ea2	obj/kern/kernel.asm	/^f0100ea2:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
f0100ea5	obj/kern/kernel.asm	/^f0100ea5:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
f0100ea8	obj/kern/kernel.asm	/^f0100ea8:	e9 5b ff ff ff       	jmp    f0100e08 <vprintfmt+0x5b>$/;"	l
f0100ead	obj/kern/kernel.asm	/^f0100ead:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0100eb0	obj/kern/kernel.asm	/^f0100eb0:	e9 53 ff ff ff       	jmp    f0100e08 <vprintfmt+0x5b>$/;"	l
f0100eb5	obj/kern/kernel.asm	/^f0100eb5:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0100eb8	obj/kern/kernel.asm	/^f0100eb8:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0100ebb	obj/kern/kernel.asm	/^f0100ebb:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0100ebe	obj/kern/kernel.asm	/^f0100ebe:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0100ec1	obj/kern/kernel.asm	/^f0100ec1:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0100ec5	obj/kern/kernel.asm	/^f0100ec5:	8b 00                	mov    (%eax),%eax$/;"	l
f0100ec7	obj/kern/kernel.asm	/^f0100ec7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100eca	obj/kern/kernel.asm	/^f0100eca:	ff d7                	call   *%edi$/;"	l
f0100ecc	obj/kern/kernel.asm	/^f0100ecc:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0100ecf	obj/kern/kernel.asm	/^f0100ecf:	e9 05 ff ff ff       	jmp    f0100dd9 <vprintfmt+0x2c>$/;"	l
f0100ed4	obj/kern/kernel.asm	/^f0100ed4:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0100ed7	obj/kern/kernel.asm	/^f0100ed7:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0100eda	obj/kern/kernel.asm	/^f0100eda:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0100edd	obj/kern/kernel.asm	/^f0100edd:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0100ee0	obj/kern/kernel.asm	/^f0100ee0:	8b 00                	mov    (%eax),%eax$/;"	l
f0100ee2	obj/kern/kernel.asm	/^f0100ee2:	89 c2                	mov    %eax,%edx$/;"	l
f0100ee4	obj/kern/kernel.asm	/^f0100ee4:	c1 fa 1f             	sar    $0x1f,%edx$/;"	l
f0100ee7	obj/kern/kernel.asm	/^f0100ee7:	31 d0                	xor    %edx,%eax$/;"	l
f0100ee9	obj/kern/kernel.asm	/^f0100ee9:	29 d0                	sub    %edx,%eax$/;"	l
f0100eeb	obj/kern/kernel.asm	/^f0100eeb:	83 f8 06             	cmp    $0x6,%eax$/;"	l
f0100eee	obj/kern/kernel.asm	/^f0100eee:	7f 0b                	jg     f0100efb <vprintfmt+0x14e>$/;"	l
f0100ef0	obj/kern/kernel.asm	/^f0100ef0:	8b 14 85 b0 20 10 f0 	mov    -0xfefdf50(,%eax,4),%edx$/;"	l
f0100ef7	obj/kern/kernel.asm	/^f0100ef7:	85 d2                	test   %edx,%edx$/;"	l
f0100ef9	obj/kern/kernel.asm	/^f0100ef9:	75 20                	jne    f0100f1b <vprintfmt+0x16e>$/;"	l
f0100efb	obj/kern/kernel.asm	/^f0100efb:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100eff	obj/kern/kernel.asm	/^f0100eff:	c7 44 24 08 da 1e 10 	movl   $0xf0101eda,0x8(%esp)$/;"	l
f0100f06	obj/kern/kernel.asm	/^f0100f06:	f0 $/;"	l
f0100f07	obj/kern/kernel.asm	/^f0100f07:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0100f0b	obj/kern/kernel.asm	/^f0100f0b:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0100f0e	obj/kern/kernel.asm	/^f0100f0e:	e8 4e 03 00 00       	call   f0101261 <printfmt>$/;"	l
f0100f13	obj/kern/kernel.asm	/^f0100f13:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0100f16	obj/kern/kernel.asm	/^f0100f16:	e9 be fe ff ff       	jmp    f0100dd9 <vprintfmt+0x2c>$/;"	l
f0100f1b	obj/kern/kernel.asm	/^f0100f1b:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0100f1f	obj/kern/kernel.asm	/^f0100f1f:	c7 44 24 08 e3 1e 10 	movl   $0xf0101ee3,0x8(%esp)$/;"	l
f0100f26	obj/kern/kernel.asm	/^f0100f26:	f0 $/;"	l
f0100f27	obj/kern/kernel.asm	/^f0100f27:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0100f2b	obj/kern/kernel.asm	/^f0100f2b:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0100f2e	obj/kern/kernel.asm	/^f0100f2e:	e8 2e 03 00 00       	call   f0101261 <printfmt>$/;"	l
f0100f33	obj/kern/kernel.asm	/^f0100f33:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0100f36	obj/kern/kernel.asm	/^f0100f36:	e9 9e fe ff ff       	jmp    f0100dd9 <vprintfmt+0x2c>$/;"	l
f0100f3b	obj/kern/kernel.asm	/^f0100f3b:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0100f3e	obj/kern/kernel.asm	/^f0100f3e:	89 c3                	mov    %eax,%ebx$/;"	l
f0100f40	obj/kern/kernel.asm	/^f0100f40:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
f0100f43	obj/kern/kernel.asm	/^f0100f43:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100f46	obj/kern/kernel.asm	/^f0100f46:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
f0100f49	obj/kern/kernel.asm	/^f0100f49:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0100f4c	obj/kern/kernel.asm	/^f0100f4c:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0100f4f	obj/kern/kernel.asm	/^f0100f4f:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0100f52	obj/kern/kernel.asm	/^f0100f52:	8b 00                	mov    (%eax),%eax$/;"	l
f0100f54	obj/kern/kernel.asm	/^f0100f54:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0100f57	obj/kern/kernel.asm	/^f0100f57:	85 c0                	test   %eax,%eax$/;"	l
f0100f59	obj/kern/kernel.asm	/^f0100f59:	75 07                	jne    f0100f62 <vprintfmt+0x1b5>$/;"	l
f0100f5b	obj/kern/kernel.asm	/^f0100f5b:	c7 45 c4 e6 1e 10 f0 	movl   $0xf0101ee6,-0x3c(%ebp)$/;"	l
f0100f62	obj/kern/kernel.asm	/^f0100f62:	83 7d c0 00          	cmpl   $0x0,-0x40(%ebp)$/;"	l
f0100f66	obj/kern/kernel.asm	/^f0100f66:	7e 06                	jle    f0100f6e <vprintfmt+0x1c1>$/;"	l
f0100f68	obj/kern/kernel.asm	/^f0100f68:	80 7d dc 2d          	cmpb   $0x2d,-0x24(%ebp)$/;"	l
f0100f6c	obj/kern/kernel.asm	/^f0100f6c:	75 13                	jne    f0100f81 <vprintfmt+0x1d4>$/;"	l
f0100f6e	obj/kern/kernel.asm	/^f0100f6e:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
f0100f71	obj/kern/kernel.asm	/^f0100f71:	0f be 02             	movsbl (%edx),%eax$/;"	l
f0100f74	obj/kern/kernel.asm	/^f0100f74:	85 c0                	test   %eax,%eax$/;"	l
f0100f76	obj/kern/kernel.asm	/^f0100f76:	0f 85 99 00 00 00    	jne    f0101015 <vprintfmt+0x268>$/;"	l
f0100f7c	obj/kern/kernel.asm	/^f0100f7c:	e9 86 00 00 00       	jmp    f0101007 <vprintfmt+0x25a>$/;"	l
f0100f81	obj/kern/kernel.asm	/^f0100f81:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0100f85	obj/kern/kernel.asm	/^f0100f85:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
f0100f88	obj/kern/kernel.asm	/^f0100f88:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f0100f8b	obj/kern/kernel.asm	/^f0100f8b:	e8 fb 03 00 00       	call   f010138b <strnlen>$/;"	l
f0100f90	obj/kern/kernel.asm	/^f0100f90:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
f0100f93	obj/kern/kernel.asm	/^f0100f93:	29 c2                	sub    %eax,%edx$/;"	l
f0100f95	obj/kern/kernel.asm	/^f0100f95:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0100f98	obj/kern/kernel.asm	/^f0100f98:	85 d2                	test   %edx,%edx$/;"	l
f0100f9a	obj/kern/kernel.asm	/^f0100f9a:	7e d2                	jle    f0100f6e <vprintfmt+0x1c1>$/;"	l
f0100f9c	obj/kern/kernel.asm	/^f0100f9c:	0f be 4d dc          	movsbl -0x24(%ebp),%ecx$/;"	l
f0100fa0	obj/kern/kernel.asm	/^f0100fa0:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f0100fa3	obj/kern/kernel.asm	/^f0100fa3:	89 5d c0             	mov    %ebx,-0x40(%ebp)$/;"	l
f0100fa6	obj/kern/kernel.asm	/^f0100fa6:	89 d3                	mov    %edx,%ebx$/;"	l
f0100fa8	obj/kern/kernel.asm	/^f0100fa8:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0100fac	obj/kern/kernel.asm	/^f0100fac:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0100faf	obj/kern/kernel.asm	/^f0100faf:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100fb2	obj/kern/kernel.asm	/^f0100fb2:	ff d7                	call   *%edi$/;"	l
f0100fb4	obj/kern/kernel.asm	/^f0100fb4:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0100fb7	obj/kern/kernel.asm	/^f0100fb7:	85 db                	test   %ebx,%ebx$/;"	l
f0100fb9	obj/kern/kernel.asm	/^f0100fb9:	7f ed                	jg     f0100fa8 <vprintfmt+0x1fb>$/;"	l
f0100fbb	obj/kern/kernel.asm	/^f0100fbb:	8b 5d c0             	mov    -0x40(%ebp),%ebx$/;"	l
f0100fbe	obj/kern/kernel.asm	/^f0100fbe:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0100fc5	obj/kern/kernel.asm	/^f0100fc5:	eb a7                	jmp    f0100f6e <vprintfmt+0x1c1>$/;"	l
f0100fc7	obj/kern/kernel.asm	/^f0100fc7:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
f0100fcb	obj/kern/kernel.asm	/^f0100fcb:	74 18                	je     f0100fe5 <vprintfmt+0x238>$/;"	l
f0100fcd	obj/kern/kernel.asm	/^f0100fcd:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f0100fd0	obj/kern/kernel.asm	/^f0100fd0:	83 fa 5e             	cmp    $0x5e,%edx$/;"	l
f0100fd3	obj/kern/kernel.asm	/^f0100fd3:	76 10                	jbe    f0100fe5 <vprintfmt+0x238>$/;"	l
f0100fd5	obj/kern/kernel.asm	/^f0100fd5:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0100fd9	obj/kern/kernel.asm	/^f0100fd9:	c7 04 24 3f 00 00 00 	movl   $0x3f,(%esp)$/;"	l
f0100fe0	obj/kern/kernel.asm	/^f0100fe0:	ff 55 dc             	call   *-0x24(%ebp)$/;"	l
f0100fe3	obj/kern/kernel.asm	/^f0100fe3:	eb 0a                	jmp    f0100fef <vprintfmt+0x242>$/;"	l
f0100fe5	obj/kern/kernel.asm	/^f0100fe5:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0100fe9	obj/kern/kernel.asm	/^f0100fe9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100fec	obj/kern/kernel.asm	/^f0100fec:	ff 55 dc             	call   *-0x24(%ebp)$/;"	l
f0100fef	obj/kern/kernel.asm	/^f0100fef:	83 6d e4 01          	subl   $0x1,-0x1c(%ebp)$/;"	l
f0100ff3	obj/kern/kernel.asm	/^f0100ff3:	0f be 03             	movsbl (%ebx),%eax$/;"	l
f0100ff6	obj/kern/kernel.asm	/^f0100ff6:	85 c0                	test   %eax,%eax$/;"	l
f0100ff8	obj/kern/kernel.asm	/^f0100ff8:	74 05                	je     f0100fff <vprintfmt+0x252>$/;"	l
f0100ffa	obj/kern/kernel.asm	/^f0100ffa:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100ffd	obj/kern/kernel.asm	/^f0100ffd:	eb 29                	jmp    f0101028 <vprintfmt+0x27b>$/;"	l
f0100fff	obj/kern/kernel.asm	/^f0100fff:	89 fe                	mov    %edi,%esi$/;"	l
f0101001	obj/kern/kernel.asm	/^f0101001:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
f0101004	obj/kern/kernel.asm	/^f0101004:	8b 5d cc             	mov    -0x34(%ebp),%ebx$/;"	l
f0101007	obj/kern/kernel.asm	/^f0101007:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f010100b	obj/kern/kernel.asm	/^f010100b:	7f 2e                	jg     f010103b <vprintfmt+0x28e>$/;"	l
f010100d	obj/kern/kernel.asm	/^f010100d:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0101010	obj/kern/kernel.asm	/^f0101010:	e9 c4 fd ff ff       	jmp    f0100dd9 <vprintfmt+0x2c>$/;"	l
f0101015	obj/kern/kernel.asm	/^f0101015:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
f0101018	obj/kern/kernel.asm	/^f0101018:	83 c2 01             	add    $0x1,%edx$/;"	l
f010101b	obj/kern/kernel.asm	/^f010101b:	89 7d dc             	mov    %edi,-0x24(%ebp)$/;"	l
f010101e	obj/kern/kernel.asm	/^f010101e:	89 f7                	mov    %esi,%edi$/;"	l
f0101020	obj/kern/kernel.asm	/^f0101020:	8b 75 cc             	mov    -0x34(%ebp),%esi$/;"	l
f0101023	obj/kern/kernel.asm	/^f0101023:	89 5d cc             	mov    %ebx,-0x34(%ebp)$/;"	l
f0101026	obj/kern/kernel.asm	/^f0101026:	89 d3                	mov    %edx,%ebx$/;"	l
f0101028	obj/kern/kernel.asm	/^f0101028:	85 f6                	test   %esi,%esi$/;"	l
f010102a	obj/kern/kernel.asm	/^f010102a:	78 9b                	js     f0100fc7 <vprintfmt+0x21a>$/;"	l
f010102c	obj/kern/kernel.asm	/^f010102c:	83 ee 01             	sub    $0x1,%esi$/;"	l
f010102f	obj/kern/kernel.asm	/^f010102f:	79 96                	jns    f0100fc7 <vprintfmt+0x21a>$/;"	l
f0101031	obj/kern/kernel.asm	/^f0101031:	89 fe                	mov    %edi,%esi$/;"	l
f0101033	obj/kern/kernel.asm	/^f0101033:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
f0101036	obj/kern/kernel.asm	/^f0101036:	8b 5d cc             	mov    -0x34(%ebp),%ebx$/;"	l
f0101039	obj/kern/kernel.asm	/^f0101039:	eb cc                	jmp    f0101007 <vprintfmt+0x25a>$/;"	l
f010103b	obj/kern/kernel.asm	/^f010103b:	89 5d d0             	mov    %ebx,-0x30(%ebp)$/;"	l
f010103e	obj/kern/kernel.asm	/^f010103e:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0101041	obj/kern/kernel.asm	/^f0101041:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0101045	obj/kern/kernel.asm	/^f0101045:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
f010104c	obj/kern/kernel.asm	/^f010104c:	ff d7                	call   *%edi$/;"	l
f010104e	obj/kern/kernel.asm	/^f010104e:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0101051	obj/kern/kernel.asm	/^f0101051:	85 db                	test   %ebx,%ebx$/;"	l
f0101053	obj/kern/kernel.asm	/^f0101053:	7f ec                	jg     f0101041 <vprintfmt+0x294>$/;"	l
f0101055	obj/kern/kernel.asm	/^f0101055:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f0101058	obj/kern/kernel.asm	/^f0101058:	e9 7c fd ff ff       	jmp    f0100dd9 <vprintfmt+0x2c>$/;"	l
f010105d	obj/kern/kernel.asm	/^f010105d:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0101060	obj/kern/kernel.asm	/^f0101060:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0101063	obj/kern/kernel.asm	/^f0101063:	7e 16                	jle    f010107b <vprintfmt+0x2ce>$/;"	l
f0101065	obj/kern/kernel.asm	/^f0101065:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101068	obj/kern/kernel.asm	/^f0101068:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
f010106b	obj/kern/kernel.asm	/^f010106b:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f010106e	obj/kern/kernel.asm	/^f010106e:	8b 10                	mov    (%eax),%edx$/;"	l
f0101070	obj/kern/kernel.asm	/^f0101070:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f0101073	obj/kern/kernel.asm	/^f0101073:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f0101076	obj/kern/kernel.asm	/^f0101076:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f0101079	obj/kern/kernel.asm	/^f0101079:	eb 32                	jmp    f01010ad <vprintfmt+0x300>$/;"	l
f010107b	obj/kern/kernel.asm	/^f010107b:	85 c9                	test   %ecx,%ecx$/;"	l
f010107d	obj/kern/kernel.asm	/^f010107d:	74 18                	je     f0101097 <vprintfmt+0x2ea>$/;"	l
f010107f	obj/kern/kernel.asm	/^f010107f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101082	obj/kern/kernel.asm	/^f0101082:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0101085	obj/kern/kernel.asm	/^f0101085:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0101088	obj/kern/kernel.asm	/^f0101088:	8b 00                	mov    (%eax),%eax$/;"	l
f010108a	obj/kern/kernel.asm	/^f010108a:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f010108d	obj/kern/kernel.asm	/^f010108d:	89 c1                	mov    %eax,%ecx$/;"	l
f010108f	obj/kern/kernel.asm	/^f010108f:	c1 f9 1f             	sar    $0x1f,%ecx$/;"	l
f0101092	obj/kern/kernel.asm	/^f0101092:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f0101095	obj/kern/kernel.asm	/^f0101095:	eb 16                	jmp    f01010ad <vprintfmt+0x300>$/;"	l
f0101097	obj/kern/kernel.asm	/^f0101097:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010109a	obj/kern/kernel.asm	/^f010109a:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f010109d	obj/kern/kernel.asm	/^f010109d:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01010a0	obj/kern/kernel.asm	/^f01010a0:	8b 00                	mov    (%eax),%eax$/;"	l
f01010a2	obj/kern/kernel.asm	/^f01010a2:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01010a5	obj/kern/kernel.asm	/^f01010a5:	89 c2                	mov    %eax,%edx$/;"	l
f01010a7	obj/kern/kernel.asm	/^f01010a7:	c1 fa 1f             	sar    $0x1f,%edx$/;"	l
f01010aa	obj/kern/kernel.asm	/^f01010aa:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f01010ad	obj/kern/kernel.asm	/^f01010ad:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f01010b0	obj/kern/kernel.asm	/^f01010b0:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01010b3	obj/kern/kernel.asm	/^f01010b3:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01010b8	obj/kern/kernel.asm	/^f01010b8:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
f01010bc	obj/kern/kernel.asm	/^f01010bc:	0f 89 b8 00 00 00    	jns    f010117a <vprintfmt+0x3cd>$/;"	l
f01010c2	obj/kern/kernel.asm	/^f01010c2:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01010c6	obj/kern/kernel.asm	/^f01010c6:	c7 04 24 2d 00 00 00 	movl   $0x2d,(%esp)$/;"	l
f01010cd	obj/kern/kernel.asm	/^f01010cd:	ff d7                	call   *%edi$/;"	l
f01010cf	obj/kern/kernel.asm	/^f01010cf:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f01010d2	obj/kern/kernel.asm	/^f01010d2:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01010d5	obj/kern/kernel.asm	/^f01010d5:	f7 d9                	neg    %ecx$/;"	l
f01010d7	obj/kern/kernel.asm	/^f01010d7:	83 d3 00             	adc    $0x0,%ebx$/;"	l
f01010da	obj/kern/kernel.asm	/^f01010da:	f7 db                	neg    %ebx$/;"	l
f01010dc	obj/kern/kernel.asm	/^f01010dc:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01010e1	obj/kern/kernel.asm	/^f01010e1:	e9 94 00 00 00       	jmp    f010117a <vprintfmt+0x3cd>$/;"	l
f01010e6	obj/kern/kernel.asm	/^f01010e6:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01010e9	obj/kern/kernel.asm	/^f01010e9:	89 ca                	mov    %ecx,%edx$/;"	l
f01010eb	obj/kern/kernel.asm	/^f01010eb:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01010ee	obj/kern/kernel.asm	/^f01010ee:	e8 63 fc ff ff       	call   f0100d56 <getuint>$/;"	l
f01010f3	obj/kern/kernel.asm	/^f01010f3:	89 c1                	mov    %eax,%ecx$/;"	l
f01010f5	obj/kern/kernel.asm	/^f01010f5:	89 d3                	mov    %edx,%ebx$/;"	l
f01010f7	obj/kern/kernel.asm	/^f01010f7:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01010fc	obj/kern/kernel.asm	/^f01010fc:	eb 7c                	jmp    f010117a <vprintfmt+0x3cd>$/;"	l
f01010fe	obj/kern/kernel.asm	/^f01010fe:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0101101	obj/kern/kernel.asm	/^f0101101:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0101105	obj/kern/kernel.asm	/^f0101105:	c7 04 24 58 00 00 00 	movl   $0x58,(%esp)$/;"	l
f010110c	obj/kern/kernel.asm	/^f010110c:	ff d7                	call   *%edi$/;"	l
f010110e	obj/kern/kernel.asm	/^f010110e:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0101112	obj/kern/kernel.asm	/^f0101112:	c7 04 24 58 00 00 00 	movl   $0x58,(%esp)$/;"	l
f0101119	obj/kern/kernel.asm	/^f0101119:	ff d7                	call   *%edi$/;"	l
f010111b	obj/kern/kernel.asm	/^f010111b:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010111f	obj/kern/kernel.asm	/^f010111f:	c7 04 24 58 00 00 00 	movl   $0x58,(%esp)$/;"	l
f0101126	obj/kern/kernel.asm	/^f0101126:	ff d7                	call   *%edi$/;"	l
f0101128	obj/kern/kernel.asm	/^f0101128:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f010112b	obj/kern/kernel.asm	/^f010112b:	e9 a9 fc ff ff       	jmp    f0100dd9 <vprintfmt+0x2c>$/;"	l
f0101130	obj/kern/kernel.asm	/^f0101130:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0101133	obj/kern/kernel.asm	/^f0101133:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0101137	obj/kern/kernel.asm	/^f0101137:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
f010113e	obj/kern/kernel.asm	/^f010113e:	ff d7                	call   *%edi$/;"	l
f0101140	obj/kern/kernel.asm	/^f0101140:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0101144	obj/kern/kernel.asm	/^f0101144:	c7 04 24 78 00 00 00 	movl   $0x78,(%esp)$/;"	l
f010114b	obj/kern/kernel.asm	/^f010114b:	ff d7                	call   *%edi$/;"	l
f010114d	obj/kern/kernel.asm	/^f010114d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101150	obj/kern/kernel.asm	/^f0101150:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0101153	obj/kern/kernel.asm	/^f0101153:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0101156	obj/kern/kernel.asm	/^f0101156:	8b 08                	mov    (%eax),%ecx$/;"	l
f0101158	obj/kern/kernel.asm	/^f0101158:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010115d	obj/kern/kernel.asm	/^f010115d:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0101162	obj/kern/kernel.asm	/^f0101162:	eb 16                	jmp    f010117a <vprintfmt+0x3cd>$/;"	l
f0101164	obj/kern/kernel.asm	/^f0101164:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0101167	obj/kern/kernel.asm	/^f0101167:	89 ca                	mov    %ecx,%edx$/;"	l
f0101169	obj/kern/kernel.asm	/^f0101169:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f010116c	obj/kern/kernel.asm	/^f010116c:	e8 e5 fb ff ff       	call   f0100d56 <getuint>$/;"	l
f0101171	obj/kern/kernel.asm	/^f0101171:	89 c1                	mov    %eax,%ecx$/;"	l
f0101173	obj/kern/kernel.asm	/^f0101173:	89 d3                	mov    %edx,%ebx$/;"	l
f0101175	obj/kern/kernel.asm	/^f0101175:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f010117a	obj/kern/kernel.asm	/^f010117a:	0f be 55 dc          	movsbl -0x24(%ebp),%edx$/;"	l
f010117e	obj/kern/kernel.asm	/^f010117e:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
f0101182	obj/kern/kernel.asm	/^f0101182:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0101185	obj/kern/kernel.asm	/^f0101185:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0101189	obj/kern/kernel.asm	/^f0101189:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010118d	obj/kern/kernel.asm	/^f010118d:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f0101190	obj/kern/kernel.asm	/^f0101190:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101194	obj/kern/kernel.asm	/^f0101194:	89 f2                	mov    %esi,%edx$/;"	l
f0101196	obj/kern/kernel.asm	/^f0101196:	89 f8                	mov    %edi,%eax$/;"	l
f0101198	obj/kern/kernel.asm	/^f0101198:	e8 c3 fa ff ff       	call   f0100c60 <printnum>$/;"	l
f010119d	obj/kern/kernel.asm	/^f010119d:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f01011a0	obj/kern/kernel.asm	/^f01011a0:	e9 34 fc ff ff       	jmp    f0100dd9 <vprintfmt+0x2c>$/;"	l
f01011a5	obj/kern/kernel.asm	/^f01011a5:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f01011a8	obj/kern/kernel.asm	/^f01011a8:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01011ab	obj/kern/kernel.asm	/^f01011ab:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01011af	obj/kern/kernel.asm	/^f01011af:	89 14 24             	mov    %edx,(%esp)$/;"	l
f01011b2	obj/kern/kernel.asm	/^f01011b2:	ff d7                	call   *%edi$/;"	l
f01011b4	obj/kern/kernel.asm	/^f01011b4:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f01011b7	obj/kern/kernel.asm	/^f01011b7:	e9 1d fc ff ff       	jmp    f0100dd9 <vprintfmt+0x2c>$/;"	l
f01011bc	obj/kern/kernel.asm	/^f01011bc:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01011c0	obj/kern/kernel.asm	/^f01011c0:	c7 04 24 25 00 00 00 	movl   $0x25,(%esp)$/;"	l
f01011c7	obj/kern/kernel.asm	/^f01011c7:	ff d7                	call   *%edi$/;"	l
f01011c9	obj/kern/kernel.asm	/^f01011c9:	8d 43 ff             	lea    -0x1(%ebx),%eax$/;"	l
f01011cc	obj/kern/kernel.asm	/^f01011cc:	80 38 25             	cmpb   $0x25,(%eax)$/;"	l
f01011cf	obj/kern/kernel.asm	/^f01011cf:	0f 84 04 fc ff ff    	je     f0100dd9 <vprintfmt+0x2c>$/;"	l
f01011d5	obj/kern/kernel.asm	/^f01011d5:	89 c3                	mov    %eax,%ebx$/;"	l
f01011d7	obj/kern/kernel.asm	/^f01011d7:	eb f0                	jmp    f01011c9 <vprintfmt+0x41c>$/;"	l
f01011d9	obj/kern/kernel.asm	/^f01011d9:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f01011dc	obj/kern/kernel.asm	/^f01011dc:	5b                   	pop    %ebx$/;"	l
f01011dd	obj/kern/kernel.asm	/^f01011dd:	5e                   	pop    %esi$/;"	l
f01011de	obj/kern/kernel.asm	/^f01011de:	5f                   	pop    %edi$/;"	l
f01011df	obj/kern/kernel.asm	/^f01011df:	5d                   	pop    %ebp$/;"	l
f01011e0	obj/kern/kernel.asm	/^f01011e0:	c3                   	ret    $/;"	l
f01011e1	obj/kern/kernel.asm	/^f01011e1 <vsnprintf>:$/;"	l
f01011e1	obj/kern/kernel.asm	/^f01011e1:	55                   	push   %ebp$/;"	l
f01011e2	obj/kern/kernel.asm	/^f01011e2:	89 e5                	mov    %esp,%ebp$/;"	l
f01011e4	obj/kern/kernel.asm	/^f01011e4:	83 ec 28             	sub    $0x28,%esp$/;"	l
f01011e7	obj/kern/kernel.asm	/^f01011e7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01011ea	obj/kern/kernel.asm	/^f01011ea:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01011ed	obj/kern/kernel.asm	/^f01011ed:	85 c0                	test   %eax,%eax$/;"	l
f01011ef	obj/kern/kernel.asm	/^f01011ef:	74 04                	je     f01011f5 <vsnprintf+0x14>$/;"	l
f01011f1	obj/kern/kernel.asm	/^f01011f1:	85 d2                	test   %edx,%edx$/;"	l
f01011f3	obj/kern/kernel.asm	/^f01011f3:	7f 07                	jg     f01011fc <vsnprintf+0x1b>$/;"	l
f01011f5	obj/kern/kernel.asm	/^f01011f5:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01011fa	obj/kern/kernel.asm	/^f01011fa:	eb 3b                	jmp    f0101237 <vsnprintf+0x56>$/;"	l
f01011fc	obj/kern/kernel.asm	/^f01011fc:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f01011ff	obj/kern/kernel.asm	/^f01011ff:	8d 44 10 ff          	lea    -0x1(%eax,%edx,1),%eax$/;"	l
f0101203	obj/kern/kernel.asm	/^f0101203:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0101206	obj/kern/kernel.asm	/^f0101206:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f010120d	obj/kern/kernel.asm	/^f010120d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101210	obj/kern/kernel.asm	/^f0101210:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101214	obj/kern/kernel.asm	/^f0101214:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0101217	obj/kern/kernel.asm	/^f0101217:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010121b	obj/kern/kernel.asm	/^f010121b:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f010121e	obj/kern/kernel.asm	/^f010121e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101222	obj/kern/kernel.asm	/^f0101222:	c7 04 24 90 0d 10 f0 	movl   $0xf0100d90,(%esp)$/;"	l
f0101229	obj/kern/kernel.asm	/^f0101229:	e8 7f fb ff ff       	call   f0100dad <vprintfmt>$/;"	l
f010122e	obj/kern/kernel.asm	/^f010122e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0101231	obj/kern/kernel.asm	/^f0101231:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0101234	obj/kern/kernel.asm	/^f0101234:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101237	obj/kern/kernel.asm	/^f0101237:	c9                   	leave  $/;"	l
f0101238	obj/kern/kernel.asm	/^f0101238:	c3                   	ret    $/;"	l
f0101239	obj/kern/kernel.asm	/^f0101239 <snprintf>:$/;"	l
f0101239	obj/kern/kernel.asm	/^f0101239:	55                   	push   %ebp$/;"	l
f010123a	obj/kern/kernel.asm	/^f010123a:	89 e5                	mov    %esp,%ebp$/;"	l
f010123c	obj/kern/kernel.asm	/^f010123c:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010123f	obj/kern/kernel.asm	/^f010123f:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0101242	obj/kern/kernel.asm	/^f0101242:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101246	obj/kern/kernel.asm	/^f0101246:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0101249	obj/kern/kernel.asm	/^f0101249:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010124d	obj/kern/kernel.asm	/^f010124d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101250	obj/kern/kernel.asm	/^f0101250:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101254	obj/kern/kernel.asm	/^f0101254:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101257	obj/kern/kernel.asm	/^f0101257:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010125a	obj/kern/kernel.asm	/^f010125a:	e8 82 ff ff ff       	call   f01011e1 <vsnprintf>$/;"	l
f010125f	obj/kern/kernel.asm	/^f010125f:	c9                   	leave  $/;"	l
f0101260	obj/kern/kernel.asm	/^f0101260:	c3                   	ret    $/;"	l
f0101261	obj/kern/kernel.asm	/^f0101261 <printfmt>:$/;"	l
f0101261	obj/kern/kernel.asm	/^f0101261:	55                   	push   %ebp$/;"	l
f0101262	obj/kern/kernel.asm	/^f0101262:	89 e5                	mov    %esp,%ebp$/;"	l
f0101264	obj/kern/kernel.asm	/^f0101264:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0101267	obj/kern/kernel.asm	/^f0101267:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f010126a	obj/kern/kernel.asm	/^f010126a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010126e	obj/kern/kernel.asm	/^f010126e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0101271	obj/kern/kernel.asm	/^f0101271:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101275	obj/kern/kernel.asm	/^f0101275:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101278	obj/kern/kernel.asm	/^f0101278:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010127c	obj/kern/kernel.asm	/^f010127c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010127f	obj/kern/kernel.asm	/^f010127f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101282	obj/kern/kernel.asm	/^f0101282:	e8 26 fb ff ff       	call   f0100dad <vprintfmt>$/;"	l
f0101287	obj/kern/kernel.asm	/^f0101287:	c9                   	leave  $/;"	l
f0101288	obj/kern/kernel.asm	/^f0101288:	c3                   	ret    $/;"	l
f0101289	obj/kern/kernel.asm	/^f0101289:	00 00                	add    %al,(%eax)$/;"	l
f010128b	obj/kern/kernel.asm	/^f010128b:	00 00                	add    %al,(%eax)$/;"	l
f010128d	obj/kern/kernel.asm	/^f010128d:	00 00                	add    %al,(%eax)$/;"	l
f0101290	obj/kern/kernel.asm	/^f0101290 <readline>:$/;"	l
f0101290	obj/kern/kernel.asm	/^f0101290:	55                   	push   %ebp$/;"	l
f0101291	obj/kern/kernel.asm	/^f0101291:	89 e5                	mov    %esp,%ebp$/;"	l
f0101293	obj/kern/kernel.asm	/^f0101293:	57                   	push   %edi$/;"	l
f0101294	obj/kern/kernel.asm	/^f0101294:	56                   	push   %esi$/;"	l
f0101295	obj/kern/kernel.asm	/^f0101295:	53                   	push   %ebx$/;"	l
f0101296	obj/kern/kernel.asm	/^f0101296:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0101299	obj/kern/kernel.asm	/^f0101299:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010129c	obj/kern/kernel.asm	/^f010129c:	85 c0                	test   %eax,%eax$/;"	l
f010129e	obj/kern/kernel.asm	/^f010129e:	74 10                	je     f01012b0 <readline+0x20>$/;"	l
f01012a0	obj/kern/kernel.asm	/^f01012a0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01012a4	obj/kern/kernel.asm	/^f01012a4:	c7 04 24 e3 1e 10 f0 	movl   $0xf0101ee3,(%esp)$/;"	l
f01012ab	obj/kern/kernel.asm	/^f01012ab:	e8 7b f6 ff ff       	call   f010092b <cprintf>$/;"	l
f01012b0	obj/kern/kernel.asm	/^f01012b0:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01012b7	obj/kern/kernel.asm	/^f01012b7:	e8 da ef ff ff       	call   f0100296 <iscons>$/;"	l
f01012bc	obj/kern/kernel.asm	/^f01012bc:	89 c7                	mov    %eax,%edi$/;"	l
f01012be	obj/kern/kernel.asm	/^f01012be:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01012c3	obj/kern/kernel.asm	/^f01012c3:	e8 bd ef ff ff       	call   f0100285 <getchar>$/;"	l
f01012c8	obj/kern/kernel.asm	/^f01012c8:	89 c3                	mov    %eax,%ebx$/;"	l
f01012ca	obj/kern/kernel.asm	/^f01012ca:	85 c0                	test   %eax,%eax$/;"	l
f01012cc	obj/kern/kernel.asm	/^f01012cc:	79 17                	jns    f01012e5 <readline+0x55>$/;"	l
f01012ce	obj/kern/kernel.asm	/^f01012ce:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01012d2	obj/kern/kernel.asm	/^f01012d2:	c7 04 24 cc 20 10 f0 	movl   $0xf01020cc,(%esp)$/;"	l
f01012d9	obj/kern/kernel.asm	/^f01012d9:	e8 4d f6 ff ff       	call   f010092b <cprintf>$/;"	l
f01012de	obj/kern/kernel.asm	/^f01012de:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01012e3	obj/kern/kernel.asm	/^f01012e3:	eb 76                	jmp    f010135b <readline+0xcb>$/;"	l
f01012e5	obj/kern/kernel.asm	/^f01012e5:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f01012e8	obj/kern/kernel.asm	/^f01012e8:	74 08                	je     f01012f2 <readline+0x62>$/;"	l
f01012ea	obj/kern/kernel.asm	/^f01012ea:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f01012ed	obj/kern/kernel.asm	/^f01012ed:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01012f0	obj/kern/kernel.asm	/^f01012f0:	75 19                	jne    f010130b <readline+0x7b>$/;"	l
f01012f2	obj/kern/kernel.asm	/^f01012f2:	85 f6                	test   %esi,%esi$/;"	l
f01012f4	obj/kern/kernel.asm	/^f01012f4:	7e 15                	jle    f010130b <readline+0x7b>$/;"	l
f01012f6	obj/kern/kernel.asm	/^f01012f6:	85 ff                	test   %edi,%edi$/;"	l
f01012f8	obj/kern/kernel.asm	/^f01012f8:	74 0c                	je     f0101306 <readline+0x76>$/;"	l
f01012fa	obj/kern/kernel.asm	/^f01012fa:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
f0101301	obj/kern/kernel.asm	/^f0101301:	e8 94 f1 ff ff       	call   f010049a <cputchar>$/;"	l
f0101306	obj/kern/kernel.asm	/^f0101306:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0101309	obj/kern/kernel.asm	/^f0101309:	eb b8                	jmp    f01012c3 <readline+0x33>$/;"	l
f010130b	obj/kern/kernel.asm	/^f010130b:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f010130e	obj/kern/kernel.asm	/^f010130e:	66 90                	xchg   %ax,%ax$/;"	l
f0101310	obj/kern/kernel.asm	/^f0101310:	7e 23                	jle    f0101335 <readline+0xa5>$/;"	l
f0101312	obj/kern/kernel.asm	/^f0101312:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f0101318	obj/kern/kernel.asm	/^f0101318:	7f 1b                	jg     f0101335 <readline+0xa5>$/;"	l
f010131a	obj/kern/kernel.asm	/^f010131a:	85 ff                	test   %edi,%edi$/;"	l
f010131c	obj/kern/kernel.asm	/^f010131c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0101320	obj/kern/kernel.asm	/^f0101320:	74 08                	je     f010132a <readline+0x9a>$/;"	l
f0101322	obj/kern/kernel.asm	/^f0101322:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0101325	obj/kern/kernel.asm	/^f0101325:	e8 70 f1 ff ff       	call   f010049a <cputchar>$/;"	l
f010132a	obj/kern/kernel.asm	/^f010132a:	88 9e 60 25 11 f0    	mov    %bl,-0xfeedaa0(%esi)$/;"	l
f0101330	obj/kern/kernel.asm	/^f0101330:	83 c6 01             	add    $0x1,%esi$/;"	l
f0101333	obj/kern/kernel.asm	/^f0101333:	eb 8e                	jmp    f01012c3 <readline+0x33>$/;"	l
f0101335	obj/kern/kernel.asm	/^f0101335:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f0101338	obj/kern/kernel.asm	/^f0101338:	74 05                	je     f010133f <readline+0xaf>$/;"	l
f010133a	obj/kern/kernel.asm	/^f010133a:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f010133d	obj/kern/kernel.asm	/^f010133d:	75 84                	jne    f01012c3 <readline+0x33>$/;"	l
f010133f	obj/kern/kernel.asm	/^f010133f:	85 ff                	test   %edi,%edi$/;"	l
f0101341	obj/kern/kernel.asm	/^f0101341:	74 0c                	je     f010134f <readline+0xbf>$/;"	l
f0101343	obj/kern/kernel.asm	/^f0101343:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
f010134a	obj/kern/kernel.asm	/^f010134a:	e8 4b f1 ff ff       	call   f010049a <cputchar>$/;"	l
f010134f	obj/kern/kernel.asm	/^f010134f:	c6 86 60 25 11 f0 00 	movb   $0x0,-0xfeedaa0(%esi)$/;"	l
f0101356	obj/kern/kernel.asm	/^f0101356:	b8 60 25 11 f0       	mov    $0xf0112560,%eax$/;"	l
f010135b	obj/kern/kernel.asm	/^f010135b:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010135e	obj/kern/kernel.asm	/^f010135e:	5b                   	pop    %ebx$/;"	l
f010135f	obj/kern/kernel.asm	/^f010135f:	5e                   	pop    %esi$/;"	l
f0101360	obj/kern/kernel.asm	/^f0101360:	5f                   	pop    %edi$/;"	l
f0101361	obj/kern/kernel.asm	/^f0101361:	5d                   	pop    %ebp$/;"	l
f0101362	obj/kern/kernel.asm	/^f0101362:	c3                   	ret    $/;"	l
f0101370	obj/kern/kernel.asm	/^f0101370 <strlen>:$/;"	l
f0101370	obj/kern/kernel.asm	/^f0101370:	55                   	push   %ebp$/;"	l
f0101371	obj/kern/kernel.asm	/^f0101371:	89 e5                	mov    %esp,%ebp$/;"	l
f0101373	obj/kern/kernel.asm	/^f0101373:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0101376	obj/kern/kernel.asm	/^f0101376:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010137b	obj/kern/kernel.asm	/^f010137b:	80 3a 00             	cmpb   $0x0,(%edx)$/;"	l
f010137e	obj/kern/kernel.asm	/^f010137e:	74 09                	je     f0101389 <strlen+0x19>$/;"	l
f0101380	obj/kern/kernel.asm	/^f0101380:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101383	obj/kern/kernel.asm	/^f0101383:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f0101387	obj/kern/kernel.asm	/^f0101387:	75 f7                	jne    f0101380 <strlen+0x10>$/;"	l
f0101389	obj/kern/kernel.asm	/^f0101389:	5d                   	pop    %ebp$/;"	l
f010138a	obj/kern/kernel.asm	/^f010138a:	c3                   	ret    $/;"	l
f010138b	obj/kern/kernel.asm	/^f010138b <strnlen>:$/;"	l
f010138b	obj/kern/kernel.asm	/^f010138b:	55                   	push   %ebp$/;"	l
f010138c	obj/kern/kernel.asm	/^f010138c:	89 e5                	mov    %esp,%ebp$/;"	l
f010138e	obj/kern/kernel.asm	/^f010138e:	53                   	push   %ebx$/;"	l
f010138f	obj/kern/kernel.asm	/^f010138f:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0101392	obj/kern/kernel.asm	/^f0101392:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0101395	obj/kern/kernel.asm	/^f0101395:	85 c9                	test   %ecx,%ecx$/;"	l
f0101397	obj/kern/kernel.asm	/^f0101397:	74 19                	je     f01013b2 <strnlen+0x27>$/;"	l
f0101399	obj/kern/kernel.asm	/^f0101399:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f010139c	obj/kern/kernel.asm	/^f010139c:	74 14                	je     f01013b2 <strnlen+0x27>$/;"	l
f010139e	obj/kern/kernel.asm	/^f010139e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01013a3	obj/kern/kernel.asm	/^f01013a3:	83 c0 01             	add    $0x1,%eax$/;"	l
f01013a6	obj/kern/kernel.asm	/^f01013a6:	39 c8                	cmp    %ecx,%eax$/;"	l
f01013a8	obj/kern/kernel.asm	/^f01013a8:	74 0d                	je     f01013b7 <strnlen+0x2c>$/;"	l
f01013aa	obj/kern/kernel.asm	/^f01013aa:	80 3c 03 00          	cmpb   $0x0,(%ebx,%eax,1)$/;"	l
f01013ae	obj/kern/kernel.asm	/^f01013ae:	75 f3                	jne    f01013a3 <strnlen+0x18>$/;"	l
f01013b0	obj/kern/kernel.asm	/^f01013b0:	eb 05                	jmp    f01013b7 <strnlen+0x2c>$/;"	l
f01013b2	obj/kern/kernel.asm	/^f01013b2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01013b7	obj/kern/kernel.asm	/^f01013b7:	5b                   	pop    %ebx$/;"	l
f01013b8	obj/kern/kernel.asm	/^f01013b8:	5d                   	pop    %ebp$/;"	l
f01013b9	obj/kern/kernel.asm	/^f01013b9:	c3                   	ret    $/;"	l
f01013ba	obj/kern/kernel.asm	/^f01013ba <strcpy>:$/;"	l
f01013ba	obj/kern/kernel.asm	/^f01013ba:	55                   	push   %ebp$/;"	l
f01013bb	obj/kern/kernel.asm	/^f01013bb:	89 e5                	mov    %esp,%ebp$/;"	l
f01013bd	obj/kern/kernel.asm	/^f01013bd:	53                   	push   %ebx$/;"	l
f01013be	obj/kern/kernel.asm	/^f01013be:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01013c1	obj/kern/kernel.asm	/^f01013c1:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01013c4	obj/kern/kernel.asm	/^f01013c4:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01013c9	obj/kern/kernel.asm	/^f01013c9:	0f b6 0c 13          	movzbl (%ebx,%edx,1),%ecx$/;"	l
f01013cd	obj/kern/kernel.asm	/^f01013cd:	88 0c 10             	mov    %cl,(%eax,%edx,1)$/;"	l
f01013d0	obj/kern/kernel.asm	/^f01013d0:	83 c2 01             	add    $0x1,%edx$/;"	l
f01013d3	obj/kern/kernel.asm	/^f01013d3:	84 c9                	test   %cl,%cl$/;"	l
f01013d5	obj/kern/kernel.asm	/^f01013d5:	75 f2                	jne    f01013c9 <strcpy+0xf>$/;"	l
f01013d7	obj/kern/kernel.asm	/^f01013d7:	5b                   	pop    %ebx$/;"	l
f01013d8	obj/kern/kernel.asm	/^f01013d8:	5d                   	pop    %ebp$/;"	l
f01013d9	obj/kern/kernel.asm	/^f01013d9:	c3                   	ret    $/;"	l
f01013da	obj/kern/kernel.asm	/^f01013da <strncpy>:$/;"	l
f01013da	obj/kern/kernel.asm	/^f01013da:	55                   	push   %ebp$/;"	l
f01013db	obj/kern/kernel.asm	/^f01013db:	89 e5                	mov    %esp,%ebp$/;"	l
f01013dd	obj/kern/kernel.asm	/^f01013dd:	56                   	push   %esi$/;"	l
f01013de	obj/kern/kernel.asm	/^f01013de:	53                   	push   %ebx$/;"	l
f01013df	obj/kern/kernel.asm	/^f01013df:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01013e2	obj/kern/kernel.asm	/^f01013e2:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01013e5	obj/kern/kernel.asm	/^f01013e5:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f01013e8	obj/kern/kernel.asm	/^f01013e8:	85 f6                	test   %esi,%esi$/;"	l
f01013ea	obj/kern/kernel.asm	/^f01013ea:	74 18                	je     f0101404 <strncpy+0x2a>$/;"	l
f01013ec	obj/kern/kernel.asm	/^f01013ec:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01013f1	obj/kern/kernel.asm	/^f01013f1:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f01013f4	obj/kern/kernel.asm	/^f01013f4:	88 1c 08             	mov    %bl,(%eax,%ecx,1)$/;"	l
f01013f7	obj/kern/kernel.asm	/^f01013f7:	80 3a 01             	cmpb   $0x1,(%edx)$/;"	l
f01013fa	obj/kern/kernel.asm	/^f01013fa:	83 da ff             	sbb    $0xffffffff,%edx$/;"	l
f01013fd	obj/kern/kernel.asm	/^f01013fd:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0101400	obj/kern/kernel.asm	/^f0101400:	39 ce                	cmp    %ecx,%esi$/;"	l
f0101402	obj/kern/kernel.asm	/^f0101402:	77 ed                	ja     f01013f1 <strncpy+0x17>$/;"	l
f0101404	obj/kern/kernel.asm	/^f0101404:	5b                   	pop    %ebx$/;"	l
f0101405	obj/kern/kernel.asm	/^f0101405:	5e                   	pop    %esi$/;"	l
f0101406	obj/kern/kernel.asm	/^f0101406:	5d                   	pop    %ebp$/;"	l
f0101407	obj/kern/kernel.asm	/^f0101407:	c3                   	ret    $/;"	l
f0101408	obj/kern/kernel.asm	/^f0101408 <strlcpy>:$/;"	l
f0101408	obj/kern/kernel.asm	/^f0101408:	55                   	push   %ebp$/;"	l
f0101409	obj/kern/kernel.asm	/^f0101409:	89 e5                	mov    %esp,%ebp$/;"	l
f010140b	obj/kern/kernel.asm	/^f010140b:	56                   	push   %esi$/;"	l
f010140c	obj/kern/kernel.asm	/^f010140c:	53                   	push   %ebx$/;"	l
f010140d	obj/kern/kernel.asm	/^f010140d:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0101410	obj/kern/kernel.asm	/^f0101410:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0101413	obj/kern/kernel.asm	/^f0101413:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0101416	obj/kern/kernel.asm	/^f0101416:	89 f0                	mov    %esi,%eax$/;"	l
f0101418	obj/kern/kernel.asm	/^f0101418:	85 c9                	test   %ecx,%ecx$/;"	l
f010141a	obj/kern/kernel.asm	/^f010141a:	74 27                	je     f0101443 <strlcpy+0x3b>$/;"	l
f010141c	obj/kern/kernel.asm	/^f010141c:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f010141f	obj/kern/kernel.asm	/^f010141f:	74 1d                	je     f010143e <strlcpy+0x36>$/;"	l
f0101421	obj/kern/kernel.asm	/^f0101421:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0101424	obj/kern/kernel.asm	/^f0101424:	84 db                	test   %bl,%bl$/;"	l
f0101426	obj/kern/kernel.asm	/^f0101426:	74 16                	je     f010143e <strlcpy+0x36>$/;"	l
f0101428	obj/kern/kernel.asm	/^f0101428:	88 18                	mov    %bl,(%eax)$/;"	l
f010142a	obj/kern/kernel.asm	/^f010142a:	83 c0 01             	add    $0x1,%eax$/;"	l
f010142d	obj/kern/kernel.asm	/^f010142d:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f0101430	obj/kern/kernel.asm	/^f0101430:	74 0e                	je     f0101440 <strlcpy+0x38>$/;"	l
f0101432	obj/kern/kernel.asm	/^f0101432:	83 c2 01             	add    $0x1,%edx$/;"	l
f0101435	obj/kern/kernel.asm	/^f0101435:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0101438	obj/kern/kernel.asm	/^f0101438:	84 db                	test   %bl,%bl$/;"	l
f010143a	obj/kern/kernel.asm	/^f010143a:	75 ec                	jne    f0101428 <strlcpy+0x20>$/;"	l
f010143c	obj/kern/kernel.asm	/^f010143c:	eb 02                	jmp    f0101440 <strlcpy+0x38>$/;"	l
f010143e	obj/kern/kernel.asm	/^f010143e:	89 f0                	mov    %esi,%eax$/;"	l
f0101440	obj/kern/kernel.asm	/^f0101440:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0101443	obj/kern/kernel.asm	/^f0101443:	29 f0                	sub    %esi,%eax$/;"	l
f0101445	obj/kern/kernel.asm	/^f0101445:	5b                   	pop    %ebx$/;"	l
f0101446	obj/kern/kernel.asm	/^f0101446:	5e                   	pop    %esi$/;"	l
f0101447	obj/kern/kernel.asm	/^f0101447:	5d                   	pop    %ebp$/;"	l
f0101448	obj/kern/kernel.asm	/^f0101448:	c3                   	ret    $/;"	l
f0101449	obj/kern/kernel.asm	/^f0101449 <strcmp>:$/;"	l
f0101449	obj/kern/kernel.asm	/^f0101449:	55                   	push   %ebp$/;"	l
f010144a	obj/kern/kernel.asm	/^f010144a:	89 e5                	mov    %esp,%ebp$/;"	l
f010144c	obj/kern/kernel.asm	/^f010144c:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f010144f	obj/kern/kernel.asm	/^f010144f:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0101452	obj/kern/kernel.asm	/^f0101452:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0101455	obj/kern/kernel.asm	/^f0101455:	84 c0                	test   %al,%al$/;"	l
f0101457	obj/kern/kernel.asm	/^f0101457:	74 15                	je     f010146e <strcmp+0x25>$/;"	l
f0101459	obj/kern/kernel.asm	/^f0101459:	3a 02                	cmp    (%edx),%al$/;"	l
f010145b	obj/kern/kernel.asm	/^f010145b:	75 11                	jne    f010146e <strcmp+0x25>$/;"	l
f010145d	obj/kern/kernel.asm	/^f010145d:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0101460	obj/kern/kernel.asm	/^f0101460:	83 c2 01             	add    $0x1,%edx$/;"	l
f0101463	obj/kern/kernel.asm	/^f0101463:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0101466	obj/kern/kernel.asm	/^f0101466:	84 c0                	test   %al,%al$/;"	l
f0101468	obj/kern/kernel.asm	/^f0101468:	74 04                	je     f010146e <strcmp+0x25>$/;"	l
f010146a	obj/kern/kernel.asm	/^f010146a:	3a 02                	cmp    (%edx),%al$/;"	l
f010146c	obj/kern/kernel.asm	/^f010146c:	74 ef                	je     f010145d <strcmp+0x14>$/;"	l
f010146e	obj/kern/kernel.asm	/^f010146e:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0101471	obj/kern/kernel.asm	/^f0101471:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0101474	obj/kern/kernel.asm	/^f0101474:	29 d0                	sub    %edx,%eax$/;"	l
f0101476	obj/kern/kernel.asm	/^f0101476:	5d                   	pop    %ebp$/;"	l
f0101477	obj/kern/kernel.asm	/^f0101477:	c3                   	ret    $/;"	l
f0101478	obj/kern/kernel.asm	/^f0101478 <strncmp>:$/;"	l
f0101478	obj/kern/kernel.asm	/^f0101478:	55                   	push   %ebp$/;"	l
f0101479	obj/kern/kernel.asm	/^f0101479:	89 e5                	mov    %esp,%ebp$/;"	l
f010147b	obj/kern/kernel.asm	/^f010147b:	53                   	push   %ebx$/;"	l
f010147c	obj/kern/kernel.asm	/^f010147c:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010147f	obj/kern/kernel.asm	/^f010147f:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0101482	obj/kern/kernel.asm	/^f0101482:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0101485	obj/kern/kernel.asm	/^f0101485:	85 c0                	test   %eax,%eax$/;"	l
f0101487	obj/kern/kernel.asm	/^f0101487:	74 23                	je     f01014ac <strncmp+0x34>$/;"	l
f0101489	obj/kern/kernel.asm	/^f0101489:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f010148c	obj/kern/kernel.asm	/^f010148c:	84 db                	test   %bl,%bl$/;"	l
f010148e	obj/kern/kernel.asm	/^f010148e:	74 24                	je     f01014b4 <strncmp+0x3c>$/;"	l
f0101490	obj/kern/kernel.asm	/^f0101490:	3a 19                	cmp    (%ecx),%bl$/;"	l
f0101492	obj/kern/kernel.asm	/^f0101492:	75 20                	jne    f01014b4 <strncmp+0x3c>$/;"	l
f0101494	obj/kern/kernel.asm	/^f0101494:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0101497	obj/kern/kernel.asm	/^f0101497:	74 13                	je     f01014ac <strncmp+0x34>$/;"	l
f0101499	obj/kern/kernel.asm	/^f0101499:	83 c2 01             	add    $0x1,%edx$/;"	l
f010149c	obj/kern/kernel.asm	/^f010149c:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010149f	obj/kern/kernel.asm	/^f010149f:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f01014a2	obj/kern/kernel.asm	/^f01014a2:	84 db                	test   %bl,%bl$/;"	l
f01014a4	obj/kern/kernel.asm	/^f01014a4:	74 0e                	je     f01014b4 <strncmp+0x3c>$/;"	l
f01014a6	obj/kern/kernel.asm	/^f01014a6:	3a 19                	cmp    (%ecx),%bl$/;"	l
f01014a8	obj/kern/kernel.asm	/^f01014a8:	74 ea                	je     f0101494 <strncmp+0x1c>$/;"	l
f01014aa	obj/kern/kernel.asm	/^f01014aa:	eb 08                	jmp    f01014b4 <strncmp+0x3c>$/;"	l
f01014ac	obj/kern/kernel.asm	/^f01014ac:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01014b1	obj/kern/kernel.asm	/^f01014b1:	5b                   	pop    %ebx$/;"	l
f01014b2	obj/kern/kernel.asm	/^f01014b2:	5d                   	pop    %ebp$/;"	l
f01014b3	obj/kern/kernel.asm	/^f01014b3:	c3                   	ret    $/;"	l
f01014b4	obj/kern/kernel.asm	/^f01014b4:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f01014b7	obj/kern/kernel.asm	/^f01014b7:	0f b6 11             	movzbl (%ecx),%edx$/;"	l
f01014ba	obj/kern/kernel.asm	/^f01014ba:	29 d0                	sub    %edx,%eax$/;"	l
f01014bc	obj/kern/kernel.asm	/^f01014bc:	eb f3                	jmp    f01014b1 <strncmp+0x39>$/;"	l
f01014be	obj/kern/kernel.asm	/^f01014be <strchr>:$/;"	l
f01014be	obj/kern/kernel.asm	/^f01014be:	55                   	push   %ebp$/;"	l
f01014bf	obj/kern/kernel.asm	/^f01014bf:	89 e5                	mov    %esp,%ebp$/;"	l
f01014c1	obj/kern/kernel.asm	/^f01014c1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01014c4	obj/kern/kernel.asm	/^f01014c4:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f01014c8	obj/kern/kernel.asm	/^f01014c8:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f01014cb	obj/kern/kernel.asm	/^f01014cb:	84 d2                	test   %dl,%dl$/;"	l
f01014cd	obj/kern/kernel.asm	/^f01014cd:	74 15                	je     f01014e4 <strchr+0x26>$/;"	l
f01014cf	obj/kern/kernel.asm	/^f01014cf:	38 ca                	cmp    %cl,%dl$/;"	l
f01014d1	obj/kern/kernel.asm	/^f01014d1:	75 07                	jne    f01014da <strchr+0x1c>$/;"	l
f01014d3	obj/kern/kernel.asm	/^f01014d3:	eb 14                	jmp    f01014e9 <strchr+0x2b>$/;"	l
f01014d5	obj/kern/kernel.asm	/^f01014d5:	38 ca                	cmp    %cl,%dl$/;"	l
f01014d7	obj/kern/kernel.asm	/^f01014d7:	90                   	nop$/;"	l
f01014d8	obj/kern/kernel.asm	/^f01014d8:	74 0f                	je     f01014e9 <strchr+0x2b>$/;"	l
f01014da	obj/kern/kernel.asm	/^f01014da:	83 c0 01             	add    $0x1,%eax$/;"	l
f01014dd	obj/kern/kernel.asm	/^f01014dd:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f01014e0	obj/kern/kernel.asm	/^f01014e0:	84 d2                	test   %dl,%dl$/;"	l
f01014e2	obj/kern/kernel.asm	/^f01014e2:	75 f1                	jne    f01014d5 <strchr+0x17>$/;"	l
f01014e4	obj/kern/kernel.asm	/^f01014e4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01014e9	obj/kern/kernel.asm	/^f01014e9:	5d                   	pop    %ebp$/;"	l
f01014ea	obj/kern/kernel.asm	/^f01014ea:	c3                   	ret    $/;"	l
f01014eb	obj/kern/kernel.asm	/^f01014eb <strfind>:$/;"	l
f01014eb	obj/kern/kernel.asm	/^f01014eb:	55                   	push   %ebp$/;"	l
f01014ec	obj/kern/kernel.asm	/^f01014ec:	89 e5                	mov    %esp,%ebp$/;"	l
f01014ee	obj/kern/kernel.asm	/^f01014ee:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01014f1	obj/kern/kernel.asm	/^f01014f1:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f01014f5	obj/kern/kernel.asm	/^f01014f5:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f01014f8	obj/kern/kernel.asm	/^f01014f8:	84 d2                	test   %dl,%dl$/;"	l
f01014fa	obj/kern/kernel.asm	/^f01014fa:	74 18                	je     f0101514 <strfind+0x29>$/;"	l
f01014fc	obj/kern/kernel.asm	/^f01014fc:	38 ca                	cmp    %cl,%dl$/;"	l
f01014fe	obj/kern/kernel.asm	/^f01014fe:	75 0a                	jne    f010150a <strfind+0x1f>$/;"	l
f0101500	obj/kern/kernel.asm	/^f0101500:	eb 12                	jmp    f0101514 <strfind+0x29>$/;"	l
f0101502	obj/kern/kernel.asm	/^f0101502:	38 ca                	cmp    %cl,%dl$/;"	l
f0101504	obj/kern/kernel.asm	/^f0101504:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0101508	obj/kern/kernel.asm	/^f0101508:	74 0a                	je     f0101514 <strfind+0x29>$/;"	l
f010150a	obj/kern/kernel.asm	/^f010150a:	83 c0 01             	add    $0x1,%eax$/;"	l
f010150d	obj/kern/kernel.asm	/^f010150d:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0101510	obj/kern/kernel.asm	/^f0101510:	84 d2                	test   %dl,%dl$/;"	l
f0101512	obj/kern/kernel.asm	/^f0101512:	75 ee                	jne    f0101502 <strfind+0x17>$/;"	l
f0101514	obj/kern/kernel.asm	/^f0101514:	5d                   	pop    %ebp$/;"	l
f0101515	obj/kern/kernel.asm	/^f0101515:	c3                   	ret    $/;"	l
f0101516	obj/kern/kernel.asm	/^f0101516 <memset>:$/;"	l
f0101516	obj/kern/kernel.asm	/^f0101516:	55                   	push   %ebp$/;"	l
f0101517	obj/kern/kernel.asm	/^f0101517:	89 e5                	mov    %esp,%ebp$/;"	l
f0101519	obj/kern/kernel.asm	/^f0101519:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010151c	obj/kern/kernel.asm	/^f010151c:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010151f	obj/kern/kernel.asm	/^f010151f:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0101523	obj/kern/kernel.asm	/^f0101523:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f0101527	obj/kern/kernel.asm	/^f0101527:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f010152a	obj/kern/kernel.asm	/^f010152a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010152d	obj/kern/kernel.asm	/^f010152d:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0101530	obj/kern/kernel.asm	/^f0101530:	85 c9                	test   %ecx,%ecx$/;"	l
f0101532	obj/kern/kernel.asm	/^f0101532:	74 30                	je     f0101564 <memset+0x4e>$/;"	l
f0101534	obj/kern/kernel.asm	/^f0101534:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f010153a	obj/kern/kernel.asm	/^f010153a:	75 25                	jne    f0101561 <memset+0x4b>$/;"	l
f010153c	obj/kern/kernel.asm	/^f010153c:	f6 c1 03             	test   $0x3,%cl$/;"	l
f010153f	obj/kern/kernel.asm	/^f010153f:	75 20                	jne    f0101561 <memset+0x4b>$/;"	l
f0101541	obj/kern/kernel.asm	/^f0101541:	0f b6 d0             	movzbl %al,%edx$/;"	l
f0101544	obj/kern/kernel.asm	/^f0101544:	89 d3                	mov    %edx,%ebx$/;"	l
f0101546	obj/kern/kernel.asm	/^f0101546:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f0101549	obj/kern/kernel.asm	/^f0101549:	89 d6                	mov    %edx,%esi$/;"	l
f010154b	obj/kern/kernel.asm	/^f010154b:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f010154e	obj/kern/kernel.asm	/^f010154e:	89 d0                	mov    %edx,%eax$/;"	l
f0101550	obj/kern/kernel.asm	/^f0101550:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f0101553	obj/kern/kernel.asm	/^f0101553:	09 f0                	or     %esi,%eax$/;"	l
f0101555	obj/kern/kernel.asm	/^f0101555:	09 d0                	or     %edx,%eax$/;"	l
f0101557	obj/kern/kernel.asm	/^f0101557:	09 d8                	or     %ebx,%eax$/;"	l
f0101559	obj/kern/kernel.asm	/^f0101559:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f010155c	obj/kern/kernel.asm	/^f010155c:	fc                   	cld    $/;"	l
f010155d	obj/kern/kernel.asm	/^f010155d:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f010155f	obj/kern/kernel.asm	/^f010155f:	eb 03                	jmp    f0101564 <memset+0x4e>$/;"	l
f0101561	obj/kern/kernel.asm	/^f0101561:	fc                   	cld    $/;"	l
f0101562	obj/kern/kernel.asm	/^f0101562:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f0101564	obj/kern/kernel.asm	/^f0101564:	89 f8                	mov    %edi,%eax$/;"	l
f0101566	obj/kern/kernel.asm	/^f0101566:	8b 1c 24             	mov    (%esp),%ebx$/;"	l
f0101569	obj/kern/kernel.asm	/^f0101569:	8b 74 24 04          	mov    0x4(%esp),%esi$/;"	l
f010156d	obj/kern/kernel.asm	/^f010156d:	8b 7c 24 08          	mov    0x8(%esp),%edi$/;"	l
f0101571	obj/kern/kernel.asm	/^f0101571:	89 ec                	mov    %ebp,%esp$/;"	l
f0101573	obj/kern/kernel.asm	/^f0101573:	5d                   	pop    %ebp$/;"	l
f0101574	obj/kern/kernel.asm	/^f0101574:	c3                   	ret    $/;"	l
f0101575	obj/kern/kernel.asm	/^f0101575 <memmove>:$/;"	l
f0101575	obj/kern/kernel.asm	/^f0101575:	55                   	push   %ebp$/;"	l
f0101576	obj/kern/kernel.asm	/^f0101576:	89 e5                	mov    %esp,%ebp$/;"	l
f0101578	obj/kern/kernel.asm	/^f0101578:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010157b	obj/kern/kernel.asm	/^f010157b:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010157e	obj/kern/kernel.asm	/^f010157e:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101582	obj/kern/kernel.asm	/^f0101582:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101585	obj/kern/kernel.asm	/^f0101585:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0101588	obj/kern/kernel.asm	/^f0101588:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010158b	obj/kern/kernel.asm	/^f010158b:	89 c7                	mov    %eax,%edi$/;"	l
f010158d	obj/kern/kernel.asm	/^f010158d:	39 c6                	cmp    %eax,%esi$/;"	l
f010158f	obj/kern/kernel.asm	/^f010158f:	73 35                	jae    f01015c6 <memmove+0x51>$/;"	l
f0101591	obj/kern/kernel.asm	/^f0101591:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f0101594	obj/kern/kernel.asm	/^f0101594:	39 d0                	cmp    %edx,%eax$/;"	l
f0101596	obj/kern/kernel.asm	/^f0101596:	73 2e                	jae    f01015c6 <memmove+0x51>$/;"	l
f0101598	obj/kern/kernel.asm	/^f0101598:	01 cf                	add    %ecx,%edi$/;"	l
f010159a	obj/kern/kernel.asm	/^f010159a:	f6 c2 03             	test   $0x3,%dl$/;"	l
f010159d	obj/kern/kernel.asm	/^f010159d:	75 1b                	jne    f01015ba <memmove+0x45>$/;"	l
f010159f	obj/kern/kernel.asm	/^f010159f:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f01015a5	obj/kern/kernel.asm	/^f01015a5:	75 13                	jne    f01015ba <memmove+0x45>$/;"	l
f01015a7	obj/kern/kernel.asm	/^f01015a7:	f6 c1 03             	test   $0x3,%cl$/;"	l
f01015aa	obj/kern/kernel.asm	/^f01015aa:	75 0e                	jne    f01015ba <memmove+0x45>$/;"	l
f01015ac	obj/kern/kernel.asm	/^f01015ac:	83 ef 04             	sub    $0x4,%edi$/;"	l
f01015af	obj/kern/kernel.asm	/^f01015af:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f01015b2	obj/kern/kernel.asm	/^f01015b2:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01015b5	obj/kern/kernel.asm	/^f01015b5:	fd                   	std    $/;"	l
f01015b6	obj/kern/kernel.asm	/^f01015b6:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01015b8	obj/kern/kernel.asm	/^f01015b8:	eb 09                	jmp    f01015c3 <memmove+0x4e>$/;"	l
f01015ba	obj/kern/kernel.asm	/^f01015ba:	83 ef 01             	sub    $0x1,%edi$/;"	l
f01015bd	obj/kern/kernel.asm	/^f01015bd:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f01015c0	obj/kern/kernel.asm	/^f01015c0:	fd                   	std    $/;"	l
f01015c1	obj/kern/kernel.asm	/^f01015c1:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f01015c3	obj/kern/kernel.asm	/^f01015c3:	fc                   	cld    $/;"	l
f01015c4	obj/kern/kernel.asm	/^f01015c4:	eb 20                	jmp    f01015e6 <memmove+0x71>$/;"	l
f01015c6	obj/kern/kernel.asm	/^f01015c6:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f01015cc	obj/kern/kernel.asm	/^f01015cc:	75 15                	jne    f01015e3 <memmove+0x6e>$/;"	l
f01015ce	obj/kern/kernel.asm	/^f01015ce:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f01015d4	obj/kern/kernel.asm	/^f01015d4:	75 0d                	jne    f01015e3 <memmove+0x6e>$/;"	l
f01015d6	obj/kern/kernel.asm	/^f01015d6:	f6 c1 03             	test   $0x3,%cl$/;"	l
f01015d9	obj/kern/kernel.asm	/^f01015d9:	75 08                	jne    f01015e3 <memmove+0x6e>$/;"	l
f01015db	obj/kern/kernel.asm	/^f01015db:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01015de	obj/kern/kernel.asm	/^f01015de:	fc                   	cld    $/;"	l
f01015df	obj/kern/kernel.asm	/^f01015df:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01015e1	obj/kern/kernel.asm	/^f01015e1:	eb 03                	jmp    f01015e6 <memmove+0x71>$/;"	l
f01015e3	obj/kern/kernel.asm	/^f01015e3:	fc                   	cld    $/;"	l
f01015e4	obj/kern/kernel.asm	/^f01015e4:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f01015e6	obj/kern/kernel.asm	/^f01015e6:	8b 34 24             	mov    (%esp),%esi$/;"	l
f01015e9	obj/kern/kernel.asm	/^f01015e9:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f01015ed	obj/kern/kernel.asm	/^f01015ed:	89 ec                	mov    %ebp,%esp$/;"	l
f01015ef	obj/kern/kernel.asm	/^f01015ef:	5d                   	pop    %ebp$/;"	l
f01015f0	obj/kern/kernel.asm	/^f01015f0:	c3                   	ret    $/;"	l
f01015f1	obj/kern/kernel.asm	/^f01015f1 <memcpy>:$/;"	l
f01015f1	obj/kern/kernel.asm	/^f01015f1:	55                   	push   %ebp$/;"	l
f01015f2	obj/kern/kernel.asm	/^f01015f2:	89 e5                	mov    %esp,%ebp$/;"	l
f01015f4	obj/kern/kernel.asm	/^f01015f4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01015f7	obj/kern/kernel.asm	/^f01015f7:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01015fa	obj/kern/kernel.asm	/^f01015fa:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01015fe	obj/kern/kernel.asm	/^f01015fe:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101601	obj/kern/kernel.asm	/^f0101601:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101605	obj/kern/kernel.asm	/^f0101605:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101608	obj/kern/kernel.asm	/^f0101608:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010160b	obj/kern/kernel.asm	/^f010160b:	e8 65 ff ff ff       	call   f0101575 <memmove>$/;"	l
f0101610	obj/kern/kernel.asm	/^f0101610:	c9                   	leave  $/;"	l
f0101611	obj/kern/kernel.asm	/^f0101611:	c3                   	ret    $/;"	l
f0101612	obj/kern/kernel.asm	/^f0101612 <memcmp>:$/;"	l
f0101612	obj/kern/kernel.asm	/^f0101612:	55                   	push   %ebp$/;"	l
f0101613	obj/kern/kernel.asm	/^f0101613:	89 e5                	mov    %esp,%ebp$/;"	l
f0101615	obj/kern/kernel.asm	/^f0101615:	57                   	push   %edi$/;"	l
f0101616	obj/kern/kernel.asm	/^f0101616:	56                   	push   %esi$/;"	l
f0101617	obj/kern/kernel.asm	/^f0101617:	53                   	push   %ebx$/;"	l
f0101618	obj/kern/kernel.asm	/^f0101618:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010161b	obj/kern/kernel.asm	/^f010161b:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f010161e	obj/kern/kernel.asm	/^f010161e:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0101621	obj/kern/kernel.asm	/^f0101621:	85 c9                	test   %ecx,%ecx$/;"	l
f0101623	obj/kern/kernel.asm	/^f0101623:	74 36                	je     f010165b <memcmp+0x49>$/;"	l
f0101625	obj/kern/kernel.asm	/^f0101625:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f0101628	obj/kern/kernel.asm	/^f0101628:	0f b6 1f             	movzbl (%edi),%ebx$/;"	l
f010162b	obj/kern/kernel.asm	/^f010162b:	38 d8                	cmp    %bl,%al$/;"	l
f010162d	obj/kern/kernel.asm	/^f010162d:	74 20                	je     f010164f <memcmp+0x3d>$/;"	l
f010162f	obj/kern/kernel.asm	/^f010162f:	eb 14                	jmp    f0101645 <memcmp+0x33>$/;"	l
f0101631	obj/kern/kernel.asm	/^f0101631:	0f b6 44 16 01       	movzbl 0x1(%esi,%edx,1),%eax$/;"	l
f0101636	obj/kern/kernel.asm	/^f0101636:	0f b6 5c 17 01       	movzbl 0x1(%edi,%edx,1),%ebx$/;"	l
f010163b	obj/kern/kernel.asm	/^f010163b:	83 c2 01             	add    $0x1,%edx$/;"	l
f010163e	obj/kern/kernel.asm	/^f010163e:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f0101641	obj/kern/kernel.asm	/^f0101641:	38 d8                	cmp    %bl,%al$/;"	l
f0101643	obj/kern/kernel.asm	/^f0101643:	74 12                	je     f0101657 <memcmp+0x45>$/;"	l
f0101645	obj/kern/kernel.asm	/^f0101645:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0101648	obj/kern/kernel.asm	/^f0101648:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f010164b	obj/kern/kernel.asm	/^f010164b:	29 d8                	sub    %ebx,%eax$/;"	l
f010164d	obj/kern/kernel.asm	/^f010164d:	eb 11                	jmp    f0101660 <memcmp+0x4e>$/;"	l
f010164f	obj/kern/kernel.asm	/^f010164f:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f0101652	obj/kern/kernel.asm	/^f0101652:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101657	obj/kern/kernel.asm	/^f0101657:	85 c9                	test   %ecx,%ecx$/;"	l
f0101659	obj/kern/kernel.asm	/^f0101659:	75 d6                	jne    f0101631 <memcmp+0x1f>$/;"	l
f010165b	obj/kern/kernel.asm	/^f010165b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101660	obj/kern/kernel.asm	/^f0101660:	5b                   	pop    %ebx$/;"	l
f0101661	obj/kern/kernel.asm	/^f0101661:	5e                   	pop    %esi$/;"	l
f0101662	obj/kern/kernel.asm	/^f0101662:	5f                   	pop    %edi$/;"	l
f0101663	obj/kern/kernel.asm	/^f0101663:	5d                   	pop    %ebp$/;"	l
f0101664	obj/kern/kernel.asm	/^f0101664:	c3                   	ret    $/;"	l
f0101665	obj/kern/kernel.asm	/^f0101665 <memfind>:$/;"	l
f0101665	obj/kern/kernel.asm	/^f0101665:	55                   	push   %ebp$/;"	l
f0101666	obj/kern/kernel.asm	/^f0101666:	89 e5                	mov    %esp,%ebp$/;"	l
f0101668	obj/kern/kernel.asm	/^f0101668:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010166b	obj/kern/kernel.asm	/^f010166b:	89 c2                	mov    %eax,%edx$/;"	l
f010166d	obj/kern/kernel.asm	/^f010166d:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
f0101670	obj/kern/kernel.asm	/^f0101670:	39 d0                	cmp    %edx,%eax$/;"	l
f0101672	obj/kern/kernel.asm	/^f0101672:	73 15                	jae    f0101689 <memfind+0x24>$/;"	l
f0101674	obj/kern/kernel.asm	/^f0101674:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0101678	obj/kern/kernel.asm	/^f0101678:	38 08                	cmp    %cl,(%eax)$/;"	l
f010167a	obj/kern/kernel.asm	/^f010167a:	75 06                	jne    f0101682 <memfind+0x1d>$/;"	l
f010167c	obj/kern/kernel.asm	/^f010167c:	eb 0b                	jmp    f0101689 <memfind+0x24>$/;"	l
f010167e	obj/kern/kernel.asm	/^f010167e:	38 08                	cmp    %cl,(%eax)$/;"	l
f0101680	obj/kern/kernel.asm	/^f0101680:	74 07                	je     f0101689 <memfind+0x24>$/;"	l
f0101682	obj/kern/kernel.asm	/^f0101682:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101685	obj/kern/kernel.asm	/^f0101685:	39 c2                	cmp    %eax,%edx$/;"	l
f0101687	obj/kern/kernel.asm	/^f0101687:	77 f5                	ja     f010167e <memfind+0x19>$/;"	l
f0101689	obj/kern/kernel.asm	/^f0101689:	5d                   	pop    %ebp$/;"	l
f010168a	obj/kern/kernel.asm	/^f010168a:	c3                   	ret    $/;"	l
f010168b	obj/kern/kernel.asm	/^f010168b <strtol>:$/;"	l
f010168b	obj/kern/kernel.asm	/^f010168b:	55                   	push   %ebp$/;"	l
f010168c	obj/kern/kernel.asm	/^f010168c:	89 e5                	mov    %esp,%ebp$/;"	l
f010168e	obj/kern/kernel.asm	/^f010168e:	57                   	push   %edi$/;"	l
f010168f	obj/kern/kernel.asm	/^f010168f:	56                   	push   %esi$/;"	l
f0101690	obj/kern/kernel.asm	/^f0101690:	53                   	push   %ebx$/;"	l
f0101691	obj/kern/kernel.asm	/^f0101691:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101694	obj/kern/kernel.asm	/^f0101694:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0101697	obj/kern/kernel.asm	/^f0101697:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f010169a	obj/kern/kernel.asm	/^f010169a:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f010169d	obj/kern/kernel.asm	/^f010169d:	3c 20                	cmp    $0x20,%al$/;"	l
f010169f	obj/kern/kernel.asm	/^f010169f:	74 04                	je     f01016a5 <strtol+0x1a>$/;"	l
f01016a1	obj/kern/kernel.asm	/^f01016a1:	3c 09                	cmp    $0x9,%al$/;"	l
f01016a3	obj/kern/kernel.asm	/^f01016a3:	75 0e                	jne    f01016b3 <strtol+0x28>$/;"	l
f01016a5	obj/kern/kernel.asm	/^f01016a5:	83 c2 01             	add    $0x1,%edx$/;"	l
f01016a8	obj/kern/kernel.asm	/^f01016a8:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f01016ab	obj/kern/kernel.asm	/^f01016ab:	3c 20                	cmp    $0x20,%al$/;"	l
f01016ad	obj/kern/kernel.asm	/^f01016ad:	74 f6                	je     f01016a5 <strtol+0x1a>$/;"	l
f01016af	obj/kern/kernel.asm	/^f01016af:	3c 09                	cmp    $0x9,%al$/;"	l
f01016b1	obj/kern/kernel.asm	/^f01016b1:	74 f2                	je     f01016a5 <strtol+0x1a>$/;"	l
f01016b3	obj/kern/kernel.asm	/^f01016b3:	3c 2b                	cmp    $0x2b,%al$/;"	l
f01016b5	obj/kern/kernel.asm	/^f01016b5:	75 0c                	jne    f01016c3 <strtol+0x38>$/;"	l
f01016b7	obj/kern/kernel.asm	/^f01016b7:	83 c2 01             	add    $0x1,%edx$/;"	l
f01016ba	obj/kern/kernel.asm	/^f01016ba:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
f01016c1	obj/kern/kernel.asm	/^f01016c1:	eb 15                	jmp    f01016d8 <strtol+0x4d>$/;"	l
f01016c3	obj/kern/kernel.asm	/^f01016c3:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
f01016ca	obj/kern/kernel.asm	/^f01016ca:	3c 2d                	cmp    $0x2d,%al$/;"	l
f01016cc	obj/kern/kernel.asm	/^f01016cc:	75 0a                	jne    f01016d8 <strtol+0x4d>$/;"	l
f01016ce	obj/kern/kernel.asm	/^f01016ce:	83 c2 01             	add    $0x1,%edx$/;"	l
f01016d1	obj/kern/kernel.asm	/^f01016d1:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
f01016d8	obj/kern/kernel.asm	/^f01016d8:	85 db                	test   %ebx,%ebx$/;"	l
f01016da	obj/kern/kernel.asm	/^f01016da:	0f 94 c0             	sete   %al$/;"	l
f01016dd	obj/kern/kernel.asm	/^f01016dd:	74 05                	je     f01016e4 <strtol+0x59>$/;"	l
f01016df	obj/kern/kernel.asm	/^f01016df:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f01016e2	obj/kern/kernel.asm	/^f01016e2:	75 18                	jne    f01016fc <strtol+0x71>$/;"	l
f01016e4	obj/kern/kernel.asm	/^f01016e4:	80 3a 30             	cmpb   $0x30,(%edx)$/;"	l
f01016e7	obj/kern/kernel.asm	/^f01016e7:	75 13                	jne    f01016fc <strtol+0x71>$/;"	l
f01016e9	obj/kern/kernel.asm	/^f01016e9:	80 7a 01 78          	cmpb   $0x78,0x1(%edx)$/;"	l
f01016ed	obj/kern/kernel.asm	/^f01016ed:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01016f0	obj/kern/kernel.asm	/^f01016f0:	75 0a                	jne    f01016fc <strtol+0x71>$/;"	l
f01016f2	obj/kern/kernel.asm	/^f01016f2:	83 c2 02             	add    $0x2,%edx$/;"	l
f01016f5	obj/kern/kernel.asm	/^f01016f5:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f01016fa	obj/kern/kernel.asm	/^f01016fa:	eb 15                	jmp    f0101711 <strtol+0x86>$/;"	l
f01016fc	obj/kern/kernel.asm	/^f01016fc:	84 c0                	test   %al,%al$/;"	l
f01016fe	obj/kern/kernel.asm	/^f01016fe:	66 90                	xchg   %ax,%ax$/;"	l
f0101700	obj/kern/kernel.asm	/^f0101700:	74 0f                	je     f0101711 <strtol+0x86>$/;"	l
f0101702	obj/kern/kernel.asm	/^f0101702:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f0101707	obj/kern/kernel.asm	/^f0101707:	80 3a 30             	cmpb   $0x30,(%edx)$/;"	l
f010170a	obj/kern/kernel.asm	/^f010170a:	75 05                	jne    f0101711 <strtol+0x86>$/;"	l
f010170c	obj/kern/kernel.asm	/^f010170c:	83 c2 01             	add    $0x1,%edx$/;"	l
f010170f	obj/kern/kernel.asm	/^f010170f:	b3 08                	mov    $0x8,%bl$/;"	l
f0101711	obj/kern/kernel.asm	/^f0101711:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101716	obj/kern/kernel.asm	/^f0101716:	89 de                	mov    %ebx,%esi$/;"	l
f0101718	obj/kern/kernel.asm	/^f0101718:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f010171b	obj/kern/kernel.asm	/^f010171b:	89 cf                	mov    %ecx,%edi$/;"	l
f010171d	obj/kern/kernel.asm	/^f010171d:	8d 59 d0             	lea    -0x30(%ecx),%ebx$/;"	l
f0101720	obj/kern/kernel.asm	/^f0101720:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f0101723	obj/kern/kernel.asm	/^f0101723:	77 08                	ja     f010172d <strtol+0xa2>$/;"	l
f0101725	obj/kern/kernel.asm	/^f0101725:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0101728	obj/kern/kernel.asm	/^f0101728:	83 e9 30             	sub    $0x30,%ecx$/;"	l
f010172b	obj/kern/kernel.asm	/^f010172b:	eb 1e                	jmp    f010174b <strtol+0xc0>$/;"	l
f010172d	obj/kern/kernel.asm	/^f010172d:	8d 5f 9f             	lea    -0x61(%edi),%ebx$/;"	l
f0101730	obj/kern/kernel.asm	/^f0101730:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0101733	obj/kern/kernel.asm	/^f0101733:	77 08                	ja     f010173d <strtol+0xb2>$/;"	l
f0101735	obj/kern/kernel.asm	/^f0101735:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0101738	obj/kern/kernel.asm	/^f0101738:	83 e9 57             	sub    $0x57,%ecx$/;"	l
f010173b	obj/kern/kernel.asm	/^f010173b:	eb 0e                	jmp    f010174b <strtol+0xc0>$/;"	l
f010173d	obj/kern/kernel.asm	/^f010173d:	8d 5f bf             	lea    -0x41(%edi),%ebx$/;"	l
f0101740	obj/kern/kernel.asm	/^f0101740:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0101743	obj/kern/kernel.asm	/^f0101743:	77 15                	ja     f010175a <strtol+0xcf>$/;"	l
f0101745	obj/kern/kernel.asm	/^f0101745:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0101748	obj/kern/kernel.asm	/^f0101748:	83 e9 37             	sub    $0x37,%ecx$/;"	l
f010174b	obj/kern/kernel.asm	/^f010174b:	39 f1                	cmp    %esi,%ecx$/;"	l
f010174d	obj/kern/kernel.asm	/^f010174d:	7d 0b                	jge    f010175a <strtol+0xcf>$/;"	l
f010174f	obj/kern/kernel.asm	/^f010174f:	83 c2 01             	add    $0x1,%edx$/;"	l
f0101752	obj/kern/kernel.asm	/^f0101752:	0f af c6             	imul   %esi,%eax$/;"	l
f0101755	obj/kern/kernel.asm	/^f0101755:	8d 04 01             	lea    (%ecx,%eax,1),%eax$/;"	l
f0101758	obj/kern/kernel.asm	/^f0101758:	eb be                	jmp    f0101718 <strtol+0x8d>$/;"	l
f010175a	obj/kern/kernel.asm	/^f010175a:	89 c1                	mov    %eax,%ecx$/;"	l
f010175c	obj/kern/kernel.asm	/^f010175c:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0101760	obj/kern/kernel.asm	/^f0101760:	74 05                	je     f0101767 <strtol+0xdc>$/;"	l
f0101762	obj/kern/kernel.asm	/^f0101762:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0101765	obj/kern/kernel.asm	/^f0101765:	89 13                	mov    %edx,(%ebx)$/;"	l
f0101767	obj/kern/kernel.asm	/^f0101767:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f010176b	obj/kern/kernel.asm	/^f010176b:	74 04                	je     f0101771 <strtol+0xe6>$/;"	l
f010176d	obj/kern/kernel.asm	/^f010176d:	89 c8                	mov    %ecx,%eax$/;"	l
f010176f	obj/kern/kernel.asm	/^f010176f:	f7 d8                	neg    %eax$/;"	l
f0101771	obj/kern/kernel.asm	/^f0101771:	83 c4 04             	add    $0x4,%esp$/;"	l
f0101774	obj/kern/kernel.asm	/^f0101774:	5b                   	pop    %ebx$/;"	l
f0101775	obj/kern/kernel.asm	/^f0101775:	5e                   	pop    %esi$/;"	l
f0101776	obj/kern/kernel.asm	/^f0101776:	5f                   	pop    %edi$/;"	l
f0101777	obj/kern/kernel.asm	/^f0101777:	5d                   	pop    %ebp$/;"	l
f0101778	obj/kern/kernel.asm	/^f0101778:	c3                   	ret    $/;"	l
f0101779	obj/kern/kernel.asm	/^f0101779:	00 00                	add    %al,(%eax)$/;"	l
f010177b	obj/kern/kernel.asm	/^f010177b:	00 00                	add    %al,(%eax)$/;"	l
f010177d	obj/kern/kernel.asm	/^f010177d:	00 00                	add    %al,(%eax)$/;"	l
f0101780	obj/kern/kernel.asm	/^f0101780 <__udivdi3>:$/;"	l
f0101780	obj/kern/kernel.asm	/^f0101780:	55                   	push   %ebp$/;"	l
f0101781	obj/kern/kernel.asm	/^f0101781:	89 e5                	mov    %esp,%ebp$/;"	l
f0101783	obj/kern/kernel.asm	/^f0101783:	57                   	push   %edi$/;"	l
f0101784	obj/kern/kernel.asm	/^f0101784:	56                   	push   %esi$/;"	l
f0101785	obj/kern/kernel.asm	/^f0101785:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0101788	obj/kern/kernel.asm	/^f0101788:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010178b	obj/kern/kernel.asm	/^f010178b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010178e	obj/kern/kernel.asm	/^f010178e:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0101791	obj/kern/kernel.asm	/^f0101791:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0101794	obj/kern/kernel.asm	/^f0101794:	85 c0                	test   %eax,%eax$/;"	l
f0101796	obj/kern/kernel.asm	/^f0101796:	89 55 f0             	mov    %edx,-0x10(%ebp)$/;"	l
f0101799	obj/kern/kernel.asm	/^f0101799:	75 35                	jne    f01017d0 <__udivdi3+0x50>$/;"	l
f010179b	obj/kern/kernel.asm	/^f010179b:	39 fe                	cmp    %edi,%esi$/;"	l
f010179d	obj/kern/kernel.asm	/^f010179d:	77 61                	ja     f0101800 <__udivdi3+0x80>$/;"	l
f010179f	obj/kern/kernel.asm	/^f010179f:	85 f6                	test   %esi,%esi$/;"	l
f01017a1	obj/kern/kernel.asm	/^f01017a1:	75 0b                	jne    f01017ae <__udivdi3+0x2e>$/;"	l
f01017a3	obj/kern/kernel.asm	/^f01017a3:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01017a8	obj/kern/kernel.asm	/^f01017a8:	31 d2                	xor    %edx,%edx$/;"	l
f01017aa	obj/kern/kernel.asm	/^f01017aa:	f7 f6                	div    %esi$/;"	l
f01017ac	obj/kern/kernel.asm	/^f01017ac:	89 c6                	mov    %eax,%esi$/;"	l
f01017ae	obj/kern/kernel.asm	/^f01017ae:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
f01017b1	obj/kern/kernel.asm	/^f01017b1:	31 d2                	xor    %edx,%edx$/;"	l
f01017b3	obj/kern/kernel.asm	/^f01017b3:	89 f8                	mov    %edi,%eax$/;"	l
f01017b5	obj/kern/kernel.asm	/^f01017b5:	f7 f6                	div    %esi$/;"	l
f01017b7	obj/kern/kernel.asm	/^f01017b7:	89 c7                	mov    %eax,%edi$/;"	l
f01017b9	obj/kern/kernel.asm	/^f01017b9:	89 c8                	mov    %ecx,%eax$/;"	l
f01017bb	obj/kern/kernel.asm	/^f01017bb:	f7 f6                	div    %esi$/;"	l
f01017bd	obj/kern/kernel.asm	/^f01017bd:	89 c1                	mov    %eax,%ecx$/;"	l
f01017bf	obj/kern/kernel.asm	/^f01017bf:	89 fa                	mov    %edi,%edx$/;"	l
f01017c1	obj/kern/kernel.asm	/^f01017c1:	89 c8                	mov    %ecx,%eax$/;"	l
f01017c3	obj/kern/kernel.asm	/^f01017c3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01017c6	obj/kern/kernel.asm	/^f01017c6:	5e                   	pop    %esi$/;"	l
f01017c7	obj/kern/kernel.asm	/^f01017c7:	5f                   	pop    %edi$/;"	l
f01017c8	obj/kern/kernel.asm	/^f01017c8:	5d                   	pop    %ebp$/;"	l
f01017c9	obj/kern/kernel.asm	/^f01017c9:	c3                   	ret    $/;"	l
f01017ca	obj/kern/kernel.asm	/^f01017ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f01017d0	obj/kern/kernel.asm	/^f01017d0:	39 f8                	cmp    %edi,%eax$/;"	l
f01017d2	obj/kern/kernel.asm	/^f01017d2:	77 1c                	ja     f01017f0 <__udivdi3+0x70>$/;"	l
f01017d4	obj/kern/kernel.asm	/^f01017d4:	0f bd d0             	bsr    %eax,%edx$/;"	l
f01017d7	obj/kern/kernel.asm	/^f01017d7:	83 f2 1f             	xor    $0x1f,%edx$/;"	l
f01017da	obj/kern/kernel.asm	/^f01017da:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f01017dd	obj/kern/kernel.asm	/^f01017dd:	75 39                	jne    f0101818 <__udivdi3+0x98>$/;"	l
f01017df	obj/kern/kernel.asm	/^f01017df:	3b 75 f0             	cmp    -0x10(%ebp),%esi$/;"	l
f01017e2	obj/kern/kernel.asm	/^f01017e2:	0f 86 a0 00 00 00    	jbe    f0101888 <__udivdi3+0x108>$/;"	l
f01017e8	obj/kern/kernel.asm	/^f01017e8:	39 f8                	cmp    %edi,%eax$/;"	l
f01017ea	obj/kern/kernel.asm	/^f01017ea:	0f 82 98 00 00 00    	jb     f0101888 <__udivdi3+0x108>$/;"	l
f01017f0	obj/kern/kernel.asm	/^f01017f0:	31 ff                	xor    %edi,%edi$/;"	l
f01017f2	obj/kern/kernel.asm	/^f01017f2:	31 c9                	xor    %ecx,%ecx$/;"	l
f01017f4	obj/kern/kernel.asm	/^f01017f4:	89 c8                	mov    %ecx,%eax$/;"	l
f01017f6	obj/kern/kernel.asm	/^f01017f6:	89 fa                	mov    %edi,%edx$/;"	l
f01017f8	obj/kern/kernel.asm	/^f01017f8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01017fb	obj/kern/kernel.asm	/^f01017fb:	5e                   	pop    %esi$/;"	l
f01017fc	obj/kern/kernel.asm	/^f01017fc:	5f                   	pop    %edi$/;"	l
f01017fd	obj/kern/kernel.asm	/^f01017fd:	5d                   	pop    %ebp$/;"	l
f01017fe	obj/kern/kernel.asm	/^f01017fe:	c3                   	ret    $/;"	l
f01017ff	obj/kern/kernel.asm	/^f01017ff:	90                   	nop$/;"	l
f0101800	obj/kern/kernel.asm	/^f0101800:	89 d1                	mov    %edx,%ecx$/;"	l
f0101802	obj/kern/kernel.asm	/^f0101802:	89 fa                	mov    %edi,%edx$/;"	l
f0101804	obj/kern/kernel.asm	/^f0101804:	89 c8                	mov    %ecx,%eax$/;"	l
f0101806	obj/kern/kernel.asm	/^f0101806:	31 ff                	xor    %edi,%edi$/;"	l
f0101808	obj/kern/kernel.asm	/^f0101808:	f7 f6                	div    %esi$/;"	l
f010180a	obj/kern/kernel.asm	/^f010180a:	89 c1                	mov    %eax,%ecx$/;"	l
f010180c	obj/kern/kernel.asm	/^f010180c:	89 fa                	mov    %edi,%edx$/;"	l
f010180e	obj/kern/kernel.asm	/^f010180e:	89 c8                	mov    %ecx,%eax$/;"	l
f0101810	obj/kern/kernel.asm	/^f0101810:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101813	obj/kern/kernel.asm	/^f0101813:	5e                   	pop    %esi$/;"	l
f0101814	obj/kern/kernel.asm	/^f0101814:	5f                   	pop    %edi$/;"	l
f0101815	obj/kern/kernel.asm	/^f0101815:	5d                   	pop    %ebp$/;"	l
f0101816	obj/kern/kernel.asm	/^f0101816:	c3                   	ret    $/;"	l
f0101817	obj/kern/kernel.asm	/^f0101817:	90                   	nop$/;"	l
f0101818	obj/kern/kernel.asm	/^f0101818:	0f b6 4d f4          	movzbl -0xc(%ebp),%ecx$/;"	l
f010181c	obj/kern/kernel.asm	/^f010181c:	89 f2                	mov    %esi,%edx$/;"	l
f010181e	obj/kern/kernel.asm	/^f010181e:	d3 e0                	shl    %cl,%eax$/;"	d
f0101820	obj/kern/kernel.asm	/^f0101820:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0101823	obj/kern/kernel.asm	/^f0101823:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0101828	obj/kern/kernel.asm	/^f0101828:	2b 45 f4             	sub    -0xc(%ebp),%eax$/;"	l
f010182b	obj/kern/kernel.asm	/^f010182b:	89 c1                	mov    %eax,%ecx$/;"	l
f010182d	obj/kern/kernel.asm	/^f010182d:	d3 ea                	shr    %cl,%edx$/;"	d
f010182f	obj/kern/kernel.asm	/^f010182f:	0f b6 4d f4          	movzbl -0xc(%ebp),%ecx$/;"	l
f0101833	obj/kern/kernel.asm	/^f0101833:	0b 55 ec             	or     -0x14(%ebp),%edx$/;"	l
f0101836	obj/kern/kernel.asm	/^f0101836:	d3 e6                	shl    %cl,%esi$/;"	d
f0101838	obj/kern/kernel.asm	/^f0101838:	89 c1                	mov    %eax,%ecx$/;"	l
f010183a	obj/kern/kernel.asm	/^f010183a:	89 75 e8             	mov    %esi,-0x18(%ebp)$/;"	l
f010183d	obj/kern/kernel.asm	/^f010183d:	89 fe                	mov    %edi,%esi$/;"	l
f010183f	obj/kern/kernel.asm	/^f010183f:	d3 ee                	shr    %cl,%esi$/;"	d
f0101841	obj/kern/kernel.asm	/^f0101841:	0f b6 4d f4          	movzbl -0xc(%ebp),%ecx$/;"	l
f0101845	obj/kern/kernel.asm	/^f0101845:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
f0101848	obj/kern/kernel.asm	/^f0101848:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f010184b	obj/kern/kernel.asm	/^f010184b:	d3 e7                	shl    %cl,%edi$/;"	d
f010184d	obj/kern/kernel.asm	/^f010184d:	89 c1                	mov    %eax,%ecx$/;"	l
f010184f	obj/kern/kernel.asm	/^f010184f:	d3 ea                	shr    %cl,%edx$/;"	d
f0101851	obj/kern/kernel.asm	/^f0101851:	09 d7                	or     %edx,%edi$/;"	l
f0101853	obj/kern/kernel.asm	/^f0101853:	89 f2                	mov    %esi,%edx$/;"	l
f0101855	obj/kern/kernel.asm	/^f0101855:	89 f8                	mov    %edi,%eax$/;"	l
f0101857	obj/kern/kernel.asm	/^f0101857:	f7 75 ec             	divl   -0x14(%ebp)$/;"	l
f010185a	obj/kern/kernel.asm	/^f010185a:	89 d6                	mov    %edx,%esi$/;"	l
f010185c	obj/kern/kernel.asm	/^f010185c:	89 c7                	mov    %eax,%edi$/;"	l
f010185e	obj/kern/kernel.asm	/^f010185e:	f7 65 e8             	mull   -0x18(%ebp)$/;"	l
f0101861	obj/kern/kernel.asm	/^f0101861:	39 d6                	cmp    %edx,%esi$/;"	l
f0101863	obj/kern/kernel.asm	/^f0101863:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
f0101866	obj/kern/kernel.asm	/^f0101866:	72 30                	jb     f0101898 <__udivdi3+0x118>$/;"	l
f0101868	obj/kern/kernel.asm	/^f0101868:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f010186b	obj/kern/kernel.asm	/^f010186b:	0f b6 4d f4          	movzbl -0xc(%ebp),%ecx$/;"	l
f010186f	obj/kern/kernel.asm	/^f010186f:	d3 e2                	shl    %cl,%edx$/;"	d
f0101871	obj/kern/kernel.asm	/^f0101871:	39 c2                	cmp    %eax,%edx$/;"	l
f0101873	obj/kern/kernel.asm	/^f0101873:	73 05                	jae    f010187a <__udivdi3+0xfa>$/;"	l
f0101875	obj/kern/kernel.asm	/^f0101875:	3b 75 ec             	cmp    -0x14(%ebp),%esi$/;"	l
f0101878	obj/kern/kernel.asm	/^f0101878:	74 1e                	je     f0101898 <__udivdi3+0x118>$/;"	l
f010187a	obj/kern/kernel.asm	/^f010187a:	89 f9                	mov    %edi,%ecx$/;"	l
f010187c	obj/kern/kernel.asm	/^f010187c:	31 ff                	xor    %edi,%edi$/;"	l
f010187e	obj/kern/kernel.asm	/^f010187e:	e9 71 ff ff ff       	jmp    f01017f4 <__udivdi3+0x74>$/;"	l
f0101883	obj/kern/kernel.asm	/^f0101883:	90                   	nop$/;"	l
f0101884	obj/kern/kernel.asm	/^f0101884:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0101888	obj/kern/kernel.asm	/^f0101888:	31 ff                	xor    %edi,%edi$/;"	l
f010188a	obj/kern/kernel.asm	/^f010188a:	b9 01 00 00 00       	mov    $0x1,%ecx$/;"	l
f010188f	obj/kern/kernel.asm	/^f010188f:	e9 60 ff ff ff       	jmp    f01017f4 <__udivdi3+0x74>$/;"	l
f0101894	obj/kern/kernel.asm	/^f0101894:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0101898	obj/kern/kernel.asm	/^f0101898:	8d 4f ff             	lea    -0x1(%edi),%ecx$/;"	l
f010189b	obj/kern/kernel.asm	/^f010189b:	31 ff                	xor    %edi,%edi$/;"	l
f010189d	obj/kern/kernel.asm	/^f010189d:	89 c8                	mov    %ecx,%eax$/;"	l
f010189f	obj/kern/kernel.asm	/^f010189f:	89 fa                	mov    %edi,%edx$/;"	l
f01018a1	obj/kern/kernel.asm	/^f01018a1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01018a4	obj/kern/kernel.asm	/^f01018a4:	5e                   	pop    %esi$/;"	l
f01018a5	obj/kern/kernel.asm	/^f01018a5:	5f                   	pop    %edi$/;"	l
f01018a6	obj/kern/kernel.asm	/^f01018a6:	5d                   	pop    %ebp$/;"	l
f01018a7	obj/kern/kernel.asm	/^f01018a7:	c3                   	ret    $/;"	l
f01018b0	obj/kern/kernel.asm	/^f01018b0 <__umoddi3>:$/;"	l
f01018b0	obj/kern/kernel.asm	/^f01018b0:	55                   	push   %ebp$/;"	l
f01018b1	obj/kern/kernel.asm	/^f01018b1:	89 e5                	mov    %esp,%ebp$/;"	l
f01018b3	obj/kern/kernel.asm	/^f01018b3:	57                   	push   %edi$/;"	l
f01018b4	obj/kern/kernel.asm	/^f01018b4:	56                   	push   %esi$/;"	l
f01018b5	obj/kern/kernel.asm	/^f01018b5:	83 ec 20             	sub    $0x20,%esp$/;"	l
f01018b8	obj/kern/kernel.asm	/^f01018b8:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f01018bb	obj/kern/kernel.asm	/^f01018bb:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01018be	obj/kern/kernel.asm	/^f01018be:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f01018c1	obj/kern/kernel.asm	/^f01018c1:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01018c4	obj/kern/kernel.asm	/^f01018c4:	85 d2                	test   %edx,%edx$/;"	l
f01018c6	obj/kern/kernel.asm	/^f01018c6:	89 c8                	mov    %ecx,%eax$/;"	l
f01018c8	obj/kern/kernel.asm	/^f01018c8:	89 4d f4             	mov    %ecx,-0xc(%ebp)$/;"	l
f01018cb	obj/kern/kernel.asm	/^f01018cb:	75 13                	jne    f01018e0 <__umoddi3+0x30>$/;"	l
f01018cd	obj/kern/kernel.asm	/^f01018cd:	39 f7                	cmp    %esi,%edi$/;"	l
f01018cf	obj/kern/kernel.asm	/^f01018cf:	76 3f                	jbe    f0101910 <__umoddi3+0x60>$/;"	l
f01018d1	obj/kern/kernel.asm	/^f01018d1:	89 f2                	mov    %esi,%edx$/;"	l
f01018d3	obj/kern/kernel.asm	/^f01018d3:	f7 f7                	div    %edi$/;"	l
f01018d5	obj/kern/kernel.asm	/^f01018d5:	89 d0                	mov    %edx,%eax$/;"	l
f01018d7	obj/kern/kernel.asm	/^f01018d7:	31 d2                	xor    %edx,%edx$/;"	l
f01018d9	obj/kern/kernel.asm	/^f01018d9:	83 c4 20             	add    $0x20,%esp$/;"	l
f01018dc	obj/kern/kernel.asm	/^f01018dc:	5e                   	pop    %esi$/;"	l
f01018dd	obj/kern/kernel.asm	/^f01018dd:	5f                   	pop    %edi$/;"	l
f01018de	obj/kern/kernel.asm	/^f01018de:	5d                   	pop    %ebp$/;"	l
f01018df	obj/kern/kernel.asm	/^f01018df:	c3                   	ret    $/;"	l
f01018e0	obj/kern/kernel.asm	/^f01018e0:	39 f2                	cmp    %esi,%edx$/;"	l
f01018e2	obj/kern/kernel.asm	/^f01018e2:	77 4c                	ja     f0101930 <__umoddi3+0x80>$/;"	l
f01018e4	obj/kern/kernel.asm	/^f01018e4:	0f bd ca             	bsr    %edx,%ecx$/;"	l
f01018e7	obj/kern/kernel.asm	/^f01018e7:	83 f1 1f             	xor    $0x1f,%ecx$/;"	l
f01018ea	obj/kern/kernel.asm	/^f01018ea:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f01018ed	obj/kern/kernel.asm	/^f01018ed:	75 51                	jne    f0101940 <__umoddi3+0x90>$/;"	l
f01018ef	obj/kern/kernel.asm	/^f01018ef:	3b 7d f4             	cmp    -0xc(%ebp),%edi$/;"	l
f01018f2	obj/kern/kernel.asm	/^f01018f2:	0f 87 e0 00 00 00    	ja     f01019d8 <__umoddi3+0x128>$/;"	l
f01018f8	obj/kern/kernel.asm	/^f01018f8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01018fb	obj/kern/kernel.asm	/^f01018fb:	29 f8                	sub    %edi,%eax$/;"	l
f01018fd	obj/kern/kernel.asm	/^f01018fd:	19 d6                	sbb    %edx,%esi$/;"	l
f01018ff	obj/kern/kernel.asm	/^f01018ff:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0101902	obj/kern/kernel.asm	/^f0101902:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101905	obj/kern/kernel.asm	/^f0101905:	89 f2                	mov    %esi,%edx$/;"	l
f0101907	obj/kern/kernel.asm	/^f0101907:	83 c4 20             	add    $0x20,%esp$/;"	l
f010190a	obj/kern/kernel.asm	/^f010190a:	5e                   	pop    %esi$/;"	l
f010190b	obj/kern/kernel.asm	/^f010190b:	5f                   	pop    %edi$/;"	l
f010190c	obj/kern/kernel.asm	/^f010190c:	5d                   	pop    %ebp$/;"	l
f010190d	obj/kern/kernel.asm	/^f010190d:	c3                   	ret    $/;"	l
f010190e	obj/kern/kernel.asm	/^f010190e:	66 90                	xchg   %ax,%ax$/;"	l
f0101910	obj/kern/kernel.asm	/^f0101910:	85 ff                	test   %edi,%edi$/;"	l
f0101912	obj/kern/kernel.asm	/^f0101912:	75 0b                	jne    f010191f <__umoddi3+0x6f>$/;"	l
f0101914	obj/kern/kernel.asm	/^f0101914:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101919	obj/kern/kernel.asm	/^f0101919:	31 d2                	xor    %edx,%edx$/;"	l
f010191b	obj/kern/kernel.asm	/^f010191b:	f7 f7                	div    %edi$/;"	l
f010191d	obj/kern/kernel.asm	/^f010191d:	89 c7                	mov    %eax,%edi$/;"	l
f010191f	obj/kern/kernel.asm	/^f010191f:	89 f0                	mov    %esi,%eax$/;"	l
f0101921	obj/kern/kernel.asm	/^f0101921:	31 d2                	xor    %edx,%edx$/;"	l
f0101923	obj/kern/kernel.asm	/^f0101923:	f7 f7                	div    %edi$/;"	l
f0101925	obj/kern/kernel.asm	/^f0101925:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101928	obj/kern/kernel.asm	/^f0101928:	f7 f7                	div    %edi$/;"	l
f010192a	obj/kern/kernel.asm	/^f010192a:	eb a9                	jmp    f01018d5 <__umoddi3+0x25>$/;"	l
f010192c	obj/kern/kernel.asm	/^f010192c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0101930	obj/kern/kernel.asm	/^f0101930:	89 c8                	mov    %ecx,%eax$/;"	l
f0101932	obj/kern/kernel.asm	/^f0101932:	89 f2                	mov    %esi,%edx$/;"	l
f0101934	obj/kern/kernel.asm	/^f0101934:	83 c4 20             	add    $0x20,%esp$/;"	l
f0101937	obj/kern/kernel.asm	/^f0101937:	5e                   	pop    %esi$/;"	l
f0101938	obj/kern/kernel.asm	/^f0101938:	5f                   	pop    %edi$/;"	l
f0101939	obj/kern/kernel.asm	/^f0101939:	5d                   	pop    %ebp$/;"	l
f010193a	obj/kern/kernel.asm	/^f010193a:	c3                   	ret    $/;"	l
f010193b	obj/kern/kernel.asm	/^f010193b:	90                   	nop$/;"	l
f010193c	obj/kern/kernel.asm	/^f010193c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0101940	obj/kern/kernel.asm	/^f0101940:	0f b6 4d f0          	movzbl -0x10(%ebp),%ecx$/;"	l
f0101944	obj/kern/kernel.asm	/^f0101944:	d3 e2                	shl    %cl,%edx$/;"	d
f0101946	obj/kern/kernel.asm	/^f0101946:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f0101949	obj/kern/kernel.asm	/^f0101949:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f010194e	obj/kern/kernel.asm	/^f010194e:	2b 55 f0             	sub    -0x10(%ebp),%edx$/;"	l
f0101951	obj/kern/kernel.asm	/^f0101951:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
f0101954	obj/kern/kernel.asm	/^f0101954:	0f b6 4d ec          	movzbl -0x14(%ebp),%ecx$/;"	l
f0101958	obj/kern/kernel.asm	/^f0101958:	89 fa                	mov    %edi,%edx$/;"	l
f010195a	obj/kern/kernel.asm	/^f010195a:	d3 ea                	shr    %cl,%edx$/;"	d
f010195c	obj/kern/kernel.asm	/^f010195c:	0f b6 4d f0          	movzbl -0x10(%ebp),%ecx$/;"	l
f0101960	obj/kern/kernel.asm	/^f0101960:	0b 55 f4             	or     -0xc(%ebp),%edx$/;"	l
f0101963	obj/kern/kernel.asm	/^f0101963:	d3 e7                	shl    %cl,%edi$/;"	d
f0101965	obj/kern/kernel.asm	/^f0101965:	0f b6 4d ec          	movzbl -0x14(%ebp),%ecx$/;"	l
f0101969	obj/kern/kernel.asm	/^f0101969:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f010196c	obj/kern/kernel.asm	/^f010196c:	89 f2                	mov    %esi,%edx$/;"	l
f010196e	obj/kern/kernel.asm	/^f010196e:	89 7d e8             	mov    %edi,-0x18(%ebp)$/;"	l
f0101971	obj/kern/kernel.asm	/^f0101971:	89 c7                	mov    %eax,%edi$/;"	l
f0101973	obj/kern/kernel.asm	/^f0101973:	d3 ea                	shr    %cl,%edx$/;"	d
f0101975	obj/kern/kernel.asm	/^f0101975:	0f b6 4d f0          	movzbl -0x10(%ebp),%ecx$/;"	l
f0101979	obj/kern/kernel.asm	/^f0101979:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f010197c	obj/kern/kernel.asm	/^f010197c:	89 c2                	mov    %eax,%edx$/;"	l
f010197e	obj/kern/kernel.asm	/^f010197e:	d3 e6                	shl    %cl,%esi$/;"	d
f0101980	obj/kern/kernel.asm	/^f0101980:	0f b6 4d ec          	movzbl -0x14(%ebp),%ecx$/;"	l
f0101984	obj/kern/kernel.asm	/^f0101984:	d3 ea                	shr    %cl,%edx$/;"	d
f0101986	obj/kern/kernel.asm	/^f0101986:	0f b6 4d f0          	movzbl -0x10(%ebp),%ecx$/;"	l
f010198a	obj/kern/kernel.asm	/^f010198a:	09 d6                	or     %edx,%esi$/;"	l
f010198c	obj/kern/kernel.asm	/^f010198c:	89 f0                	mov    %esi,%eax$/;"	l
f010198e	obj/kern/kernel.asm	/^f010198e:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0101991	obj/kern/kernel.asm	/^f0101991:	d3 e7                	shl    %cl,%edi$/;"	d
f0101993	obj/kern/kernel.asm	/^f0101993:	89 f2                	mov    %esi,%edx$/;"	l
f0101995	obj/kern/kernel.asm	/^f0101995:	f7 75 f4             	divl   -0xc(%ebp)$/;"	l
f0101998	obj/kern/kernel.asm	/^f0101998:	89 d6                	mov    %edx,%esi$/;"	l
f010199a	obj/kern/kernel.asm	/^f010199a:	f7 65 e8             	mull   -0x18(%ebp)$/;"	l
f010199d	obj/kern/kernel.asm	/^f010199d:	39 d6                	cmp    %edx,%esi$/;"	l
f010199f	obj/kern/kernel.asm	/^f010199f:	72 2b                	jb     f01019cc <__umoddi3+0x11c>$/;"	l
f01019a1	obj/kern/kernel.asm	/^f01019a1:	39 c7                	cmp    %eax,%edi$/;"	l
f01019a3	obj/kern/kernel.asm	/^f01019a3:	72 23                	jb     f01019c8 <__umoddi3+0x118>$/;"	l
f01019a5	obj/kern/kernel.asm	/^f01019a5:	0f b6 4d f0          	movzbl -0x10(%ebp),%ecx$/;"	l
f01019a9	obj/kern/kernel.asm	/^f01019a9:	29 c7                	sub    %eax,%edi$/;"	l
f01019ab	obj/kern/kernel.asm	/^f01019ab:	19 d6                	sbb    %edx,%esi$/;"	l
f01019ad	obj/kern/kernel.asm	/^f01019ad:	89 f0                	mov    %esi,%eax$/;"	l
f01019af	obj/kern/kernel.asm	/^f01019af:	89 f2                	mov    %esi,%edx$/;"	l
f01019b1	obj/kern/kernel.asm	/^f01019b1:	d3 ef                	shr    %cl,%edi$/;"	d
f01019b3	obj/kern/kernel.asm	/^f01019b3:	0f b6 4d ec          	movzbl -0x14(%ebp),%ecx$/;"	l
f01019b7	obj/kern/kernel.asm	/^f01019b7:	d3 e0                	shl    %cl,%eax$/;"	d
f01019b9	obj/kern/kernel.asm	/^f01019b9:	0f b6 4d f0          	movzbl -0x10(%ebp),%ecx$/;"	l
f01019bd	obj/kern/kernel.asm	/^f01019bd:	09 f8                	or     %edi,%eax$/;"	l
f01019bf	obj/kern/kernel.asm	/^f01019bf:	d3 ea                	shr    %cl,%edx$/;"	d
f01019c1	obj/kern/kernel.asm	/^f01019c1:	83 c4 20             	add    $0x20,%esp$/;"	l
f01019c4	obj/kern/kernel.asm	/^f01019c4:	5e                   	pop    %esi$/;"	l
f01019c5	obj/kern/kernel.asm	/^f01019c5:	5f                   	pop    %edi$/;"	l
f01019c6	obj/kern/kernel.asm	/^f01019c6:	5d                   	pop    %ebp$/;"	l
f01019c7	obj/kern/kernel.asm	/^f01019c7:	c3                   	ret    $/;"	l
f01019c8	obj/kern/kernel.asm	/^f01019c8:	39 d6                	cmp    %edx,%esi$/;"	l
f01019ca	obj/kern/kernel.asm	/^f01019ca:	75 d9                	jne    f01019a5 <__umoddi3+0xf5>$/;"	l
f01019cc	obj/kern/kernel.asm	/^f01019cc:	2b 45 e8             	sub    -0x18(%ebp),%eax$/;"	l
f01019cf	obj/kern/kernel.asm	/^f01019cf:	1b 55 f4             	sbb    -0xc(%ebp),%edx$/;"	l
f01019d2	obj/kern/kernel.asm	/^f01019d2:	eb d1                	jmp    f01019a5 <__umoddi3+0xf5>$/;"	l
f01019d4	obj/kern/kernel.asm	/^f01019d4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01019d8	obj/kern/kernel.asm	/^f01019d8:	39 f2                	cmp    %esi,%edx$/;"	l
f01019da	obj/kern/kernel.asm	/^f01019da:	0f 82 18 ff ff ff    	jb     f01018f8 <__umoddi3+0x48>$/;"	l
f01019e0	obj/kern/kernel.asm	/^f01019e0:	e9 1d ff ff ff       	jmp    f0101902 <__umoddi3+0x52>$/;"	l
fail	grade-functions.sh	/^fail () {$/;"	f
fprintf	inc/stdio.h	/^int	fprintf(int fd, const char *fmt, ...);$/;"	p	signature:(int fd, const char *fmt, ...)
free	inc/malloc.h	/^void free(void *addr);$/;"	p	signature:(void *addr)
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:	access:public
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc	access:public
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc	access:public
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc	access:public
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc	access:public
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc	access:public
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc	access:public
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc	access:public
gd_ss	inc/mmu.h	/^	unsigned gd_ss : 16;         \/\/ segment selector$/;"	m	struct:Gatedesc	access:public
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc	access:public
gdt	boot/boot.S	/^gdt:$/;"	l
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
getchar	inc/stdio.h	/^int	getchar(void);$/;"	p	signature:(void)
getchar	kern/console.c	/^getchar(void)$/;"	f	signature:(void)
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:	signature:(va_list *ap, int lflag)
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:	signature:(va_list *ap, int lflag)
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i386_init	kern/init.c	/^i386_init(void)$/;"	f	signature:(void)
inb	inc/x86.h	/^inb(int port)$/;"	f	signature:(int port)
inb	inc/x86.h	/^static __inline uint8_t inb(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
inl	inc/x86.h	/^inl(int port)$/;"	f	signature:(int port)
inl	inc/x86.h	/^static __inline uint32_t inl(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insb	inc/x86.h	/^static __inline void insb(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insl	inc/x86.h	/^static __inline void insl(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insw	inc/x86.h	/^static __inline void insw(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
int	obj/kern/kernel.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f	signature:(void *addr)
invlpg	inc/x86.h	/^static __inline void invlpg(void *addr) __attribute__((always_inline));$/;"	p	signature:(void *addr)
inw	inc/x86.h	/^inw(int port)$/;"	f	signature:(int port)
inw	inc/x86.h	/^static __inline uint16_t inw(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
iscons	inc/stdio.h	/^int	iscons(int fd);$/;"	p	signature:(int fd)
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f	signature:(int fdnum)
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:	signature:(void)
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f	signature:(void)
kbd_intr	kern/console.h	/^void kbd_intr(void); \/\/ irq 1$/;"	p	signature:(void)
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:	signature:(void)
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr0	inc/x86.h	/^static __inline void lcr0(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr3	inc/x86.h	/^static __inline void lcr3(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr4	inc/x86.h	/^static __inline void lcr4(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lidt	inc/x86.h	/^lidt(void *p)$/;"	f	signature:(void *p)
lidt	inc/x86.h	/^static __inline void lidt(void *p) __attribute__((always_inline));$/;"	p	signature:(void *p)
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f	signature:(uint16_t sel)
lldt	inc/x86.h	/^static __inline void lldt(uint16_t sel) __attribute__((always_inline));$/;"	p	signature:(uint16_t sel)
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
long	obj/kern/kernel.asm	/^long$/;"	l
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:	signature:(int c)
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f	signature:(uint16_t sel)
ltr	inc/x86.h	/^static __inline void ltr(uint16_t sel) __attribute__((always_inline));$/;"	p	signature:(uint16_t sel)
malloc	inc/malloc.h	/^void *malloc(size_t size);$/;"	p	signature:(size_t size)
memcmp	inc/string.h	/^int	memcmp(const void *s1, const void *s2, size_t len);$/;"	p	signature:(const void *s1, const void *s2, size_t len)
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f	signature:(const void *v1, const void *v2, size_t n)
memcpy	lib/string.c	/^memcpy(void *dst, void *src, size_t n)$/;"	f	signature:(void *dst, void *src, size_t n)
memfind	inc/string.h	/^void *	memfind(const void *s, int c, size_t len);$/;"	p	signature:(const void *s, int c, size_t len)
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f	signature:(const void *s, int c, size_t n)
memmove	inc/string.h	/^void *	memmove(void *dst, const void *src, size_t len);$/;"	p	signature:(void *dst, const void *src, size_t len)
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f	signature:(void *dst, const void *src, size_t n)
memset	inc/string.h	/^void *	memset(void *dst, int c, size_t len);$/;"	p	signature:(void *dst, int c, size_t len)
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f	signature:(void *v, int c, size_t n)
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_backtrace	kern/monitor.h	/^int mon_backtrace(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_help	kern/monitor.h	/^int mon_help(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_kerninfo	kern/monitor.h	/^int mon_kerninfo(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
monitor	kern/monitor.h	/^void monitor(struct Trapframe *tf);$/;"	p	signature:(struct Trapframe *tf)
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab	access:public
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab	access:public
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab	access:public
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab	access:public
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab	access:public
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:	access:public
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/kern/kernel.asm	/^		number:$/;"	l
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offsetof	inc/types.h	70;"	d
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f	signature:(int port, uint8_t data)
outb	inc/x86.h	/^static __inline void outb(int port, uint8_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint8_t data)
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f	signature:(int port, uint32_t data)
outl	inc/x86.h	/^static __inline void outl(int port, uint32_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint32_t data)
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsb	inc/x86.h	/^static __inline void outsb(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsl	inc/x86.h	/^static __inline void outsl(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsw	inc/x86.h	/^static __inline void outsw(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f	signature:(int port, uint16_t data)
outw	inc/x86.h	/^static __inline void outw(int port, uint16_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint16_t data)
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr	access:public
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr	access:public
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr	access:public
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr	access:public
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr	access:public
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr	access:public
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr	access:public
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr	access:public
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^static const char *panicstr;$/;"	v	file:
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pass	grade-functions.sh	/^pass () {$/;"	f
passfailmsg	grade-functions.sh	/^passfailmsg () {$/;"	f
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	access:public
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	access:public
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
pp_link	inc/memlayout.h	/^	Page_LIST_entry_t pp_link;	\/* free list link *\/$/;"	m	struct:Page	access:public
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:Page	access:public
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
printf	inc/stdio.h	/^int	printf(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
printfmt	inc/stdio.h	/^void	printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	p	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printfmt	lib/printfmt.c	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	p	file:	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:	signature:(void (*putch)(int, void*), void *putdat, unsigned long long num, unsigned base, int width, int padc)
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:	signature:(int ch, int *cnt)
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f	signature:(void)
rcr0	inc/x86.h	/^static __inline uint32_t rcr0(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr2	inc/x86.h	/^rcr2(void)$/;"	f	signature:(void)
rcr2	inc/x86.h	/^static __inline uint32_t rcr2(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr3	inc/x86.h	/^rcr3(void)$/;"	f	signature:(void)
rcr3	inc/x86.h	/^static __inline uint32_t rcr3(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr4	inc/x86.h	/^rcr4(void)$/;"	f	signature:(void)
rcr4	inc/x86.h	/^static __inline uint32_t rcr4(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f	signature:(void)
read_ebp	inc/x86.h	/^static __inline uint32_t read_ebp(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f	signature:(void)
read_eflags	inc/x86.h	/^static __inline uint32_t read_eflags(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_eip	kern/monitor.c	/^read_eip()$/;"	f
read_eip	kern/monitor.c	/^unsigned read_eip();$/;"	p	file:
read_esp	inc/x86.h	/^read_esp(void)$/;"	f	signature:(void)
read_esp	inc/x86.h	/^static __inline uint32_t read_esp(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f	signature:(void)
read_tsc	inc/x86.h	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	p	signature:(void)
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	inc/stdio.h	/^char*	readline(const char *prompt);$/;"	p	signature:(const char *prompt)
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f	signature:(const char *prompt)
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f	signature:(void *dst, uint32_t offset)
readsect	boot/main.c	/^void readsect(void*, uint32_t);$/;"	p	file:	signature:(void*, uint32_t)
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f	signature:(uint32_t pa, uint32_t count, uint32_t offset)
readseg	boot/main.c	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	p	file:
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon2	file:	access:public
run	grade-functions.sh	/^run () {$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:	signature:(char *buf, struct Trapframe *tf)
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc	access:public
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc	access:public
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc	access:public
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc	access:public
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc	access:public
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc	access:public
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc	access:public
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc	access:public
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc	access:public
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc	access:public
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:	signature:(void)
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f	signature:(void)
serial_intr	kern/console.h	/^void serial_intr(void); \/\/ irq 4$/;"	p	signature:(void)
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:	signature:(void)
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:	signature:(int c)
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr	access:public
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr	access:public
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr	access:public
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr	access:public
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr	access:public
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr	access:public
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr	access:public
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr	access:public
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr	access:public
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr	access:public
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] = $/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] = $/;"	v	file:
showfinal	grade-functions.sh	/^showfinal () {$/;"	f
showpart	grade-functions.sh	/^showpart () {$/;"	f
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
snprintf	inc/stdio.h	/^int	snprintf(char *str, int size, const char *fmt, ...);$/;"	p	signature:(char *str, int size, const char *fmt, ...)
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f	signature:(char *buf, int n, const char *fmt, ...)
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintbuf::buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:	access:public
sprintbuf::cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:	access:public
sprintbuf::ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:	access:public
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:	signature:(int ch, struct sprintbuf *b)
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:	signature:(const struct Stab *stabs, int *region_left, int *region_right, int type, uintptr_t addr)
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
static	obj/boot/boot.asm	/^static __inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void cons_putc(int c);$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
strchr	inc/string.h	/^char *	strchr(const char *s, char c);$/;"	p	signature:(const char *s, char c)
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f	signature:(const char *s, char c)
strcmp	inc/string.h	/^int	strcmp(const char *s1, const char *s2);$/;"	p	signature:(const char *s1, const char *s2)
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f	signature:(const char *p, const char *q)
strcpy	inc/string.h	/^char *	strcpy(char *dst, const char *src);$/;"	p	signature:(char *dst, const char *src)
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f	signature:(char *dst, const char *src)
strfind	inc/string.h	/^char *	strfind(const char *s, char c);$/;"	p	signature:(const char *s, char c)
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f	signature:(const char *s, char c)
strlcpy	inc/string.h	/^size_t	strlcpy(char *dst, const char *src, size_t size);$/;"	p	signature:(char *dst, const char *src, size_t size)
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f	signature:(char *dst, const char *src, size_t size)
strlen	inc/string.h	/^int	strlen(const char *s);$/;"	p	signature:(const char *s)
strlen	lib/string.c	/^strlen(const char *s)$/;"	f	signature:(const char *s)
strncmp	inc/string.h	/^int	strncmp(const char *s1, const char *s2, size_t size);$/;"	p	signature:(const char *s1, const char *s2, size_t size)
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f	signature:(const char *p, const char *q, size_t n)
strncpy	inc/string.h	/^char *	strncpy(char *dst, const char *src, size_t size);$/;"	p	signature:(char *dst, const char *src, size_t size)
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f	signature:(char *dst, const char *src, size_t size)
strnlen	inc/string.h	/^int	strnlen(const char *s, size_t size);$/;"	p	signature:(const char *s, size_t size)
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f	signature:(const char *s, size_t size)
strtol	inc/string.h	/^long	strtol(const char *s, char **endptr, int base);$/;"	p	signature:(const char *s, char **endptr, int base)
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f	signature:(const char *s, char **endptr, int base)
test_backtrace	kern/init.c	/^test_backtrace(int x)$/;"	f	signature:(int x)
tlbflush	inc/x86.h	/^static __inline void tlbflush(void) __attribute__((always_inline));$/;"	p	signature:(void)
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f	signature:(void)
togglecode	kern/console.c	/^static uint8_t togglecode[256] = $/;"	v	file:
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate	access:public
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate	access:public
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate	access:public
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate	access:public
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate	access:public
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate	access:public
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate	access:public
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate	access:public
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate	access:public
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate	access:public
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate	access:public
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate	access:public
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate	access:public
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate	access:public
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate	access:public
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate	access:public
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate	access:public
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate	access:public
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate	access:public
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate	access:public
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate	access:public
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate	access:public
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate	access:public
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate	access:public
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate	access:public
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate	access:public
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate	access:public
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate	access:public
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate	access:public
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate	access:public
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate	access:public
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate	access:public
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate	access:public
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate	access:public
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate	access:public
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate	access:public
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate	access:public
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
vcprintf	inc/stdio.h	/^int	vcprintf(const char *fmt, va_list);$/;"	p	signature:(const char *fmt, va_list)
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f	signature:(const char *fmt, va_list ap)
vfprintf	inc/stdio.h	/^int	vfprintf(int fd, const char *fmt, va_list);$/;"	p	signature:(int fd, const char *fmt, va_list)
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
vprintfmt	inc/stdio.h	/^void	vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list);$/;"	p	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, va_list)
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)
vsnprintf	inc/stdio.h	/^int	vsnprintf(char *str, int size, const char *fmt, va_list);$/;"	p	signature:(char *str, int size, const char *fmt, va_list)
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f	signature:(char *buf, int n, const char *fmt, va_list ap)
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f	signature:(void)
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon2	file:	access:public
write_eflags	inc/x86.h	/^static __inline void write_eflags(uint32_t eflags) __attribute__((always_inline));$/;"	p	signature:(uint32_t eflags)
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f	signature:(uint32_t eflags)
